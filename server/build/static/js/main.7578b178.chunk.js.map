{"version":3,"sources":["api/Api.js","img/openBackgound.jpg","pages/home/Home.js","components/navbar/Navbar.js","components/input/Input.js","components/login/Login.js","components/sign/sign.js","pages/openingPage/OpeningPage.js","components/addSound/AddSound.js","components/selector/Selector.js","components/searchSound/SearchSound.js","pages/create/Create.js","components/horizontalRange/HorizontalRange.js","components/beatBox/BeatBox.js","components/‏‏padBox/padBox.js","components/spinner/Spinner.js","pages/‏‏playModePage/PlayModePage.js","components/choosePattern/ChoosePattern.js","pages/‏‏playModePage/StarterPlayModePage.js","components/App.js","reportWebVitals.js","index.js"],"names":["url","api","axios","create","baseURL","Home","setConsoleIsOpen","setCurrentCollection","consoleIsOpen","useState","collectionsNames","setCollectionsNames","useEffect","a","Api","get","res","data","getCollectionsName","style","paddingTop","className","map","e","i","onClick","_id","to","src","testImg","alt","ownerName","name","Navbar","openCloseLogMenu","userlog","userDetails","isNavOpen","setIsNavOpen","fontSize","maxHeight","Input","type","onChange","value","Login","isloginCardOpen","setIsloginCardOpen","setIsUserLogedIn","password","setPassword","email","setEmail","showMessage","setShowMessage","handleSubmission","post","toString","localStorage","setItem","user","userName","token","setTimeout","target","split","Sign","setIsSingCardOpen","passwordConfirm","setPasswordConfirm","setUserName","message","setMessage","length","clear","console","log","getItem","OpeningPage","logOrSingCard","setLogOrSingCard","isSingCardOpen","height","width","display","justifyContent","AddSound","setAddSoundIsOpen","setSelectedSound","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","fileName","setFileName","tagsValue","setTagsValue","userMessage","setUserMessage","buttonText","setButtonText","result","join","file","audio","tags","headers","id","htmlFor","size","accept","event","reader","FileReader","files","readAsDataURL","match","Audio","play","Selector","options","setValue","SearchSound","setSearchSoundIsOpen","setSelected","isLoading","setIsLoading","isLoadingOnPage","setIsLoadingOnPage","tagsOptions","setTagsOptions","selectorVal","setSelectorVal","soundsList","setSoundsList","inputVal","setInputVal","selectedSound","selectedSoundAudio","setSelectedSoundAudio","selectedSoundAudioDetails","setSelectedSoundAudioDetails","tempRes","sort","tagsRes","handelSerchByTag","tempSounds","handelSerchByFreetext","handelSoundSelect","res2","playAudio","el","marginLeft","color","Create","addSoundIsOpen","searchSoundIsOpen","fileIsSelected","setFileIsSelected","fileSelectedName","setFileSelectedName","Array","fill","arr","setArr","collectionName","setCollectionName","padHandler","index","replace","tempArr","test","insertPads","formIndex","tempMap","filter","saveCollection","history","tempArr2","sounds","save","push","padding","render","HorizontalRange","max","min","background","BeatBox","boxTiming","thisClass","padIndex","currentColor","rythemArr","setMyRythemArr","boxIsPressed","setBoxIsPressed","onMouseDown","PadBox","setPadIndex","so","rythemObj","setCurrentColor","padsStatus","setMyPadsStatus","ctx","gain","offSet1","setOffSet1","getFile","filePath","arrayBuffer","decode","decodeAudioData","audioBuffer","clip","outPut","state","resume","clipAudioBuffer","createGain","myGain","connect","createBiquadFilter","biquadFilter","frequency","detune","clipSource","createBufferSource","buffer","start","currentTime","playClip","myAudio","find","Spinner","alignItems","PlayModePage","setSounds","gainNode","currentCollection","patternArr","bpm","setBpm","realBpm","setRealBpm","enabled","setEnabled","beat","setBeat","sequencerBeat","setSequencerBeat","restart","setRestart","setRythemObj","saveIsOpen","setSaveIsOpen","patternName","setPatternName","setGain","setFrequency","setGainInSoundsObject","temp","sequencer","setMyRythemObj","tempObj","pad","bool","insertDivs","rowLength","girdClass","singleClass","fromNum","pattern","gacurrentCollectionin","collectionId","patch","position","borderRadius","border","bottom","left","cursor","window","location","reload","timeout","callback","Math","round","margin","transition","ChoosePattern","setChoosePatternIsOpen","tempCurrentCollection","setIsOn","patternOps","setPatternOps","current","setCurrent","patterns","App","setcurrentCollection","isOn","setCtx","setGainNode","setBiquadFilter","savedObj","setSavedObj","patternIsOpen","setPatternIsOpen","setPattern","setPatternArr","tempEffectsArr","AudioContext","Number","arrRes","arrData","arrDataLinks","arrDataSounds","all","then","spread","responses","catch","errors","fetchSounds","destination","isUserLogedIn","path","exact","component","StarterPlayModePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7578b178.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet url;\r\nif (process.env.NODE_ENV === 'development') {\r\n    url = 'http://localhost:5000/api'\r\n}\r\nif (process.env.NODE_ENV === 'production') {\r\n    url = 'api'\r\n}\r\nconst api = axios.create({\r\n    baseURL: url,\r\n})\r\n\r\nexport default api;\r\n","export default __webpack_public_path__ + \"static/media/openBackgound.68c73abe.jpg\";","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Api from '../../api/Api'\r\nimport './home.css'\r\nimport testImg from '../../img/openBackgound.jpg'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = ({ setConsoleIsOpen, setCurrentCollection, consoleIsOpen }) => {\r\n    const [collectionsNames, setCollectionsNames] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getCollectionsName = async () => {\r\n            const res = await Api.get('/sound-collection')\r\n            setCollectionsNames(res.data)\r\n        }\r\n        getCollectionsName()\r\n        if (consoleIsOpen) {\r\n            setConsoleIsOpen(false)\r\n        }\r\n    }, [consoleIsOpen, setConsoleIsOpen])\r\n\r\n    const openConsole = () => {\r\n        setConsoleIsOpen(true)\r\n    }\r\n\r\n\r\n\r\n    const insetCollectionsNames = () => {\r\n        return collectionsNames.map((e, i) => {\r\n            return <section className='home-section' key={`collection${i}`}\r\n                onClick={() => {\r\n                    setCurrentCollection(e._id)\r\n                    openConsole()\r\n                }}\r\n            >\r\n                <Link\r\n                    to={'/console'}\r\n                >\r\n                    <figure className='home-figure-img'>\r\n                        <img src={testImg} alt='fasd' />\r\n                    </figure>\r\n                    <figure className='home-figure-text'>\r\n                        <article className='home-article'>\r\n                            <span >{e.ownerName}</span>\r\n                            <h3 className='home-h3'>{e.name}</h3>\r\n                        </article>\r\n                    </figure>\r\n                </Link>\r\n            </section >\r\n        })\r\n    }\r\n    return (\r\n        <div style={{ paddingTop: '5rem' }}>\r\n            <div className='home-main'>\r\n                {collectionsNames && insetCollectionsNames()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css';\r\n\r\n\r\nconst Navbar = ({ openCloseLogMenu, userlog, userDetails }) => {\r\n    const [isNavOpen, setIsNavOpen] = useState(false);\r\n\r\n\r\n    const menuOpen = () => {\r\n        if (isNavOpen) {\r\n            return '300px'\r\n        } else {\r\n            return '0'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-nav\" style={{ fontSize: '17px' }}>\r\n                <Link to='/' className=\"menu-logo\">\r\n                    A Beat Mor\r\n            </Link>\r\n                <div className=\"hamburger\" onClick={() => { setIsNavOpen(!isNavOpen) }}>\r\n                    {/* nav here */}\r\n                dads\r\n            </div>\r\n                <div className=\"nav-menu\" style={{ maxHeight: menuOpen() }}>\r\n                    <Link to='/search' className=\"menu-link\">Search</Link>\r\n                    <Link to='/create' className=\"menu-link\">Create</Link>\r\n                    <Link to={`/`} className=\"menu-link\">Home</Link>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","const Input = ({ type, onChange, value, className }) => {\r\n    return (\r\n        <input\r\n            className={className} onChange={onChange} value={value}></input>\r\n    )\r\n}\r\n\r\nexport default Input;","import { useEffect, useState } from 'react';\r\nimport Input from '../input/Input'\r\nimport Api from '../../api/Api'\r\n\r\nconst Login = ({ isloginCardOpen, setIsloginCardOpen, setIsUserLogedIn }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n\r\n    const handleSubmission = async () => {\r\n        try {\r\n            const res = await Api.post('/users/login', {\r\n                password: password.toString(),\r\n                email\r\n            });\r\n            // if (isMounted) {\r\n            localStorage.setItem('name', res.data.user.userName)\r\n            localStorage.setItem('token', res.data.token)\r\n            localStorage.setItem('id', res.data.user._id)\r\n            setIsloginCardOpen(false);\r\n            setIsUserLogedIn(true);\r\n            // }\r\n        } catch (e) {\r\n            if (!showMessage) {\r\n                setShowMessage(true)\r\n                setTimeout(() => {\r\n                    setShowMessage(false)\r\n                }, 2000)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='glow-card-background'>\r\n            <div className='glow-card-container'>\r\n                <h2\r\n                    className='glow-card-h1 font-red-shadow-red upprcase margin-top-1r'\r\n                >Welcome Back</h2>\r\n                <br></br>\r\n                <h3\r\n                    className='glow-card-h3 font-white-shadow-green margin-top-1r'\r\n                >Email</h3>\r\n                <Input\r\n                    className={'glow-card-input glow-card-h3'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='glow-card-h3 font-white-shadow-green  margin-top-1r'\r\n                >Password</h3>\r\n                <Input\r\n                    className={'glow-card-input glow-card-h3 '}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value.split(' '))}\r\n                />\r\n                <div className='flex-space-between margin-top-2r'>\r\n                    <button\r\n                        className='glow-card-button '\r\n                        type='button' onClick={() => { handleSubmission() }}\r\n                    >Submit</button>\r\n                    <button\r\n                        className='glow-card-button'\r\n                        type='button' onClick={() => {\r\n                            setPassword('')\r\n                            setEmail('')\r\n                            setIsloginCardOpen(false)\r\n\r\n                        }}\r\n                    >Cancel</button>\r\n                </div>\r\n                <br />\r\n                {!showMessage && < br />}\r\n                {showMessage && <h4 className='glow-card-h3'>Wrong input please try again</h4>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Login;","import { useState } from 'react';\r\nimport Input from '../input/Input'\r\nimport Api from '../../api/Api'\r\n// import './sign.css'\r\n\r\nconst Sign = ({ setIsSingCardOpen, setIsUserLogedIn }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const handleSubmission = async () => {\r\n        if (passwordConfirm !== password) {\r\n            setShowMessage(true)\r\n            setMessage('Your password conformation is in currect')\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n            }, 2000)\r\n        } else if (password.length < 8) {\r\n            setShowMessage(true)\r\n            setMessage('Your password must be at least 8 digits')\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n            }, 2000)\r\n        } else {\r\n            try {\r\n                const res = await Api.post('/users/', {\r\n                    password: password.toString(),\r\n                    email,\r\n                    userName\r\n                })\r\n                localStorage.clear()\r\n                localStorage.setItem('name', res.data.user.userName)\r\n                localStorage.setItem('token', res.data.token)\r\n                setIsSingCardOpen(false)\r\n                setIsUserLogedIn(true)\r\n                console.log(localStorage.getItem('name'))\r\n                console.log(localStorage.getItem('token'))\r\n            } catch (e) {\r\n                setMessage('Error in email Check the spelling and make sure you are not already registered')\r\n                setShowMessage(true)\r\n                setTimeout(() => {\r\n                    setShowMessage(false)\r\n                }, 2000)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='glow-card-background'>\r\n            <div className='glow-card-container'>\r\n                <h2\r\n                    className='glow-card-h1 font-red-shadow-red'\r\n                >Ready to get started</h2>\r\n                <h3\r\n                    className='glow-card-h4 font-white-shadow-green'\r\n                >Write your user name</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'glow-card-input glow-card-h4'}\r\n                    value={userName}\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='glow-card-h4 font-white-shadow-green'\r\n                // className='signin-container-h3'\r\n                >Enter your Email</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'glow-card-input glow-card-h4'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='glow-card-h4 font-white-shadow-green'\r\n                >Choose password</h3>\r\n                <Input\r\n                    className={'glow-card-input glow-card-h4'}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='glow-card-h4 font-white-shadow-green'\r\n                >Confirm your password</h3>\r\n                <Input\r\n                    className={'glow-card-input glow-card-h4'}\r\n                    value={passwordConfirm}\r\n                    onChange={(e) => setPasswordConfirm(e.target.value)}\r\n\r\n                />\r\n                <br></br>\r\n                {!showMessage && <div className='flex-space-between'>\r\n                    <button\r\n                        className='glow-card-button'\r\n                        type='button' onClick={() => handleSubmission()}\r\n                    >Submit</button>\r\n                    <button\r\n                        className='glow-card-button'\r\n                        type='button' onClick={() => {\r\n                            setPassword('')\r\n                            setEmail('')\r\n                            setIsSingCardOpen(false)\r\n                        }}\r\n                    >Cancel</button>\r\n                </div>}\r\n\r\n                {showMessage &&\r\n                    <h4 className='glow-card-h3 font-orange-shadow-red'>{message}</h4>\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Sign;","// import img from '../../img/openBackgound.jpg'\r\nimport { useState } from 'react';\r\n// import './openingPage.css';\r\n// import '../../style.css';\r\nimport Login from '../../components/login/Login';\r\nimport Sign from '../../components/sign/sign';\r\n\r\nconst OpeningPage = ({ setIsUserLogedIn }) => {\r\n    //User press the Get Started button.\r\n    const [logOrSingCard, setLogOrSingCard] = useState(false)\r\n    //Sing button is pressed.\r\n    const [isSingCardOpen, setIsSingCardOpen] = useState(false)\r\n    //Log In button is pressed.\r\n    const [isloginCardOpen, setIsloginCardOpen] = useState(false)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='glow-card-background'>\r\n                <div className='glow-card-container' style={{ height: '80vh', width: '80%' }}>\r\n                    <h1\r\n                        className='glow-card-h1 font-red-shadow-red upprcase'\r\n                    >A Beat Mor</h1>\r\n                    <h2\r\n                        className='glow-card-h2 font-white-shadow-green'\r\n                    >Tomorrow's sound starts today</h2>\r\n                    <h3\r\n                        className='glow-card-h3 font-white-shadow-green'\r\n                    >\r\n                        Is your head full of sounds? You have an idea for the beat of the next hit?</h3>\r\n                    <h2\r\n                        className='glow-card-h2 font-white-shadow-green'\r\n                    >Come and share...</h2>\r\n                    <h3\r\n                        className='glow-card-h3 font-white-shadow-green'\r\n                    >Upload your own unique sounds or use existing sounds Create the rhythm Add audio effects.\r\n                        Save and share and let the world experience your touch.</h3>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: !logOrSingCard ? 'center' : 'space-around ' }}>\r\n                        {!logOrSingCard && <button\r\n                            className='glow-card-button'\r\n                            onClick={() => {\r\n\r\n                                setLogOrSingCard(true)\r\n                            }\r\n                            }>Get started</button>}\r\n                        {logOrSingCard &&\r\n                            <>\r\n                                <button\r\n                                    className='glow-card-button'\r\n                                    onClick={() => setIsloginCardOpen(true)}>Log in</button>\r\n                                <button\r\n                                    className='glow-card-button'\r\n                                    onClick={() => setIsSingCardOpen(true)}>Sing</button>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isloginCardOpen && <Login\r\n                setIsloginCardOpen={setIsloginCardOpen}\r\n                setIsUserLogedIn={setIsUserLogedIn}\r\n            />}\r\n            {isSingCardOpen && <Sign\r\n                setIsSingCardOpen={setIsSingCardOpen}\r\n                setIsUserLogedIn={setIsUserLogedIn}\r\n            />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpeningPage;","import { useState } from 'react'\r\nimport Api from '../../api/Api'\r\nimport Input from '../input/Input'\r\n// import Selector from '../selector/Selector'\r\nimport './addSound.css'\r\nconst AddSound = ({ setAddSoundIsOpen, setSelectedSound }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n    const [fileName, setFileName] = useState('');\r\n    const [tagsValue, setTagsValue] = useState(null);\r\n    // const selectorOptions = ['red', 'blue', 'green', 'yellow', 'ligth-blue', 'purpule']\r\n    // const [selectValue, setSelectVal] = useState(selectorOptions[0]);\r\n\r\n    const [userMessage, setUserMessage] = useState(null);\r\n    const [buttonText, setButtonText] = useState('Submit');\r\n\r\n\r\n    const getFileFromUser = (event) => {\r\n        let reader = new FileReader();\r\n        if (event.target.files[0]) {\r\n            reader.readAsDataURL(event.target.files[0])\r\n            setSelectedFile(reader);\r\n            setIsFilePicked(true);\r\n\r\n            if (event.target.files[0].name.match(/\\.wav$/)) {\r\n                setFileName(event.target.files[0].name.split('.wav')[0])\r\n            }\r\n            if (event.target.files[0].name.match(/\\.mp3$/)) {\r\n                setFileName(event.target.files[0].name.split('.mp3')[0])\r\n            }\r\n\r\n            setButtonText('Submit')\r\n        } else {\r\n            setIsFilePicked(false);\r\n        }\r\n    }\r\n    const handleSubmission = async () => {\r\n        if (!tagsValue) {\r\n            setUserMessage('File must have at least one tag')\r\n            setButtonText('Try Again')\r\n        } else {\r\n            if (isFilePicked) {\r\n                const token = localStorage.getItem('token')\r\n                // console.log(token)\r\n                const file = await selectedFile.result.split('data:audio/wav;base64,').join('')\r\n                try {\r\n                    const data = await Api.post('sounds', {\r\n                        name: fileName,\r\n                        audio: file,\r\n                        tags: tagsValue\r\n                    }, {\r\n                        headers: {\r\n                            \"Authorization\": `Bearer ${token}`\r\n                        }\r\n                    })\r\n\r\n                    setUserMessage('Succeeded')\r\n                    // setTimeout(() => {\r\n                    setUserMessage('')\r\n                    // }, 2000);\r\n                    setSelectedFile(null)\r\n                    setIsFilePicked(null)\r\n                    setFileName('')\r\n                    setTagsValue(null)\r\n                    console.log(data.data.name)\r\n                    setSelectedSound({\r\n                        name: data.data.name,\r\n                        id: data.data._id,\r\n                        audio: data.data.audio\r\n                    })\r\n                    setAddSoundIsOpen(false)\r\n                } catch (e) {\r\n                    setUserMessage('File name must be unique!')\r\n                    setButtonText('Try Again')\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='add-sound-top'>\r\n                <div className='add-sound-container'>\r\n                    <div className='add-sound-exit'\r\n                        onClick={() => setAddSoundIsOpen(false)}\r\n                    >\r\n                        X\r\n                    </div>\r\n                    <h2\r\n                        className='add-sound-container-h2'\r\n                    >Upload new sound</h2>\r\n                    <br className='add-sound-br'></br>\r\n                    <h3\r\n                        className='add-sound-container-h3'\r\n                    >Insert sound name</h3>\r\n                    <p\r\n                        className='add-sound-container-p'\r\n                    >Must be unique (auto fill when upload file)</p>\r\n                    <Input\r\n                        className={'add-sound-input'}\r\n                        value={fileName}\r\n                        onChange={(e) => setFileName(e.target.value)}\r\n                    />\r\n                    <br className='add-sound-br'></br>\r\n                    <h3\r\n                        className='add-sound-container-h3'\r\n                    >Insert sound tags</h3>\r\n                    <p\r\n                        className='add-sound-container-p'\r\n                    >A space must be left between each tag</p>\r\n                    <Input\r\n                        className={'add-sound-input'}\r\n                        value={tagsValue ? tagsValue.join(' ') : ''}\r\n                        onChange={(e) => setTagsValue(e.target.value.split(' '))}\r\n                    />\r\n                    <br className='add-sound-br'></br>\r\n                    {/* <div className='selector' >\r\n                    <div>\r\n                        <h3>Select color</h3>\r\n                        <p>That will be the button color</p>\r\n                    </div>\r\n                    <Selector\r\n                        className={'add-sound-input'}\r\n                        options={selectorOptions}\r\n                        value={selectValue}\r\n                        setValue={setSelectVal}\r\n                    />\r\n                </div>\r\n                <br></br> */}\r\n                    <label htmlFor=\"upload-sound\">Upload file</label>\r\n                    <div\r\n                        className='add-sound-button-div'>\r\n                        <input\r\n                            id='upload-sound'\r\n                            size=\"80\"\r\n                            type='file'\r\n                            accept='audio/mp3, audio/wav '\r\n                            onChange={getFileFromUser}\r\n                        />\r\n                        <div>\r\n                            {isFilePicked && <button\r\n                                className='add-sound-button'\r\n                                onClick={() => {\r\n                                    const newAudioTest = new Audio(`${selectedFile.result}`)\r\n                                    newAudioTest.play()\r\n                                }}\r\n                            >Test</button>}\r\n                            <button\r\n                                className='add-sound-button'\r\n                                type='button' onClick={handleSubmission}\r\n                            >{buttonText}</button>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        {!userMessage && <br />}\r\n                        <p\r\n                            className='add-sound-container-p'\r\n                        >{userMessage}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AddSound;","const Selector = ({ value, options, setValue, className }) => {\r\n    const setOptions = () => {\r\n        return options.map(e => {\r\n            return <option key={e} id={e}>{e}</option>\r\n        })\r\n    }\r\n    return (\r\n        <select\r\n            className={className}\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n        >\r\n            {options && setOptions()}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Selector;","import './searchSound.css'\r\nimport Selector from '../selector/Selector'\r\nimport { useEffect, useState } from 'react'\r\nimport Api from '../../api/Api'\r\nimport Input from '../input/Input'\r\n\r\n\r\nconst SearchSound = ({ setSearchSoundIsOpen, setSelected }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isLoadingOnPage, setIsLoadingOnPage] = useState(false);\r\n\r\n    const [tagsOptions, setTagsOptions] = useState(null)\r\n    const [selectorVal, setSelectorVal] = useState(null)\r\n    // const [userMessage, setUserMessage] = useState('')\r\n\r\n    const [soundsList, setSoundsList] = useState([])\r\n    const [inputVal, setInputVal] = useState('')\r\n\r\n    const [selectedSound, setSelectedSound] = useState(null)\r\n    const [selectedSoundAudio, setSelectedSoundAudio] = useState(null)\r\n    const [selectedSoundAudioDetails, setSelectedSoundAudioDetails] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const tagsRes = async () => {\r\n            try {\r\n                const tempRes = await Api.get('/sounds/tags')\r\n                setTagsOptions(await tempRes.data.sort())\r\n                // console.log(tempRes)\r\n                setSelectorVal(await tempRes.data[0])\r\n                setIsLoading(false)\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n\r\n        }\r\n        tagsRes()\r\n    }, [])\r\n\r\n\r\n    const handelSerchByTag = async () => {\r\n        setIsLoadingOnPage(true)\r\n        const tempSounds = await Api.get(`/sounds/tags/${selectorVal}`)\r\n        // console.log(tempSounds.data)\r\n        setSoundsList(tempSounds.data)\r\n        setIsLoadingOnPage(false)\r\n    }\r\n    const handelSerchByFreetext = async () => {\r\n        if (inputVal.length > 0) {\r\n            setIsLoadingOnPage(true)\r\n            const tempSounds = await Api.get(`/sounds/search/${inputVal}`)\r\n            // console.log(tempSounds)\r\n            // console.log(tempSounds.data)\r\n            setSoundsList(tempSounds.data)\r\n            setIsLoadingOnPage(false)\r\n        }\r\n    }\r\n    const handelSoundSelect = async (e) => {\r\n        if (selectedSound === e.target.id) {\r\n            setSelectedSound(null)\r\n        } else {\r\n            setIsLoadingOnPage(true)\r\n            setSelectedSound(e.target.id)\r\n            const res = await Api.get(`/sounds/${e.target.id}`)\r\n            const res2 = await res.data[0].audio\r\n            setSelectedSoundAudioDetails(await res.data[0])\r\n            setSelectedSoundAudio(new Audio(`data:audio/wav;base64,${res2}`))\r\n            setIsLoadingOnPage(false)\r\n        }\r\n    }\r\n    const playAudio = async () => {\r\n        setIsLoadingOnPage(true)\r\n        selectedSoundAudio.play()\r\n        // setSelectedSoundAudio(res2)\r\n        // const tempAudio = new Audio(res2)\r\n        // tempAudio.play()\r\n        setIsLoadingOnPage(false)\r\n    }\r\n\r\n    const setList = () => {\r\n        return soundsList.map((e, i) => {\r\n            return (\r\n                <div\r\n                    className='search-sound-result-container'\r\n                    key={`soundList-${i}`}\r\n                >\r\n                    <div\r\n                        onClick={(e) => handelSoundSelect(e)}\r\n                        id={e._id}\r\n\r\n                        className={`search-sound-file-sound ${selectedSound === e._id ? 'search-sound-file-sound-selected' : ''}`}\r\n                    >{e.name}\r\n                        <div style={{ display: 'flex' }}\r\n                            id={e._id}\r\n                        >\r\n                            <span>tags: </span>\r\n                            {e.tags.map((el, i) => {\r\n                                return <span\r\n                                    id={e._id}\r\n                                    style={{ marginLeft: '0.6rem' }}\r\n                                    key={`soundlist-tag-${i}`}>{el}</span>\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    {selectedSound === e._id &&\r\n                        <button\r\n                            className='search-sound-button'\r\n                            style={{ color: 'var(--led-red)' }}\r\n                            onClick={() => playAudio()}\r\n                        >Test</button>}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>{isLoadingOnPage && <div className='search-sound-loading-on-page'></div>}\r\n            <div className='search-sound-top'>\r\n                <div className=\"search-sound-container\">\r\n                    {!isLoading && <>\r\n                        <div className='add-sound-exit'\r\n                            onClick={() => setSearchSoundIsOpen(false)}\r\n                        >X</div>\r\n                        <h2 className=\"search-sound-container-h2\">Search sound</h2>\r\n                        <div className='search-sound-button-div'>\r\n                            <h3 className=\"search-sound-container-h3\">Search by tag name:</h3>\r\n                            <Selector\r\n                                value={selectorVal}\r\n                                options={tagsOptions}\r\n                                setValue={setSelectorVal}\r\n                                className={'search-sound-selector'}\r\n                            />\r\n                            <button\r\n                                className='search-sound-button'\r\n                                onClick={() => handelSerchByTag()}\r\n                            >Search</button>\r\n                        </div>\r\n                        <div className='search-sound-button-div'>\r\n                            <h3 className=\"search-sound-container-h3\">Search by sound name:</h3>\r\n                            <Input\r\n                                className={'search-sound-input'}\r\n                                value={inputVal}\r\n                                onChange={(e) => setInputVal(e.target.value)}\r\n                            />\r\n                            <button\r\n                                className='search-sound-button'\r\n                                onClick={() => handelSerchByFreetext()}\r\n                            >Search</button>\r\n                        </div>\r\n                        <div className='search-sound-results'>\r\n                            {soundsList.length > 0 && setList()}\r\n                        </div>\r\n                        <button\r\n                            className='search-sound-button'\r\n                            onClick={() => {\r\n                                setSearchSoundIsOpen(false)\r\n                                setSelected(\r\n                                    {\r\n                                        name: selectedSoundAudioDetails.name,\r\n                                        id: selectedSoundAudioDetails._id,\r\n                                        audio: selectedSoundAudioDetails.audio\r\n\r\n                                    })\r\n                            }\r\n                            }\r\n                        >\r\n                            Submit\r\n                    </button>\r\n                    </>}\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchSound;","\r\nimport './create.css'\r\nimport AddSound from '../../components/addSound/AddSound'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Selector from '../../components/selector/Selector'\r\nimport Api from '../../api/Api'\r\nimport SearchSound from '../../components/searchSound/SearchSound'\r\nimport Input from '../../components/input/Input'\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n    const [addSoundIsOpen, setAddSoundIsOpen] = useState(false)\r\n    const [searchSoundIsOpen, setSearchSoundIsOpen] = useState(false)\r\n\r\n    const [fileIsSelected, setFileIsSelected] = useState(false)\r\n    const [selectedSound, setSelectedSound] = useState(null)\r\n    const [fileSelectedName, setFileSelectedName] = useState('')\r\n\r\n    const [arr, setArr] = useState(new Array(32).fill({ color: '' }))\r\n\r\n    const [selectorVal, setSelectorVal] = useState('purpule')\r\n    const selectorOps = ['ligth-blue', 'purpule', 'red', 'yellow', 'blue', 'green',];\r\n    const [collectionName, setCollectionName] = useState('')\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedSound) {\r\n            setFileSelectedName(selectedSound.name)\r\n        }\r\n    }, [selectedSound])\r\n\r\n\r\n    const padHandler = (e) => {\r\n        // console.log(searchSoundIsOpen)///////////\r\n        const index = e.target.id.replace('pad-num-', '')\r\n        if (fileIsSelected && selectedSound) {\r\n            const tempArr = arr;\r\n            tempArr[index] = {\r\n                ...tempArr[index],\r\n                id: selectedSound.id,\r\n                audio: selectedSound.audio,\r\n                name: selectedSound.name,\r\n                color: selectorVal\r\n            }\r\n            setFileIsSelected(false)\r\n            setArr(tempArr)\r\n        } else {\r\n            if (arr[index].id) {\r\n                const test = async () => {\r\n                    const audio = new Audio(`data:audio/mp3;base64,${arr[index].audio}`)\r\n                    await audio.play()\r\n                }\r\n                test()\r\n            }\r\n        }\r\n    }\r\n\r\n    const insertPads = (formIndex) => {\r\n        const tempMap = arr.filter((e, i) => {\r\n            return i >= formIndex && i < formIndex + 6\r\n        })\r\n        return <div className='pads-grid'>\r\n            {tempMap.map((e, i) => <div\r\n                className={`single-pad ${arr[formIndex + i].color}`}\r\n                key={`create-pad-${formIndex + i}`}\r\n                id={`pad-num-${formIndex + i}`}\r\n                onClick={padHandler}\r\n            ></div>)}\r\n        </div>\r\n    }\r\n\r\n    const saveCollection = async (history) => {\r\n        const tempArr = arr.filter(e => e.id)\r\n        if (tempArr.length === 24 && collectionName.length > 0) {\r\n            try {\r\n                const token = localStorage.getItem('token')\r\n                // console.log(token)\r\n                const tempArr2 = tempArr.map(e => {\r\n                    return { id: e.id, color: e.color }\r\n                })\r\n                console.log(tempArr2)\r\n                const save = await Api.post('/sound-collection', {\r\n                    name: collectionName,\r\n                    sounds: tempArr2\r\n                },\r\n                    {\r\n                        headers: {\r\n                            \"Authorization\": `Bearer ${token}`\r\n                        }\r\n                    }\r\n                )\r\n\r\n                await history.push(\"/home\");\r\n                console.log(save)\r\n            } catch (e) {\r\n                console.log('the name is in use choose a differnt collection name')\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {searchSoundIsOpen && <SearchSound\r\n                setSearchSoundIsOpen={setSearchSoundIsOpen}\r\n                setSelected={setSelectedSound}\r\n            />}\r\n            {addSoundIsOpen && <AddSound\r\n                setAddSoundIsOpen={setAddSoundIsOpen}\r\n                setSelectedSound={setSelectedSound}\r\n            />}\r\n            <div className='create-container'>\r\n                <div className='create-nav'>\r\n                    <h2 className=' create-h2'>Fill the board with sound</h2>\r\n                    <div className='create-buttons-div'>\r\n                        <h3 className='create-h3'>Upload or choose other sound, than fill the pad board as your wish</h3>\r\n                    </div>\r\n                    <div className='create-buttons-div'>\r\n                        <button\r\n                            className='create-button'\r\n                            type='button'\r\n                            onClick={() => setAddSoundIsOpen(true)}\r\n                        >Upload sound</button>\r\n\r\n                        <button\r\n                            className='create-button'\r\n                            type='button'\r\n                            onClick={() => setSearchSoundIsOpen(true)}\r\n                        >Search sound</button>\r\n\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`${fileIsSelected ? 'create-file-sound-selected' : ''} create-file-sound`}\r\n                        onClick={() => setFileIsSelected(!fileIsSelected)}\r\n                    ><span\r\n                        style={{ color: `var(--led-${selectorVal})` }}\r\n                    >SOUND: </span>{fileSelectedName}</div>\r\n\r\n                    <div className='create-buttons-div'>\r\n                        <h3\r\n                            className='create-h3'\r\n                        >Button color</h3>\r\n                        <Selector\r\n                            value={selectorVal}\r\n                            options={selectorOps}\r\n                            setValue={setSelectorVal}\r\n                            className={'create-selector'}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className='pads-container'>\r\n                    <div className='pads-container-san'>\r\n                        {insertPads(0)}\r\n                        {insertPads(7)}\r\n                        {insertPads(13)}\r\n                        {insertPads(19)}\r\n                    </div>\r\n                    <div\r\n                        style={{ display: 'flex', justifyContent: 'space-around', width: '100%', padding: '0 1rem' }}\r\n                    >\r\n                        <h3\r\n                            className='create-h3'\r\n                        >Collection Name:</h3>\r\n                        <Input\r\n                            className={\"create-selector-input\"}\r\n                            value={collectionName}\r\n                            onChange={(e) => setCollectionName(e.target.value)}\r\n                        />\r\n\r\n\r\n                        <Route render={({ history }) => (\r\n                            <button\r\n                                className='create-button'\r\n                                onClick={() => saveCollection(history)}\r\n\r\n                            >Save</button>\r\n                        )} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Create;","import './horizontalRange.css'\r\nconst HorizontalRange = ({ value, setValue\r\n    , max, min }) => {\r\n    return (\r\n        <div style={{ padding: '0.3rem 1rem', background: 'none', width: '100%' }}>\r\n            <input\r\n                min={min}\r\n                max={max}\r\n                type='range'\r\n                value={value}\r\n                onChange={setValue}\r\n            ></input>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HorizontalRange;","import { useEffect, useState } from 'react'\r\n\r\nconst BeatBox = ({ boxTiming, id, thisClass, padIndex, currentColor, rythemArr, setMyRythemArr }) => {\r\n    const [boxIsPressed, setBoxIsPressed] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setBoxIsPressed(rythemArr[id - 1])\r\n    }, [rythemArr, id, padIndex])\r\n    return (\r\n        <div\r\n            className={`${thisClass} ${boxTiming === id && !boxIsPressed ? 'play-mode-boxIsOn' : ''}\r\n            ${boxIsPressed && boxTiming !== id && `${currentColor} empty-center-of-box`}\r\n            ${boxIsPressed && boxTiming === id && currentColor}\r\n            `}\r\n            onMouseDown={() => {\r\n                const tempArr = [...rythemArr]\r\n                if (!boxIsPressed) {\r\n                    tempArr[32] = tempArr[32] === false ? 1 : tempArr[32] + 1\r\n                } else {\r\n                    tempArr[32] = tempArr[32] === 1 ? false : tempArr[32] - 1\r\n                }\r\n                setBoxIsPressed(!boxIsPressed)\r\n                tempArr[id - 1] = !tempArr[id - 1]\r\n                setMyRythemArr(tempArr, padIndex)\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BeatBox;","import { useEffect, useState } from \"react\"\r\nimport { decode } from 'base64-arraybuffer'\r\nconst PadBox = (\r\n    { id,\r\n        thisClass,\r\n        padIndex,\r\n        setPadIndex,\r\n        so,\r\n        boxTiming,\r\n        rythemObj,\r\n        setCurrentColor,\r\n        padsStatus,\r\n        setMyPadsStatus,\r\n        ctx,\r\n        gain\r\n    }) => {\r\n\r\n    const [offSet1, setOffSet1] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (padsStatus && rythemObj[boxTiming - 1] === true) {\r\n            const getFile = async (filePath) => {\r\n                const arrayBuffer = decode(filePath)\r\n                const audioBuffer = await ctx.decodeAudioData(arrayBuffer)\r\n                return audioBuffer;\r\n            }\r\n            const playClip = async (clip, outPut) => {\r\n                if (ctx.state === 'suspended') {\r\n                    ctx.resume()\r\n                }\r\n                const clipAudioBuffer = await getFile(clip)\r\n                const myGain = await ctx.createGain()\r\n                myGain.gain.value = so.gain\r\n                myGain.connect(outPut)\r\n\r\n                let biquadFilter = await ctx.createBiquadFilter();\r\n                biquadFilter.frequency.value = so.frequency\r\n                biquadFilter.detune.value = so.detune\r\n                // biquadFilter.detune.value = 0\r\n                biquadFilter.type = so.type\r\n                biquadFilter.connect(myGain)\r\n                // biquadFilter.type = 'lowpass'\r\n\r\n                const clipSource = ctx.createBufferSource()\r\n                clipSource.buffer = clipAudioBuffer;\r\n                clipSource.connect(biquadFilter);\r\n\r\n                // console.log(clipSource)\r\n                if (offSet1 === 0) {\r\n                    clipSource.start()\r\n                    // console.log(ctx.currentTime - offSet)\r\n                    // console.log(myGain)\r\n                    setOffSet1(0)\r\n                } else {\r\n                    clipSource.start(0, ctx.currentTime - offSet1)\r\n                }\r\n            }\r\n            playClip(so.myAudio, gain)\r\n\r\n        }\r\n\r\n    }, [boxTiming, rythemObj, id, so, padsStatus, padIndex, gain, offSet1, ctx])\r\n\r\n\r\n\r\n\r\n\r\n    const userClick = () => {\r\n        setPadIndex(id)\r\n        const somethingInOn = rythemObj.find(e => e === true)\r\n        if (somethingInOn && padIndex === id) {\r\n            setMyPadsStatus(padIndex, !padsStatus)\r\n        }\r\n        setCurrentColor(so.color)\r\n    }\r\n\r\n    const setIcon = () => {\r\n        if (rythemObj[32]) {\r\n            if (padsStatus) {\r\n                return <i className=\"fas fa-undo fa-1x\"></i>\r\n            }\r\n            return <i className=\"fas fa-pause fa-1x\"></i>\r\n        }\r\n        return ''\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`${thisClass} \r\n            ${so.color}\r\n            ${padIndex === id ? `buttonOn` : 'buttonOff'}\r\n            ${padsStatus && rythemObj[boxTiming - 1] === true ? `play-mode-boxIsOn` : 'buttonOff'}`\r\n                }\r\n                onMouseDown={userClick}\r\n            >\r\n                <div className='play-mode-pad-icon'>{setIcon()}</div>\r\n\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PadBox;","import './spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: \"center\", height: '100vh' }}>\r\n            <div className=\"loader\">\r\n                <span className=\"loader-span\"></span>\r\n                <span className=\"loader-span\"></span>\r\n                <span className=\"loader-span\"></span>\r\n                <span className=\"loader-span\"></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport HorizontalRange from '../../components/horizontalRange/HorizontalRange'\r\nimport ReactInterval from 'react-interval';\r\nimport './playModePage.css'\r\nimport BeatBox from '../../components/beatBox/BeatBox'\r\nimport PadBox from '../../components/‏‏padBox/padBox'\r\nimport Spinner from '../../components/spinner/Spinner'\r\nimport Api from '../../api/Api'\r\n\r\n\r\nconst PlayModePage = ({\r\n    ctx,\r\n    sounds,\r\n    setSounds,\r\n    gainNode,\r\n    biquadFilter,\r\n    currentCollection,\r\n    patternArr\r\n}) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const [bpm, setBpm] = useState(120)\r\n    const [realBpm, setRealBpm] = useState(120)\r\n    const [enabled, setEnabled] = useState(false)\r\n    const [beat, setBeat] = useState(0)\r\n    const [sequencerBeat, setSequencerBeat] = useState(0)\r\n    const [restart, setRestart] = useState(false)\r\n\r\n    const [rythemObj, setRythemObj] = useState({})\r\n    const [padIndex, setPadIndex] = useState(1)\r\n    const [currentColor, setCurrentColor] = useState('ligth-blue');\r\n\r\n    const [saveIsOpen, setSaveIsOpen] = useState(false)\r\n    const [patternName, setPatternName] = useState('')\r\n    const [message, setMessage] = useState('Choose pattern name')\r\n\r\n    //---Is Loading------///\r\n    useEffect(() => {\r\n        if (sounds && patternArr) {\r\n            setIsLoading(false)\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n    }, [sounds, patternArr])\r\n\r\n\r\n    //====AudioApi=====///\r\n    const [gain, setGain] = useState(0.75)\r\n    const [frequency, setFrequency] = useState(350)\r\n\r\n    useEffect(() => {\r\n        if (gainNode) {\r\n            gainNode.gain.value = gain\r\n        }\r\n        if (biquadFilter) {\r\n            biquadFilter.frequency.value = frequency\r\n            biquadFilter.type = 'notch'\r\n        }\r\n    }, [gainNode, gain, biquadFilter, frequency])\r\n\r\n    const setGainInSoundsObject = (e, type) => {\r\n        const tempSounds = [...sounds]\r\n        if (type === 'gain') {\r\n            tempSounds[padIndex - 1][type] = e.target.value / 100\r\n        } else if (type === 'type') {\r\n            tempSounds[padIndex - 1][type] = e.target.value\r\n        } else {\r\n            tempSounds[padIndex - 1][type] = e.target.value\r\n        }\r\n\r\n        setSounds(tempSounds)\r\n    }\r\n\r\n\r\n    //-----------\r\n    useEffect(() => {\r\n        console.log(patternArr)\r\n        // if (patternArr) {\r\n        let temp = {}\r\n        if (patternArr === 'empty') {\r\n            for (let i = 0; i < 24; i++) {\r\n                temp[i + 1] = new Array(33).fill(false)\r\n            }\r\n        } else {\r\n            for (let i = 0; i < 24; i++) {\r\n                temp[i + 1] = patternArr[i].sequencer\r\n            }\r\n        }\r\n        temp.padsStatus = new Array(24).fill(true)\r\n        setRythemObj(temp)\r\n        // console.log(temp)\r\n        // console.log(sounds)\r\n        // }\r\n    }, [restart, setSounds, patternArr])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setRealBpm(bpm)\r\n        }, 1000)\r\n    }, [bpm])\r\n\r\n    const setMyRythemObj = (arr, index) => {\r\n        const tempObj = { ...rythemObj, [index]: arr }\r\n        setRythemObj({ ...tempObj })\r\n    }\r\n    const setMyPadsStatus = (pad, bool) => {\r\n        const tempArr = [...rythemObj.padsStatus]\r\n        tempArr[pad - 1] = bool\r\n        const tempObj = { ...rythemObj, padsStatus: tempArr }\r\n        setRythemObj({ ...tempObj })\r\n    }\r\n\r\n\r\n    const insertDivs = (rowLength, girdClass, singleClass, fromNum) => {\r\n        const tempMap = new Array(rowLength).fill(1)\r\n        const temp = <div className={girdClass}>\r\n            {tempMap.map((e, i) => {\r\n                if (singleClass === 'play-mode-single-sequencer') {\r\n                    return (\r\n                        <BeatBox\r\n                            key={`${singleClass}${fromNum + i}`}\r\n                            thisClass={singleClass}\r\n                            boxTiming={sequencerBeat}\r\n                            id={fromNum + i}\r\n                            padIndex={padIndex}\r\n                            currentColor={currentColor}\r\n                            rythemArr={rythemObj[`${padIndex}`]}\r\n                            setMyRythemArr={setMyRythemObj}\r\n                        />\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <PadBox\r\n                            key={`${singleClass}${fromNum + i}`}\r\n                            thisClass={singleClass}\r\n                            id={fromNum + i}\r\n                            padIndex={padIndex}\r\n                            setPadIndex={setPadIndex}\r\n                            boxTiming={sequencerBeat}\r\n                            rythemObj={rythemObj[`${fromNum + i}`]}\r\n                            setCurrentColor={setCurrentColor}\r\n                            padsStatus={rythemObj.padsStatus[fromNum + i - 1]}\r\n                            setMyPadsStatus={setMyPadsStatus}\r\n\r\n                            ctx={ctx}\r\n                            gain={biquadFilter}\r\n                            so={sounds[fromNum + i - 1]}\r\n                        />\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n        return temp\r\n    }\r\n    const start = () => {\r\n        if (enabled) {\r\n            setBeat(0)\r\n            setSequencerBeat(0)\r\n        }\r\n        setEnabled(!enabled)\r\n    }\r\n    const stop = () => {\r\n        setRestart(!restart)\r\n        setBeat(0)\r\n        setSequencerBeat(0)\r\n        setEnabled(false)\r\n    }\r\n\r\n    const save = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            const token = localStorage.getItem('token')\r\n            const pattern = sounds.map((e, i) => {\r\n                return {\r\n                    frequency: e.frequency,\r\n                    detune: e.detune,\r\n                    gacurrentCollectionin: e.gain,\r\n                    type: e.type,\r\n                    sequencer: rythemObj[i + 1]\r\n                }\r\n            })\r\n            //====\r\n            const tempObj = {\r\n                pattern: pattern,\r\n                collectionId: currentCollection,\r\n                name: patternName\r\n            }\r\n            //=====\r\n            await Api.patch(`sound-collection/update/${currentCollection}`, tempObj,\r\n                {\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`\r\n                    }\r\n                })\r\n            setIsLoading(false)\r\n            setSaveIsOpen(false)\r\n            setPatternName('')\r\n        } catch (e) {\r\n            setMessage('The name is not available')\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Spinner />}\r\n\r\n            {!isLoading && <>\r\n\r\n\r\n                <button\r\n                    style={{ position: 'absolute', padding: '2px 4px', background: 'var(--led-red)', borderRadius: '4px', fontSize: '1.2rem', border: 'none', bottom: '2rem', left: '2rem', cursor: 'pointer' }}\r\n                    onClick={() => {\r\n\r\n                        window.location.reload()\r\n                    }\r\n                    }\r\n                >X</button>\r\n                <ReactInterval timeout={60000 / realBpm / 4} enabled={enabled}\r\n                    callback={() => {\r\n                        setBeat((beat + 1))\r\n                        setSequencerBeat(sequencerBeat < 32 ? sequencerBeat + 1 : 1)\r\n                    }}\r\n                />\r\n                {sounds && ctx &&\r\n                    <div className='play-mode-container'>\r\n                        <div className='play-mode-sequencer-container'>\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 1)}\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 9)}\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 17)}\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 25)}\r\n                            <div className='play-mode-toggle-h2'>Control All</div>\r\n                            <div className='toggle'>\r\n                                <div className='toggle-div'>\r\n                                    <div className='toggle-div-text'>\r\n                                        <p>BPM</p>\r\n                                        <p>{bpm}</p>\r\n                                    </div>\r\n                                    <HorizontalRange\r\n                                        value={bpm}\r\n                                        setValue={(e) => { setBpm(e.target.value) }}\r\n                                        max={'220'}\r\n                                        min={'60'} />\r\n                                </div>\r\n                                <div className='toggle-div'>\r\n                                    <div className='toggle-div-text'>\r\n                                        <p>Gain</p>\r\n                                        <p>{Math.round(gain * 100)}</p>\r\n                                    </div>\r\n                                    <HorizontalRange\r\n                                        value={gain * 100} setValue={(e) => {\r\n                                            setGain(e.target.value / 100)\r\n                                        }}\r\n                                        max={'100'}\r\n                                        min={'0'}\r\n                                    />\r\n                                </div>\r\n                                <div className='toggle-div'>\r\n                                    <div className='toggle-div-text'>\r\n                                        <p>Frequency</p>\r\n                                        <p>{frequency}</p>\r\n                                    </div>\r\n                                    <HorizontalRange\r\n                                        value={frequency} setValue={(e) => {\r\n                                            setFrequency(e.target.value)\r\n                                        }}\r\n                                        max={'4000'}\r\n                                        min={'0'}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='play-mode-pads-container'>\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 1)}\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 7)}\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 13)}\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 19)}\r\n                            {!saveIsOpen &&\r\n                                <>\r\n\r\n                                    <div\r\n                                        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n                                        className='play-mode-toggle-h2'>\r\n                                        <button\r\n                                            style={{ color: enabled ? 'var(--red)' : 'var(--green)' }}\r\n                                            className='play-mode-button'\r\n                                            onClick={() => start()}>{enabled ? 'Stop' : 'Play'}</button>\r\n\r\n                                        <select\r\n                                            className='play-mode-selector'\r\n                                            value={sounds[padIndex - 1].type}\r\n                                            onChange={(e) => {\r\n                                                setGainInSoundsObject(e, 'type')\r\n                                            }}>\r\n                                            <option value='allpass'>Allpass</option>\r\n                                            <option value='lowpass'>Lowpass</option>\r\n                                            <option value='highpass'>Highpass</option>\r\n                                            <option value='bandpass'>Bandpass</option>\r\n                                            <option value='lowshelf'>Lowshelf</option>\r\n                                            <option value='highshelf'>Highshelf</option>\r\n                                            <option value='peaking'>Peaking</option>\r\n                                            <option value='notch'>Notch</option>\r\n                                        </select>\r\n                                        <button className='play-mode-button'\r\n                                            onClick={() => stop()}>Clear</button>\r\n\r\n                                        <button className='play-mode-button'\r\n\r\n                                            onClick={() => setSaveIsOpen(true)}>Save</button>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='toggle'>\r\n                                        <div className='toggle-div'>\r\n                                            <div className='toggle-div-text'>\r\n                                                <p>Gain</p>\r\n                                                <p>{Math.round(sounds[padIndex - 1].gain * 100)}</p>\r\n                                            </div>\r\n                                            <HorizontalRange\r\n                                                value={sounds[padIndex - 1].gain * 100} setValue={(e) => {\r\n                                                    setGainInSoundsObject(e, 'gain')\r\n                                                }}\r\n                                                max={'100'}\r\n                                                min={'0'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='toggle-div'>\r\n                                            <div className='toggle-div-text'>\r\n                                                <p>Frequency</p>\r\n                                                <p>{Math.round(sounds[padIndex - 1].frequency)}</p>\r\n                                            </div>\r\n                                            <HorizontalRange\r\n                                                value={sounds[padIndex - 1].frequency} setValue={(e) => {\r\n                                                    setGainInSoundsObject(e, 'frequency')\r\n                                                }}\r\n                                                max={'2000'}\r\n                                                min={'0'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='toggle-div'>\r\n                                            <div className='toggle-div-text'>\r\n                                                <p>Detune</p>\r\n                                                <p>{sounds[padIndex - 1].detune}</p>\r\n                                            </div>\r\n                                            <HorizontalRange\r\n                                                value={sounds[padIndex - 1].detune} setValue={(e) => {\r\n                                                    setGainInSoundsObject(e, 'detune')\r\n                                                }}\r\n                                                max={'4000'}\r\n                                                min={'-4000'}\r\n                                            />\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </>}\r\n                            {saveIsOpen &&\r\n                                <>\r\n                                    <div className='play-mode-toggle-h2'>{message}</div>\r\n                                    <div style={{ display: 'flex', margin: '1rem', justifyContent: 'space-between', transition: 'all 1s' }}>\r\n                                        <input\r\n                                            style={{ fontSize: '1rem', borderRadius: '5px' }}\r\n                                            onChange={(e) => setPatternName(e.target.value)}\r\n                                            value={patternName}\r\n                                        ></input>\r\n                                        <button\r\n                                            className='play-mode-button'\r\n                                            onClick={() => save(patternName)}>Save</button>\r\n                                        <button\r\n                                            className='play-mode-button'\r\n                                            onClick={() => {\r\n                                                setSaveIsOpen(false)\r\n                                                setPatternName('')\r\n                                            }\r\n                                            }>Cansel</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div >}\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayModePage;","import './choosePattern.css'\r\nimport { useEffect, useState } from 'react'\r\nimport Api from '../../api/Api'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ChoosePattern = ({ setChoosePatternIsOpen, setSelected, tempCurrentCollection, setIsOn }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isLoadingOnPage, setIsLoadingOnPage] = useState(true);\r\n\r\n    const [patternOps, setPatternOps] = useState(null)\r\n    const [current, setCurrent] = useState(null)\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const tagsRes = async () => {\r\n            try {\r\n                const tempRes = await Api.get(`/patterns/all/${tempCurrentCollection}`)\r\n                // setTagsOptions(await tempRes.data.sort())\r\n                setPatternOps(tempRes.data[0].patterns)\r\n                // setSelectorVal(await tempRes.data[0])\r\n                setIsLoading(false)\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n\r\n        }\r\n        tagsRes()\r\n        setIsLoadingOnPage(false)\r\n    }, [tempCurrentCollection])\r\n\r\n\r\n    const setList = () => {\r\n        return patternOps.map((e, i) => {\r\n            return (\r\n                <div\r\n                    onClick={(e) => {\r\n                        if (current === e.target.id) {\r\n                            setCurrent(null)\r\n                        } else {\r\n                            setCurrent(e.target.id)\r\n                        }\r\n                    }}\r\n                    id={e._id}\r\n                    key={`patternOps-${i}`}\r\n                    className='search-sound-result-container'\r\n                >\r\n                    <div\r\n                        id={e._id}\r\n                        className={`search-sound-file-sound ${current === e._id ? 'search-sound-file-sound-selected' : ''}`}\r\n                    >\r\n\r\n                        <div\r\n                            style={{ display: 'flex' }}\r\n                            id={e._id}\r\n                        >{e.name}</div>\r\n                        <div\r\n                            id={e._id}>\r\n                            <span\r\n                                id={e._id}\r\n                            >by: </span>\r\n                            <span\r\n                                id={e._id}\r\n                                style={{ marginLeft: '0.6rem' }}\r\n                                key={`soundlist-tag-${i}`}>{e.userName}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>{isLoadingOnPage && <div className='search-sound-loading-on-page'></div>}\r\n            <div className='search-sound-top'>\r\n                <div className=\"search-sound-container\">\r\n\r\n                    {!isLoading && <>\r\n                        <Link to='/'>\r\n                            <div className='add-sound-exit'\r\n                                onClick={() => setChoosePatternIsOpen(false)}\r\n                            >\r\n                                X</div>\r\n                        </Link>\r\n                        <h2 className=\"search-sound-container-h2\">Choose Pattern</h2>\r\n\r\n                        <div className='search-sound-results'>\r\n                            {patternOps && setList()}\r\n                        </div>\r\n                        <button\r\n                            className='search-sound-button'\r\n                            onClick={() => {\r\n                                setChoosePatternIsOpen(false)\r\n                                setSelected(current ? current : 'empty')\r\n                                setIsOn(true)\r\n                            }\r\n                            }\r\n                        >\r\n                            Submit\r\n                    </button>\r\n                    </>}\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChoosePattern;","import PlayModePage from './PlayModePage'\r\nimport { useState, useEffect } from 'react'\r\nimport ChoosePattern from '../../components/choosePattern/ChoosePattern'\r\nimport axios from 'axios'\r\nimport Api from '../../api/Api'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst App = ({ consoleIsOpen, setConsoleIsOpen, currentCollection, setcurrentCollection }) => {\r\n    const [isOn, setIsOn] = useState(false)///<<<<<<<<<<<<<<\r\n    const [ctx, setCtx] = useState(null)\r\n    const [gainNode, setGainNode] = useState(null)\r\n    const [biquadFilter, setBiquadFilter] = useState(null)\r\n    const [sounds, setSounds] = useState(null)\r\n\r\n    const [savedObj, setSavedObj] = useState(null)\r\n\r\n    const [patternIsOpen, setPatternIsOpen] = useState(consoleIsOpen)\r\n    const [pattern, setPattern] = useState(null)\r\n    const [patternArr, setPatternArr] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentCollection) {\r\n            if (isOn)\r\n                setCtx(new AudioContext())\r\n            let tempEffectsArr;\r\n            console.log(currentCollection)\r\n            // if (!savedObj) {\r\n            if (pattern) {\r\n                const fetchSounds = async () => {\r\n                    if (pattern === 'empty') {\r\n                        tempEffectsArr = new Array(24).fill({\r\n                            frequency: 350,\r\n                            detune: 0,\r\n                            type: 'notch',\r\n                            gain: 0.75\r\n                        })\r\n                        setPatternArr('empty')\r\n                    } else {\r\n                        try {\r\n                            const res = await Api.get(`/patterns/${pattern}`)\r\n                            console.log(await res.data[0].pattern)\r\n                            setPatternArr(await res.data[0].pattern)\r\n                            tempEffectsArr = await res.data[0].pattern.map(e => {\r\n                                return ({\r\n                                    frequency: Number(e.frequency),\r\n                                    detune: Number(e.detune),\r\n                                    type: e.type,\r\n                                    gain: Number(e.gacurrentCollectionin)\r\n                                })\r\n                            })\r\n                        } catch (e) {\r\n                            console.log(e)\r\n                        }\r\n                    }\r\n                    const arrRes = await Api.get(`/sound-collection/${currentCollection}`)\r\n                    const arrData = await arrRes.data[0].sounds\r\n                    const arrDataLinks = await arrData.map(async (e) => {\r\n                        return await Api.get(`/sounds/${e.id}`)\r\n                    })\r\n\r\n                    let arrDataSounds = null;\r\n                    await axios.all(arrDataLinks)\r\n                        .then(axios.spread((...responses) => {\r\n                            let tempArr = [];\r\n                            for (let i = 0; i < 24; i++) {\r\n                                tempArr.push({\r\n                                    myAudio: responses[i].data[0].audio,\r\n                                    color: arrData[i].color,\r\n                                    ...tempEffectsArr[i]\r\n                                })\r\n                            }\r\n                            arrDataSounds = tempArr\r\n                        })).catch(errors => {\r\n                        })\r\n                    //------------------------\r\n                    // return arrDataSounds\r\n                    setSounds(arrDataSounds)\r\n                }\r\n\r\n                fetchSounds()\r\n            }\r\n        } else {\r\n            setConsoleIsOpen(false)\r\n        }\r\n        // console.log(Sounds2())\r\n        // setSounds(fetchSounds())\r\n        // setSounds(Sounds2())\r\n    }, [isOn, currentCollection, setConsoleIsOpen, pattern])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (ctx && !gainNode) {\r\n            setGainNode(ctx.createGain())\r\n            setBiquadFilter(ctx.createBiquadFilter())\r\n        }\r\n    }, [ctx, gainNode])\r\n\r\n    useEffect(() => {\r\n        if (gainNode) {\r\n            gainNode.connect(ctx.destination)\r\n            // setRecord(new Recorder(gainNode))\r\n        }\r\n        if (biquadFilter) {\r\n            biquadFilter.connect(gainNode)\r\n        }\r\n    }, [gainNode, ctx, biquadFilter,])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {patternIsOpen && <ChoosePattern\r\n                setChoosePatternIsOpen={setPatternIsOpen}\r\n                tempCurrentCollection={currentCollection}\r\n                setSelected={setPattern}\r\n                setIsOn={setIsOn}\r\n            />}\r\n            {!currentCollection && <Redirect to='/'></Redirect >}\r\n            {/* {console.log(isLoading)} */}\r\n\r\n            {currentCollection && patternArr &&\r\n                <>\r\n                    <PlayModePage\r\n                        ctx={ctx}\r\n                        sounds={sounds}\r\n                        setSounds={setSounds}\r\n                        gainNode={gainNode}\r\n                        biquadFilter={biquadFilter}\r\n                        savedObj={savedObj}\r\n                        setSavedObj={setSavedObj}\r\n                        currentCollection={currentCollection}\r\n                        patternArr={patternArr}\r\n                    />\r\n                </>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from '../pages/home/Home'\nimport Navbar from '../components/navbar/Navbar'\nimport OpeningPage from '../pages/openingPage/OpeningPage'\nimport Create from '../pages/create/Create'\nimport StarterPlayModePage from '../pages/‏‏playModePage/StarterPlayModePage'\n\n\nconst App = () => {\n  //Cheack if the playing console is open.\n  const [consoleIsOpen, setConsoleIsOpen] = useState(false);\n  //Current collection selected.\n  const [currentCollection, setCurrentCollection] = useState(null);\n\n  //check if the user is loged.\n  const [isUserLogedIn, setIsUserLogedIn] = useState(false);\n\n  //set the user name.\n  const [userName, setUserName] = useState(null)\n  useEffect(() => {\n    //if token is saved in the local storage:\n    // - set the state isLoged to true.\n    // - set the state userName to the name from local storage.\n    if (localStorage.token && !isUserLogedIn) {\n      setIsUserLogedIn(true)\n      setUserName(localStorage.getItem('name'))\n    }\n  }, [isUserLogedIn])\n\n  return (\n    <>\n      <>\n        {/* { console.log(window.location.href)} */}\n        {!isUserLogedIn && <OpeningPage setIsUserLogedIn={setIsUserLogedIn} />}\n        <BrowserRouter>\n          {isUserLogedIn && <>\n            {!consoleIsOpen && <Navbar userName={userName} />}\n            <Route path=\"/\" exact\n              component={() =>\n                <Home\n                  setConsoleIsOpen={setConsoleIsOpen}\n                  consoleIsOpen={consoleIsOpen}\n                  setCurrentCollection={setCurrentCollection}\n                />\n              }\n            >\n            </Route>\n            < Route path=\"/home\" exact component={() =>\n              <Home\n                setConsoleIsOpen={setConsoleIsOpen}\n                consoleIsOpen={consoleIsOpen}\n                setCurrentCollection={setCurrentCollection}\n              />\n            }\n            />\n            < Route path=\"/create\" exact component={() =>\n              <Create />\n            }\n            />\n            < Route path=\"/console\" exact component={() =>\n              <StarterPlayModePage\n                consoleIsOpen={consoleIsOpen}\n                setConsoleIsOpen={setConsoleIsOpen}\n                currentCollection={currentCollection}\n                setcurrentCollection={setCurrentCollection}\n              />\n            }\n            />\n          </>}\n        </BrowserRouter>\n      </>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}