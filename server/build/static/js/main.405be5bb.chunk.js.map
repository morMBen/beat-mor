{"version":3,"sources":["api/Api.js","img/openBackgound.jpg","components/navbar/Navbar.js","components/input/Input.js","components/login/Login.js","components/sign/sign.js","pages/openingPage/OpeningPage.js","components/App.js","reportWebVitals.js","index.js"],"names":["url","api","axios","create","baseURL","Navbar","openCloseLogMenu","userlog","userDetails","useState","isNavOpen","setIsNavOpen","className","style","fontSize","to","onClick","maxHeight","Input","type","onChange","value","Login","isloginCardOpen","setIsloginCardOpen","setIsUserLogedIn","password","setPassword","email","setEmail","showMessage","setShowMessage","handleSubmission","a","Api","post","toString","res","localStorage","setItem","data","user","userName","token","_id","setTimeout","e","target","split","Sign","setIsSingCardOpen","passwordConfirm","setPasswordConfirm","setUserName","message","setMessage","length","clear","console","log","getItem","OpeningPage","logOrSingCard","setLogOrSingCard","isSingCardOpen","height","width","display","justifyContent","App","consoleIsOpen","isUserLogedIn","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.405be5bb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet url;\r\nif (process.env.NODE_ENV === 'development') {\r\n    url = 'http://localhost:5000/api'\r\n}\r\nif (process.env.NODE_ENV === 'production') {\r\n    url = 'api'\r\n}\r\nconst api = axios.create({\r\n    baseURL: url,\r\n})\r\n\r\nexport default api;\r\n","export default __webpack_public_path__ + \"static/media/openBackgound.68c73abe.jpg\";","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css';\r\n\r\n\r\nconst Navbar = ({ openCloseLogMenu, userlog, userDetails }) => {\r\n    const [isNavOpen, setIsNavOpen] = useState(false);\r\n\r\n\r\n    const menuOpen = () => {\r\n        if (isNavOpen) {\r\n            return '300px'\r\n        } else {\r\n            return '0'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-nav\" style={{ fontSize: '17px' }}>\r\n                <Link to='/' className=\"menu-logo\">\r\n                    A Beat Mor\r\n            </Link>\r\n                <div className=\"hamburger\" onClick={() => { setIsNavOpen(!isNavOpen) }}>\r\n                    {/* nav here */}\r\n                dads\r\n            </div>\r\n                <div className=\"nav-menu\" style={{ maxHeight: menuOpen() }}>\r\n                    <Link to='/search' className=\"menu-link\">Search</Link>\r\n                    <Link to='/create' className=\"menu-link\">Create</Link>\r\n                    <Link to={`/`} className=\"menu-link\">Home</Link>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","const Input = ({ type, onChange, value, className }) => {\r\n    return (\r\n        <input\r\n            className={className} onChange={onChange} value={value}></input>\r\n    )\r\n}\r\n\r\nexport default Input;","import { useEffect, useState } from 'react';\r\nimport Input from '../input/Input'\r\nimport Api from '../../api/Api'\r\n\r\nconst Login = ({ isloginCardOpen, setIsloginCardOpen, setIsUserLogedIn }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n\r\n    const handleSubmission = async () => {\r\n        try {\r\n            const res = await Api.post('/users/login', {\r\n                password: password.toString(),\r\n                email\r\n            });\r\n            // if (isMounted) {\r\n            localStorage.setItem('name', res.data.user.userName)\r\n            localStorage.setItem('token', res.data.token)\r\n            localStorage.setItem('id', res.data.user._id)\r\n            setIsloginCardOpen(false);\r\n            setIsUserLogedIn(true);\r\n        } catch (e) {\r\n            if (!showMessage) {\r\n                setShowMessage(true);\r\n                setTimeout(() => {\r\n                    setShowMessage(false)\r\n                }, 2000)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='glow-card-background'>\r\n            <div className='glow-card-container'>\r\n                <h2\r\n                    className='glow-card-h1 font-red-shadow-red upprcase margin-top-1r'\r\n                >Welcome Back</h2>\r\n                <br></br>\r\n                <h3\r\n                    className='glow-card-h3 font-white-shadow-green margin-top-1r'\r\n                >Email</h3>\r\n                <Input\r\n                    className={'glow-card-input glow-card-h3'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='glow-card-h3 font-white-shadow-green  margin-top-1r'\r\n                >Password</h3>\r\n                <Input\r\n                    className={'glow-card-input glow-card-h3 '}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value.split(' '))}\r\n                />\r\n                <div className='flex-space-between margin-top-2r'>\r\n                    <button\r\n                        className='glow-card-button '\r\n                        type='button' onClick={() => { handleSubmission() }}\r\n                    >Submit</button>\r\n                    <button\r\n                        className='glow-card-button'\r\n                        type='button' onClick={() => {\r\n                            setPassword('')\r\n                            setEmail('')\r\n                            setIsloginCardOpen(false)\r\n                        }}\r\n                    >Cancel</button>\r\n                </div>\r\n                <br />\r\n                {!showMessage && < br />}\r\n                {showMessage && <h4 className='glow-card-h3'>Wrong input please try again</h4>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Login;","import { useState } from 'react';\r\nimport Input from '../input/Input'\r\nimport Api from '../../api/Api'\r\n// import './sign.css'\r\n\r\nconst Sign = ({ setIsSingCardOpen, setIsUserLogedIn }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const handleSubmission = async () => {\r\n        if (passwordConfirm !== password) {\r\n            setShowMessage(true)\r\n            setMessage('Your password conformation is in currect')\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n            }, 2000)\r\n        } else if (password.length < 8) {\r\n            setShowMessage(true)\r\n            setMessage('Your password must be at least 8 digits')\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n            }, 2000)\r\n        } else {\r\n            try {\r\n                const res = await Api.post('/users/', {\r\n                    password: password.toString(),\r\n                    email,\r\n                    userName\r\n                })\r\n                localStorage.clear()\r\n                localStorage.setItem('name', res.data.user.userName)\r\n                localStorage.setItem('token', res.data.token)\r\n                setIsSingCardOpen(false)\r\n                setIsUserLogedIn(true)\r\n                console.log(localStorage.getItem('name'))\r\n                console.log(localStorage.getItem('token'))\r\n            } catch (e) {\r\n                setMessage('Error in email Check the spelling and make sure you are not already registered')\r\n                setShowMessage(true)\r\n                setTimeout(() => {\r\n                    setShowMessage(false)\r\n                }, 2000)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='glow-card-background'>\r\n            <div className='glow-card-container'>\r\n                <h2\r\n                    className='glow-card-h1 font-red-shadow-red'\r\n                >Ready to get started</h2>\r\n                <h3\r\n                    className='glow-card-h4 font-white-shadow-green'\r\n                >Write your user name</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'glow-card-input glow-card-h4'}\r\n                    value={userName}\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='glow-card-h4 font-white-shadow-green'\r\n                // className='signin-container-h3'\r\n                >Enter your Email</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'glow-card-input glow-card-h4'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='glow-card-h4 font-white-shadow-green'\r\n                >Choose password</h3>\r\n                <Input\r\n                    className={'glow-card-input glow-card-h4'}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='glow-card-h4 font-white-shadow-green'\r\n                >Confirm your password</h3>\r\n                <Input\r\n                    className={'glow-card-input glow-card-h4'}\r\n                    value={passwordConfirm}\r\n                    onChange={(e) => setPasswordConfirm(e.target.value)}\r\n\r\n                />\r\n                <br></br>\r\n                {!showMessage && <div className='flex-space-between'>\r\n                    <button\r\n                        className='glow-card-button'\r\n                        type='button' onClick={() => handleSubmission()}\r\n                    >Submit</button>\r\n                    <button\r\n                        className='glow-card-button'\r\n                        type='button' onClick={() => {\r\n                            setPassword('')\r\n                            setEmail('')\r\n                            setIsSingCardOpen(false)\r\n                        }}\r\n                    >Cancel</button>\r\n                </div>}\r\n\r\n                {showMessage &&\r\n                    <h4 className='glow-card-h3 font-orange-shadow-red'>{message}</h4>\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Sign;","// import img from '../../img/openBackgound.jpg'\r\nimport { useState } from 'react';\r\n// import './openingPage.css';\r\n// import '../../style.css';\r\nimport Login from '../../components/login/Login';\r\nimport Sign from '../../components/sign/sign';\r\n\r\nconst OpeningPage = ({ setIsUserLogedIn }) => {\r\n    //User press the Get Started button.\r\n    const [logOrSingCard, setLogOrSingCard] = useState(false)\r\n    //Sing button is pressed.\r\n    const [isSingCardOpen, setIsSingCardOpen] = useState(false)\r\n    //Log In button is pressed.\r\n    const [isloginCardOpen, setIsloginCardOpen] = useState(false)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='glow-card-background'>\r\n                <div className='glow-card-container' style={{ height: '80vh', width: '80%' }}>\r\n                    <h1\r\n                        className='glow-card-h1 font-red-shadow-red upprcase'\r\n                    >A Beat Mor</h1>\r\n                    <h2\r\n                        className='glow-card-h2 font-white-shadow-green'\r\n                    >Tomorrow's sound starts today</h2>\r\n                    <h3\r\n                        className='glow-card-h3 font-white-shadow-green'\r\n                    >\r\n                        Is your head full of sounds? You have an idea for the beat of the next hit?</h3>\r\n                    <h2\r\n                        className='glow-card-h2 font-white-shadow-green'\r\n                    >Come and share...</h2>\r\n                    <h3\r\n                        className='glow-card-h3 font-white-shadow-green'\r\n                    >Upload your own unique sounds or use existing sounds Create the rhythm Add audio effects.\r\n                        Save and share and let the world experience your touch.</h3>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: !logOrSingCard ? 'center' : 'space-around ' }}>\r\n                        {!logOrSingCard && <button\r\n                            className='glow-card-button'\r\n                            onClick={() => {\r\n\r\n                                setLogOrSingCard(true)\r\n                            }\r\n                            }>Get started</button>}\r\n                        {logOrSingCard &&\r\n                            <>\r\n                                <button\r\n                                    className='glow-card-button'\r\n                                    onClick={() => setIsloginCardOpen(true)}>Log in</button>\r\n                                <button\r\n                                    className='glow-card-button'\r\n                                    onClick={() => setIsSingCardOpen(true)}>Sing</button>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isloginCardOpen && <Login\r\n                setIsloginCardOpen={setIsloginCardOpen}\r\n                setIsUserLogedIn={setIsUserLogedIn}\r\n            />}\r\n            {isSingCardOpen && <Sign\r\n                setIsSingCardOpen={setIsSingCardOpen}\r\n                setIsUserLogedIn={setIsUserLogedIn}\r\n            />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpeningPage;","import { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from '../pages/home/Home'\nimport Navbar from '../components/navbar/Navbar'\nimport OpeningPage from '../pages/openingPage/OpeningPage'\nimport Create from '../pages/create/Create'\nimport StarterPlayModePage from '../pages/‏‏playModePage/StarterPlayModePage'\n\n\nconst App = () => {\n  //Cheack if the playing console is open.\n  const [consoleIsOpen, setConsoleIsOpen] = useState(false);\n  //Current collection selected.\n  const [currentCollection, setCurrentCollection] = useState(null);\n\n  //check if the user is loged.\n  const [isUserLogedIn, setIsUserLogedIn] = useState(false);\n\n  //set the user name.\n  const [userName, setUserName] = useState(null)\n  useEffect(() => {\n    //if token is saved in the local storage:\n    // - set the state isLoged to true.\n    // - set the state userName to the name from local storage.\n    if (localStorage.token && !isUserLogedIn) {\n      setIsUserLogedIn(true)\n      setUserName(localStorage.getItem('name'))\n    }\n  }, [isUserLogedIn])\n\n  return (\n    <>\n      <>\n        {/* { console.log(window.location.href)} */}\n        {!isUserLogedIn && <OpeningPage setIsUserLogedIn={setIsUserLogedIn} />}\n        <BrowserRouter>\n          {isUserLogedIn && <>\n            {!consoleIsOpen && <Navbar userName={userName} />}\n            {/* <Route path=\"/\" exact\n              component={() =>\n                <Home\n                  setConsoleIsOpen={setConsoleIsOpen}\n                  consoleIsOpen={consoleIsOpen}\n                  setCurrentCollection={setCurrentCollection}\n                />\n              }\n            >\n            </Route>\n            < Route path=\"/home\" exact component={() =>\n              <Home\n                setConsoleIsOpen={setConsoleIsOpen}\n                consoleIsOpen={consoleIsOpen}\n                setCurrentCollection={setCurrentCollection}\n              />\n            }\n            />\n            < Route path=\"/create\" exact component={() =>\n              <Create />\n            }\n            />\n            < Route path=\"/console\" exact component={() =>\n              <StarterPlayModePage\n                consoleIsOpen={consoleIsOpen}\n                setConsoleIsOpen={setConsoleIsOpen}\n                currentCollection={currentCollection}\n                setcurrentCollection={setCurrentCollection}\n              />\n            }\n            /> */}\n          </>}\n        </BrowserRouter>\n      </>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}