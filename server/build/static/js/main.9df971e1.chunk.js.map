{"version":3,"sources":["api/Api.js","img/openBackgound.jpg","pages/home/Home.js","components/navbar/Navbar.js","components/input/Input.js","components/login/Login.js","components/sign/sign.js","pages/openingPage/OpeningPage.js","components/addSound/AddSound.js","components/selector/Selector.js","pages/create/Create.js","components/horizontalRange/HorizontalRange.js","components/beatBox/BeatBox.js","components/‏‏padBox/padBox.js","pages/‏‏playModePage/PlayModePage.js","pages/‏‏playModePage/StarterPlayModePage.js","components/App.js","index.js"],"names":["url","console","log","process","api","axios","create","baseURL","Home","setConsoleIsOpen","setCurrentCollection","useState","collectionsNames","setCollectionsNames","useEffect","a","Api","get","res","data","getCollectionsName","style","paddingTop","className","map","e","i","onClick","_id","to","src","testImg","alt","ownerName","name","Navbar","openCloseLogMenu","userlog","userDetails","isNavOpen","setIsNavOpen","fontSize","maxHeight","Input","type","onChange","value","Login","setLoginCard","setIsLoged","password","setPassword","email","setEmail","showMessage","setShowMessage","handleSubmission","post","toString","localStorage","setItem","user","userName","token","getItem","setTimeout","target","split","display","justifyContent","Sign","passwordConfirm","setPasswordConfirm","setUserName","message","setMessage","length","clear","OpeningPage","logOrSingCard","setLogOrSingCard","singCard","setSingCard","loginCard","AddSound","setAddSoundIsOpen","setSelectedSound","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","fileName","setFileName","tagsValue","setTagsValue","userMessage","setUserMessage","buttonText","setButtonText","result","join","file","audio","tags","headers","id","htmlFor","size","accept","event","reader","FileReader","files","readAsDataURL","match","Audio","play","Selector","options","setValue","Create","addSoundIsOpen","fileIsSelected","setFileIsSelected","selectedSound","fileSelectedName","setFileSelectedName","Array","fill","color","arr","setArr","selectorVal","setSelectorVal","padHandler","index","replace","tempArr","test","insertPads","formIndex","tempMap","filter","saveCollection","tempArr2","sounds","save","HorizontalRange","max","min","padding","background","width","BeatBox","boxTiming","thisClass","padIndex","currentColor","rythemArr","setMyRythemArr","boxIsPressed","setBoxIsPressed","onMouseDown","PadBox","setPadIndex","so","rythemObj","setCurrentColor","padsStatus","setMyPadsStatus","ctx","gain","offSet1","setOffSet1","getFile","filePath","arrayBuffer","decode","decodeAudioData","audioBuffer","clip","outPut","state","resume","clipAudioBuffer","createGain","myGain","connect","createBiquadFilter","biquadFilter","frequency","detune","clipSource","createBufferSource","buffer","start","currentTime","playClip","myAudio","find","PlayModePage","setSounds","gainNode","isLoading","setIsLoading","bpm","setBpm","realBpm","setRealBpm","enabled","setEnabled","beat","setBeat","sequencerBeat","setSequencerBeat","restart","setRestart","setRythemObj","setGain","setFrequency","setGainInSoundsObject","tempSounds","temp","setMyRythemObj","tempObj","pad","bool","insertDivs","rowLength","girdClass","singleClass","fromNum","timeout","callback","App","consoleIsOpen","currentCollection","isOn","setIsOn","setCtx","setGainNode","setBiquadFilter","AudioContext","tempEffectsArr","arrRes","arrData","arrDataLinks","arrDataSounds","all","then","spread","responses","push","catch","errors","fetchSounds","destination","isLoged","path","exact","component","StarterPlayModePage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAEIA,E,+FAKAC,QAAQC,IAAIC,cACZH,EAAM,MAEV,IAIeI,EAJHC,IAAMC,OAAO,CACrBC,QAASP,ICXE,G,MAAA,IAA0B,2C,OCyD1BQ,EAjDF,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,iBAAkBC,EAA2B,EAA3BA,qBAC9B,EAAgDC,mBAAS,MAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KAEAC,qBAAU,YACkB,uCAAG,4BAAAC,EAAA,sEACLC,EAAIC,IAAI,qBADH,OACjBC,EADiB,OAEvBL,EAAoBK,EAAIC,MAFD,2CAAH,qDAIxBC,KACD,IAgCH,OACI,qBAAKC,MAAO,CAAEC,WAAY,QAA1B,SACI,qBAAKC,UAAU,YAAf,SACKX,GA1BFA,EAAiBY,KAAI,SAACC,EAAGC,GAC5B,OAAO,yBAASH,UAAU,eACtBI,QAAS,WACLjB,EAAqBe,EAAEG,KATnCnB,GAAiB,IAON,SAMH,eAAC,IAAD,CACIoB,GAAI,WADR,UAGI,wBAAQN,UAAU,kBAAlB,SACI,qBAAKO,IAAKC,EAASC,IAAI,WAE3B,wBAAQT,UAAU,mBAAlB,SACI,0BAASA,UAAU,eAAnB,UACI,+BAAQE,EAAEQ,YACV,qBAAIV,UAAU,UAAd,UAAyBE,EAAES,KAA3B,IAAkCT,EAAEG,gBAf7C,oBAAoDF,YCSxDS,G,MA/BA,SAAC,GAA+C,EAA7CC,iBAA6C,EAA3BC,QAA2B,EAAlBC,YAAmB,IAC5D,EAAkC3B,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KAWA,OAEI,sBAAKjB,UAAU,SAASF,MAAO,CAAEoB,SAAU,QAA3C,UACI,cAAC,IAAD,CAAMZ,GAAG,IAAIN,UAAU,YAAvB,wBAGA,qBAAKA,UAAU,YAAYI,QAAS,WAAQa,GAAcD,IAA1D,kBAIA,sBAAKhB,UAAU,WAAWF,MAAO,CAAEqB,UAlBnCH,EACO,QAEA,KAeP,UACI,cAAC,IAAD,CAAMV,GAAG,UAAUN,UAAU,YAA7B,oBACA,cAAC,IAAD,CAAMM,GAAG,UAAUN,UAAU,YAA7B,oBACA,cAAC,IAAD,CAAMM,GAAE,IAAON,UAAU,YAAzB,0BCvBDoB,G,MAPD,SAAC,GAAyC,EAAvCC,KAAwC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,MAAOvB,EAAgB,EAAhBA,UACpC,OACI,uBACIA,UAAWA,EAAWsB,SAAUA,EAAUC,MAAOA,MCwF9CC,G,MAtFD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAC3B,EAAgCtC,mBAAS,IAAzC,mBAAOuC,EAAP,KAAiBC,EAAjB,KACA,EAA0BxC,mBAAS,IAAnC,mBAAOyC,EAAP,KAAcC,EAAd,KACA,EAAsC1C,oBAAS,GAA/C,mBAAO2C,EAAP,KAAoBC,EAApB,KAGMC,EAAgB,uCAAG,4BAAAzC,EAAA,+EAGCC,EAAIyC,KAAK,eAAgB,CACvCP,SAAUA,EAASQ,WACnBN,UALa,OAGXlC,EAHW,OAOjByC,aAAaC,QAAQ,OAAQ1C,EAAIC,KAAK0C,KAAKC,UAC3CH,aAAaC,QAAQ,QAAS1C,EAAIC,KAAK4C,OACvCf,GAAa,GACbC,GAAW,GACXhD,QAAQC,IAAIyD,aAAaK,QAAQ,SACjC/D,QAAQC,IAAIyD,aAAaK,QAAQ,UAZhB,kDAcjBT,GAAe,GACfU,YAAW,WACPV,GAAe,KAChB,KAjBc,0DAAH,qDAsBtB,OACI,qBAAKhC,UAAU,aAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,oBACIA,UAAU,sBADd,0BAGA,uBACA,oBACIA,UAAU,sBADd,mBAIA,cAAC,EAAD,CACIA,UAAW,eACXuB,MAAOM,EACPP,SAAU,SAACpB,GAAD,OAAO4B,EAAS5B,EAAEyC,OAAOpB,UAEvC,uBACA,oBACIvB,UAAU,sBADd,sBAGA,cAAC,EAAD,CACIA,UAAW,eACXuB,MAAOI,EACPL,SAAU,SAACpB,GAAD,OAAO0B,EAAY1B,EAAEyC,OAAOpB,MAAMqB,MAAM,SAEtD,uBACA,sBAAK9C,MAAO,CAAE+C,QAAS,OAAQC,eAAgB,iBAA/C,UACI,wBACI9C,UAAU,0BACVqB,KAAK,SAASjB,QAAS6B,EAF3B,oBAIA,uBACA,wBACIjC,UAAU,0BACVqB,KAAK,SAASjB,QAAS,WACnBwB,EAAY,IACZE,EAAS,IACTL,GAAa,IALrB,uBAmBJ,wBACEM,GAAe,uBAChBA,GAAe,qEC8BjBgB,G,MA/GF,SAAC,GAAkC,IAAhCtB,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAC1B,EAAgCtC,mBAAS,IAAzC,mBAAOuC,EAAP,KAAiBC,EAAjB,KACA,EAA8CxC,mBAAS,IAAvD,mBAAO4D,EAAP,KAAwBC,EAAxB,KACA,EAAgC7D,mBAAS,IAAzC,mBAAOmD,EAAP,KAAiBW,EAAjB,KACA,EAA0B9D,mBAAS,IAAnC,mBAAOyC,EAAP,KAAcC,EAAd,KACA,EAAsC1C,oBAAS,GAA/C,mBAAO2C,EAAP,KAAoBC,EAApB,KACA,EAA8B5C,mBAAS,IAAvC,mBAAO+D,EAAP,KAAgBC,EAAhB,KAGMnB,EAAgB,uCAAG,4BAAAzC,EAAA,yDACjBwD,IAAoBrB,EADH,gBAEjBK,GAAe,GACfU,YAAW,WACPV,GAAe,GACfoB,EAAW,8CACZ,KANc,4BAOVzB,EAAS0B,OAAS,GAPR,iBAQjBrB,GAAe,GACfU,YAAW,WACPV,GAAe,GACfoB,EAAW,6CACZ,KAZc,mDAeK3D,EAAIyC,KAAK,UAAW,CAClCP,SAAUA,EAASQ,WACnBN,QACAU,aAlBS,QAeP5C,EAfO,OAoBbyC,aAAakB,QACblB,aAAaC,QAAQ,OAAQ1C,EAAIC,KAAK0C,KAAKC,UAC3CH,aAAaC,QAAQ,QAAS1C,EAAIC,KAAK4C,OACvCf,GAAa,GACbC,GAAW,GACXhD,QAAQC,IAAIyD,aAAaK,QAAQ,SACjC/D,QAAQC,IAAIyD,aAAaK,QAAQ,UA1BpB,mDA4BbT,GAAe,GACfU,YAAW,WACPV,GAAe,GACfoB,EAAW,oFACZ,KAhCU,2DAAH,qDAsCtB,OACI,qBAAKpD,UAAU,aAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,oBACIA,UAAU,sBADd,kCAGA,oBACIA,UAAU,sBADd,kCAIA,cAAC,EAAD,CACIA,UAAW,eACXuB,MAAOgB,EACPjB,SAAU,SAACpB,GAAD,OAAOgD,EAAYhD,EAAEyC,OAAOpB,UAE1C,oBACIvB,UAAU,sBADd,8BAKA,cAAC,EAAD,CACIA,UAAW,eACXuB,MAAOM,EACPP,SAAU,SAACpB,GAAD,OAAO4B,EAAS5B,EAAEyC,OAAOpB,UAEvC,oBACIvB,UAAU,sBADd,6BAGA,cAAC,EAAD,CACIA,UAAW,eACXuB,MAAOI,EACPL,SAAU,SAACpB,GAAD,OAAO0B,EAAY1B,EAAEyC,OAAOpB,UAE1C,oBACIvB,UAAU,sBADd,mCAGA,cAAC,EAAD,CACIA,UAAW,eACXuB,MAAOyB,EACP1B,SAAU,SAACpB,GAAD,OAAO+C,EAAmB/C,EAAEyC,OAAOpB,UAGjD,uBACA,sBAAKzB,MAAO,CAAE+C,QAAS,OAAQC,eAAgB,iBAA/C,UACI,wBACI9C,UAAU,0BACVqB,KAAK,SAASjB,QAAS6B,EAF3B,oBAIA,wBACIjC,UAAU,0BACVqB,KAAK,SAASjB,QAAS,WACnBwB,EAAY,IACZE,EAAS,IACTL,GAAa,IALrB,uBASJ,wBACEM,GAAe,uBAChBA,GAAe,6BAAKoB,WC7CtBI,EA5DK,SAAC,GAAoB,IAAlB7B,EAAiB,EAAjBA,WACnB,EAA0CtC,oBAAS,GAAnD,mBAAOoE,EAAP,KAAsBC,EAAtB,KACA,EAAgCrE,oBAAS,GAAzC,mBAAOsE,EAAP,KAAiBC,EAAjB,KACA,EAAkCvE,oBAAS,GAA3C,mBAAOwE,EAAP,KAAkBnC,EAAlB,KAGA,OACI,qCACI,sBAAKzB,UAAU,yBAAf,UACI,oBACIA,UAAU,4BADd,wBAGA,oBACIA,UAAU,4BADd,2CAGA,oBACIA,UAAU,4BADd,yFAIA,oBACIA,UAAU,4BADd,+BAGA,oBACIA,UAAU,4BADd,+JAIA,uBACA,sBAAKF,MAAO,CAAE+C,QAAS,OAAQC,eAAiBU,EAA2B,gBAAX,UAAhE,WACMA,GAAiB,wBACfxD,UAAU,gCACVI,QAAS,WAELqD,GAAiB,IAJN,yBAOlBD,GACG,qCACI,wBACIxD,UAAU,gCACVI,QAAS,kBAAMqB,GAAa,IAFhC,oBAGA,wBACIzB,UAAU,gCACVI,QAAS,kBAAMuD,GAAY,IAF/B,2BAOdC,GAAa,cAAC,EAAD,CACXnC,aAAcA,EACdC,WAAYA,IAGdgC,GAAY,cAAC,EAAD,CACVjC,aAAckC,EACdjC,WAAYA,Q,QCyGbmC,G,YAhKE,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,kBAAmBC,EAAuB,EAAvBA,iBACnC,EAAwC3E,mBAAS,MAAjD,mBAAO4E,EAAP,KAAqBC,EAArB,KACA,EAAwC7E,oBAAS,GAAjD,mBAAO8E,EAAP,KAAqBC,EAArB,KACA,EAAgC/E,mBAAS,IAAzC,mBAAOgF,EAAP,KAAiBC,EAAjB,KACA,EAAkCjF,mBAAS,MAA3C,mBAAOkF,EAAP,KAAkBC,EAAlB,KAIA,EAAsCnF,mBAAS,MAA/C,mBAAOoF,EAAP,KAAoBC,EAApB,KACA,EAAoCrF,mBAAS,UAA7C,mBAAOsF,EAAP,KAAmBC,EAAnB,KAsBM1C,EAAgB,uCAAG,gCAAAzC,EAAA,yDAChB8E,EADgB,gBAEjBG,EAAe,mCACfE,EAAc,aAHG,2BAKbT,EALa,wBAMP1B,EAAQJ,aAAaK,QAAQ,SANtB,SAQMuB,EAAaY,OAAOhC,MAAM,0BAA0BiC,KAAK,IAR/D,cAQPC,EARO,2BAUUrF,EAAIyC,KAAK,SAAU,CAClCvB,KAAMyD,EACNW,MAAOD,EACPE,KAAMV,GACP,CACCW,QAAS,CACL,cAAgB,UAAhB,OAA2BzC,MAhB1B,QAUH5C,EAVG,OAoBT6E,EAAe,aAEfA,EAAe,IAEfR,EAAgB,MAChBE,EAAgB,MAChBE,EAAY,IACZE,EAAa,MACb7F,QAAQC,IAAIiB,EAAKA,KAAKe,MACtBoD,EAAiB,CACbpD,KAAMf,EAAKA,KAAKe,KAChBuE,GAAItF,EAAKA,KAAKS,IACd0E,MAAOnF,EAAKA,KAAKmF,QAErBjB,GAAkB,GAlCT,mDAoCTW,EAAe,6BACfE,EAAc,aArCL,2DAAH,qDA2CtB,OACI,mCACI,qBAAK3E,UAAU,gBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,iBACXI,QAAS,kBAAM0D,GAAkB,IADrC,eAKA,oBACI9D,UAAU,yBADd,8BAGA,oBAAIA,UAAU,iBACd,oBACIA,UAAU,yBADd,+BAGA,mBACIA,UAAU,wBADd,yDAGA,cAAC,EAAD,CACIA,UAAW,kBACXuB,MAAO6C,EACP9C,SAAU,SAACpB,GAAD,OAAOmE,EAAYnE,EAAEyC,OAAOpB,UAE1C,oBAAIvB,UAAU,iBACd,oBACIA,UAAU,yBADd,+BAGA,mBACIA,UAAU,wBADd,mDAGA,cAAC,EAAD,CACIA,UAAW,kBACXuB,MAAO+C,EAAYA,EAAUO,KAAK,KAAO,GACzCvD,SAAU,SAACpB,GAAD,OAAOqE,EAAarE,EAAEyC,OAAOpB,MAAMqB,MAAM,SAEvD,oBAAI5C,UAAU,iBAcd,uBAAOmF,QAAQ,eAAf,yBACA,sBACInF,UAAU,uBADd,UAEI,uBACIkF,GAAG,eACHE,KAAK,KACL/D,KAAK,OACLgE,OAAO,wBACP/D,SAxHA,SAACgE,GACrB,IAAIC,EAAS,IAAIC,WACbF,EAAM3C,OAAO8C,MAAM,IACnBF,EAAOG,cAAcJ,EAAM3C,OAAO8C,MAAM,IACxCxB,EAAgBsB,GAChBpB,GAAgB,GACC,KAAbC,IACIkB,EAAM3C,OAAO8C,MAAM,GAAG9E,KAAKgF,MAAM,WACjCtB,EAAYiB,EAAM3C,OAAO8C,MAAM,GAAG9E,KAAKiC,MAAM,QAAQ,IAErD0C,EAAM3C,OAAO8C,MAAM,GAAG9E,KAAKgF,MAAM,WACjCtB,EAAYiB,EAAM3C,OAAO8C,MAAM,GAAG9E,KAAKiC,MAAM,QAAQ,KAG7D+B,EAAc,WAEdR,GAAgB,MA0GJ,gCACKD,GAAgB,wBACblE,UAAU,mBACVI,QAAS,WACgB,IAAIwF,MAAJ,UAAa5B,EAAaY,SAClCiB,QAJJ,kBAOjB,wBACI7F,UAAU,mBACVqB,KAAK,SAASjB,QAAS6B,EAF3B,SAGEyC,UAGV,uBACA,iCACMF,GAAe,uBACjB,mBACIxE,UAAU,wBADd,SAEEwE,gBC7IXsB,EAjBE,SAAC,GAA6C,IAA3CvE,EAA0C,EAA1CA,MAAOwE,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,SAAUhG,EAAgB,EAAhBA,UAM1C,OACI,wBACIA,UAAWA,EACXuB,MAAOA,EACPD,SAAU,SAACpB,GAAD,OAAO8F,EAAS9F,EAAEyC,OAAOpB,QAHvC,SAKKwE,GAVEA,EAAQ9F,KAAI,SAAAC,GACf,OAAO,wBAAgBgF,GAAIhF,EAApB,SAAwBA,GAAXA,SCyJjB+F,EAtJA,WACX,MAA4C7G,oBAAS,GAArD,mBAAO8G,EAAP,KAAuBpC,EAAvB,KAEA,EAA4C1E,oBAAS,GAArD,mBAAO+G,EAAP,KAAuBC,EAAvB,KACA,EAA0ChH,mBAAS,MAAnD,mBAAOiH,EAAP,KAAsBtC,EAAtB,KACA,EAAgD3E,mBAAS,IAAzD,mBAAOkH,EAAP,KAAyBC,EAAzB,KAEA,EAAsBnH,mBAAS,IAAIoH,MAAM,IAAIC,KAAK,CAAEC,MAAO,MAA3D,mBAAOC,EAAP,KAAYC,EAAZ,KAEA,EAAsCxH,mBAAS,WAA/C,mBAAOyH,EAAP,KAAoBC,EAApB,KAIAvH,qBAAU,WACF8G,GACAE,EAAoBF,EAAc1F,QAEvC,CAAC0F,IAGJ,IAAMU,EAAa,SAAC7G,GAChB,IAAM8G,EAAQ9G,EAAEyC,OAAOuC,GAAG+B,QAAQ,WAAY,IAC9C,GAAId,GAAkBE,EAAe,CACjC,IAAMa,EAAUP,EAChBO,EAAQF,GAAR,2BACOE,EAAQF,IADf,IAEI9B,GAAImB,EAAcnB,GAClBH,MAAOsB,EAActB,MACrBpE,KAAM0F,EAAc1F,KACpB+F,MAAOG,IAEXT,GAAkB,GAClBQ,EAAOM,OACJ,CACH,GAAIP,EAAIK,GAAO9B,IACD,uCAAG,4BAAA1F,EAAA,6DACHuF,EAAQ,IAAIa,MAAJ,gCAAmCe,EAAIK,GAAOjC,QADnD,SAEHA,EAAMc,OAFH,2CAAH,qDAIVsB,KAKNC,EAAa,SAACC,GAChB,IAAMC,EAAUX,EAAIY,QAAO,SAACrH,EAAGC,GAC3B,OAAOA,GAAKkH,GAAalH,EAAIkH,EAAY,KAE7C,OAAO,qBAAKrH,UAAU,YAAf,SACFsH,EAAQrH,KAAI,SAACC,EAAGC,GAAJ,OAAU,qBACnBH,UAAS,qBAAgB2G,EAAIU,EAAYlH,GAAGuG,OAE5CxB,GAAE,kBAAamC,EAAYlH,GAC3BC,QAAS2G,GAJU,qBAEAM,EAAYlH,UAOrCqH,EAAc,uCAAG,kCAAAhI,EAAA,yDAEI,MADjB0H,EAAUP,EAAIY,QAAO,SAAArH,GAAC,OAAIA,EAAEgF,OACtB7B,OAFO,iCAILb,EAAQJ,aAAaK,QAAQ,SAE7BgF,EAAWP,EAAQjH,KAAI,SAAAC,GACzB,MAAO,CAAEgF,GAAIhF,EAAEgF,GAAIwB,MAAOxG,EAAEwG,UAEhChI,QAAQC,IAAI8I,GATD,SAUQhI,EAAIyC,KAAK,oBAAqB,CAC7CvB,KAAM,QACN+G,OAAQD,GAER,CACIxC,QAAS,CACL,cAAgB,UAAhB,OAA2BzC,MAhB5B,OAULmF,EAVK,OAoBXjJ,QAAQC,IAAIgJ,GApBD,kDAsBXjJ,QAAQC,IAAI,wDAtBD,0DAAH,qDA0BpB,OACI,qCACKuH,GAAkB,cAAC,EAAD,CACfpC,kBAAmBA,EACnBC,iBAAkBA,IAEtB,sBAAK/D,UAAU,mBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,oBAAIA,UAAU,aAAd,uCACA,qBAAKA,UAAU,qBAAf,SACI,oBAAIA,UAAU,YAAd,kFAEJ,sBAAKA,UAAU,qBAAf,UACI,wBACIA,UAAU,gBACVqB,KAAK,SACLjB,QAAS,kBAAM0D,GAAkB,IAHrC,0BAMA,wBACI9D,UAAU,gBACVqB,KAAK,SAFT,6BAOJ,sBACIrB,UAAS,UAAKmG,EAAiB,6BAA+B,GAArD,sBACT/F,QAAS,kBAAMgG,GAAmBD,IAFtC,UAGC,sBACGrG,MAAO,CAAE4G,MAAM,aAAD,OAAeG,EAAf,MADjB,qBAEeP,KAEhB,sBAAKtG,UAAU,qBAAf,UACI,oBACIA,UAAU,YADd,0BAGA,cAAC,EAAD,CACIuB,MAAOsF,EACPd,QAjHJ,CAAC,aAAc,UAAW,MAAO,SAAU,OAAQ,SAkH/CC,SAAUc,EACV9G,UAAW,0BAOvB,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,qBAAf,UACKoH,EAAW,GACXA,EAAW,GACXA,EAAW,IACXA,EAAW,OAEhB,wBACIpH,UAAU,gBACVI,QAAS,kBAAMoH,KAFnB,4B,gBChILI,G,MAhBS,SAAC,GACH,IADKrG,EACN,EADMA,MAAOyE,EACb,EADaA,SAC5B6B,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACP,OACI,qBAAKhI,MAAO,CAAEiI,QAAS,cAAeC,WAAY,OAAQC,MAAO,OAAjE,SACI,uBACIH,IAAKA,EACLD,IAAKA,EACLxG,KAAK,QACLE,MAAOA,EACPD,SAAU0E,Q,iBCqBXkC,G,MA7BC,SAAC,GAAqF,IAAnFC,EAAkF,EAAlFA,UAAWjD,EAAuE,EAAvEA,GAAIkD,EAAmE,EAAnEA,UAAWC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eAC5E,EAAwCpJ,mBAAS,MAAjD,mBAAOqJ,EAAP,KAAqBC,EAArB,KAKA,OAHAnJ,qBAAU,WACNmJ,EAAgBH,EAAUrD,EAAK,MAChC,CAACqD,EAAWrD,EAAImD,IAEf,qBACIrI,UAAS,UAAKoI,EAAL,YAAkBD,IAAcjD,GAAOuD,EAAqC,GAAtB,oBAAtD,yBACPA,GAAgBN,IAAcjD,GAA9B,UAAuCoD,EAAvC,wBADO,yBAEPG,GAAgBN,IAAcjD,GAAMoD,EAF7B,kBAITK,YAAa,WACT,IAAMzB,EAAO,YAAOqB,GAIhBrB,EAAQ,IAHPuB,EAG6B,IAAhBvB,EAAQ,KAAoBA,EAAQ,IAAM,GAF1B,IAAhBA,EAAQ,IAAgB,EAAIA,EAAQ,IAAM,EAI5DwB,GAAiBD,GACjBvB,EAAQhC,EAAK,IAAMgC,EAAQhC,EAAK,GAChCsD,EAAetB,EAASmB,Q,QCkFzBO,EAvGA,SAAC,GAaL,IAZL1D,EAYI,EAZJA,GACEkD,EAWE,EAXFA,UACAC,EAUE,EAVFA,SACAQ,EASE,EATFA,YACAC,EAQE,EARFA,GACAX,EAOE,EAPFA,UACAY,EAME,EANFA,UACAC,EAKE,EALFA,gBACAC,EAIE,EAJFA,WACAC,EAGE,EAHFA,gBACAC,EAEE,EAFFA,IACAC,EACE,EADFA,KAGJ,EAA8BhK,mBAAS,GAAvC,mBAAOiK,EAAP,KAAgBC,EAAhB,KAEA/J,qBAAU,WACN,GAAI0J,IAA2C,IAA7BF,EAAUZ,EAAY,GAAa,CACjD,IAAMoB,EAAO,uCAAG,WAAOC,GAAP,iBAAAhK,EAAA,6DACNiK,EAAcC,iBAAOF,GADf,SAEcL,EAAIQ,gBAAgBF,GAFlC,cAENG,EAFM,yBAGLA,GAHK,2CAAH,uDAKC,uCAAG,WAAOC,EAAMC,GAAb,qBAAAtK,EAAA,4DACK,cAAd2J,EAAIY,OACJZ,EAAIa,SAFK,SAIiBT,EAAQM,GAJzB,cAIPI,EAJO,gBAKQd,EAAIe,aALZ,cAKPC,EALO,QAMNf,KAAK7H,MAAQuH,EAAGM,KACvBe,EAAOC,QAAQN,GAPF,UASYX,EAAIkB,qBAThB,SASTC,EATS,QAUAC,UAAUhJ,MAAQuH,EAAGyB,UAClCD,EAAaE,OAAOjJ,MAAQuH,EAAG0B,OAE/BF,EAAajJ,KAAOyH,EAAGzH,KACvBiJ,EAAaF,QAAQD,IAGfM,EAAatB,EAAIuB,sBACZC,OAASV,EACpBQ,EAAWL,QAAQE,GAGH,IAAZjB,GACAoB,EAAWG,QAGXtB,EAAW,IAEXmB,EAAWG,MAAM,EAAGzB,EAAI0B,YAAcxB,GA5B7B,4CAAH,wDA+BdyB,CAAShC,EAAGiC,QAAS3B,MAI1B,CAACjB,EAAWY,EAAW7D,EAAI4D,EAAIG,EAAYZ,EAAUe,EAAMC,EAASF,IA2BvE,OACI,mCACI,qBACInJ,UAAS,UAAKoI,EAAL,0BACXU,EAAGpC,MADQ,yBAEX2B,IAAanD,EAAb,WAA+B,YAFpB,yBAGX+D,IAA2C,IAA7BF,EAAUZ,EAAY,GAApC,oBAAwE,aAEtEQ,YA7BM,WACdE,EAAY3D,GACU6D,EAAUiC,MAAK,SAAA9K,GAAC,OAAU,IAANA,MACrBmI,IAAanD,GAC9BgE,EAAgBb,GAAWY,GAE/BD,EAAgBF,EAAGpC,QAiBf,SAQI,qBAAK1G,UAAU,qBAAf,SArBJ+I,EAAU,IACNE,EACO,mBAAGjJ,UAAU,sBAEjB,mBAAGA,UAAU,uBAEjB,UCyKAiL,EAlPM,SAAC,GAMf,IALH9B,EAKE,EALFA,IACAzB,EAIE,EAJFA,OACAwD,EAGE,EAHFA,UACAC,EAEE,EAFFA,SACAb,EACE,EADFA,aAEA,EAAkClL,oBAAS,GAA3C,mBAAOgM,EAAP,KAAkBC,EAAlB,KAEA,EAAsBjM,mBAAS,KAA/B,mBAAOkM,EAAP,KAAYC,EAAZ,KACA,EAA8BnM,mBAAS,KAAvC,mBAAOoM,EAAP,KAAgBC,EAAhB,KACA,EAA8BrM,oBAAS,GAAvC,mBAAOsM,EAAP,KAAgBC,EAAhB,KACA,EAAwBvM,mBAAS,GAAjC,mBAAOwM,EAAP,KAAaC,EAAb,KACA,EAA0CzM,mBAAS,GAAnD,mBAAO0M,EAAP,KAAsBC,EAAtB,KACA,EAA8B3M,oBAAS,GAAvC,mBAAO4M,EAAP,KAAgBC,EAAhB,KAEA,EAAkC7M,mBAAS,IAA3C,mBAAO2J,EAAP,KAAkBmD,EAAlB,KACA,EAAgC9M,mBAAS,GAAzC,mBAAOiJ,EAAP,KAAiBQ,EAAjB,KACA,EAAwCzJ,mBAAS,cAAjD,mBAAOkJ,GAAP,KAAqBU,GAArB,KAGAzJ,qBAAU,WAEF8L,GADA3D,KAKL,CAACA,IAIJ,OAAwBtI,mBAAS,KAAjC,qBAAOgK,GAAP,MAAa+C,GAAb,MACA,GAAkC/M,mBAAS,KAA3C,qBAAOmL,GAAP,MAAkB6B,GAAlB,MAEA7M,qBAAU,WACF4L,IACAA,EAAS/B,KAAK7H,MAAQ6H,IAEtBkB,IACAA,EAAaC,UAAUhJ,MAAQgJ,GAC/BD,EAAajJ,KAAO,WAEzB,CAAC8J,EAAU/B,GAAMkB,EAAcC,KAElC,IAAM8B,GAAwB,SAACnM,EAAGmB,GAC9B,IAAMiL,EAAU,YAAO5E,GAEnB4E,EAAWjE,EAAW,GAAGhH,GADhB,SAATA,EACiCnB,EAAEyC,OAAOpB,MAAQ,IAEjBrB,EAAEyC,OAAOpB,MAK9C2J,EAAUoB,IAKd/M,qBAAU,WAEN,IADA,IAAIgN,EAAO,GACFpM,EAAI,EAAGA,EAAI,GAAIA,IACpBoM,EAAKpM,EAAI,GAAK,IAAIqG,MAAM,IAAIC,MAAK,GAErC8F,EAAKtD,WAAa,IAAIzC,MAAM,IAAIC,MAAK,GACrCyF,EAAaK,KAId,CAACP,EAASd,IAEb3L,qBAAU,WACNmD,YAAW,WACP+I,EAAWH,KACZ,OACJ,CAACA,IAEJ,IAAMkB,GAAiB,SAAC7F,EAAKK,GACzB,IAAMyF,EAAO,2BAAQ1D,GAAR,kBAAoB/B,EAAQL,IACzCuF,EAAa,eAAKO,KAEhBvD,GAAkB,SAACwD,EAAKC,GAC1B,IAAMzF,EAAO,YAAO6B,EAAUE,YAC9B/B,EAAQwF,EAAM,GAAKC,EACnB,IAAMF,EAAO,2BAAQ1D,GAAR,IAAmBE,WAAY/B,IAC5CgF,EAAa,eAAKO,KAIhBG,GAAa,SAACC,EAAWC,EAAWC,EAAaC,GACnD,IAAM1F,EAAU,IAAId,MAAMqG,GAAWpG,KAAK,GAsC1C,OArCa,qBAAKzG,UAAW8M,EAAhB,SACRxF,EAAQrH,KAAI,SAACC,EAAGC,GACb,MAAoB,+BAAhB4M,EAEI,cAAC,EAAD,CAEI3E,UAAW2E,EACX5E,UAAW2D,EACX5G,GAAI8H,EAAU7M,EACdkI,SAAUA,EACVC,aAAcA,GACdC,UAAWQ,EAAU,GAAD,OAAIV,IACxBG,eAAgBgE,IARpB,UACYO,GADZ,OAC0BC,EAAU7M,IAYpC,cAAC,EAAD,CAEIiI,UAAW2E,EACX7H,GAAI8H,EAAU7M,EACdkI,SAAUA,EACVQ,YAAaA,EACbV,UAAW2D,EACX/C,UAAWA,EAAU,GAAD,OAAIiE,EAAU7M,IAClC6I,gBAAiBA,GACjBC,WAAYF,EAAUE,WAAW+D,EAAU7M,EAAI,GAC/C+I,gBAAiBA,GAEjBC,IAAKA,EACLC,KAAMkB,EACNxB,GAAIpB,EAAOsF,EAAU7M,EAAI,IAd7B,UACY4M,GADZ,OAC0BC,EAAU7M,UAqBlDyK,GAAQ,WACNc,IACAG,EAAQ,GACRE,EAAiB,IAErBJ,GAAYD,IAOhB,OACI,qCACKN,GAAa,oBAAItL,MAAO,CAAE4G,MAAO,SAApB,8BACZ0E,GAAa,qCACX,cAAC,IAAD,CAAe6B,QAAS,IAAQzB,EAAU,EAAGE,QAASA,EAClDwB,SAAU,WACNrB,EAASD,EAAO,GAChBG,EAAiBD,EAAgB,GAAKA,EAAgB,EAAI,MAGjEpE,GAAUyB,GACP,sBAAKnJ,UAAU,sBAAf,UACI,sBAAKA,UAAU,gCAAf,UACK4M,GAAW,EAAG,2BAA4B,6BAA8B,GACxEA,GAAW,EAAG,2BAA4B,6BAA8B,GACxEA,GAAW,EAAG,2BAA4B,6BAA8B,IACxEA,GAAW,EAAG,2BAA4B,6BAA8B,IAJ7E,OAKCtB,EACG,cAAC,EAAD,CACI/J,MAAO+J,EACPtF,SAAU,SAAC9F,GAAQqL,EAAOrL,EAAEyC,OAAOpB,QACnCsG,IAAK,MACLC,IAAK,OACT,cAAC,EAAD,CACIvG,MAAc,IAAP6H,GAAYpD,SAAU,SAAC9F,GAC1BiM,GAAQjM,EAAEyC,OAAOpB,MAAQ,MAE7BsG,IAAK,MACLC,IAAK,MAhBb,QAkBcsB,GACV,cAAC,EAAD,CACI7H,MAAOgJ,GAAWvE,SAAU,SAAC9F,GACzBkM,GAAalM,EAAEyC,OAAOpB,QAE1BsG,IAAK,OACLC,IAAK,MAxBb,aA0BeyC,GACX,uBACCuB,KAEL,sBAAK9L,UAAU,2BAAf,UACK4M,GAAW,EAAG,2BAA4B,uBAAwB,GAClEA,GAAW,EAAG,2BAA4B,uBAAwB,GAClEA,GAAW,EAAG,2BAA4B,uBAAwB,IAClEA,GAAW,EAAG,2BAA4B,uBAAwB,IAClEhB,EACD,sBAAK9L,MAAO,CAAE+C,QAAS,OAAQmF,WAAY,QAA3C,UACI,cAAC,EAAD,CACIzG,MAAmC,IAA5BmG,EAAOW,EAAW,GAAGe,KAAYpD,SAAU,SAAC9F,GAC/CmM,GAAsBnM,EAAG,SAG7B2H,IAAK,MACLC,IAAK,MAET,cAAC,EAAD,CACIvG,MAAOmG,EAAOW,EAAW,GAAGkC,UAAWvE,SAAU,SAAC9F,GAC9CmM,GAAsBnM,EAAG,cAE7B2H,IAAK,OACLC,IAAK,MAET,cAAC,EAAD,CACIvG,MAAOmG,EAAOW,EAAW,GAAGmC,OAAQxE,SAAU,SAAC9F,GAC3CmM,GAAsBnM,EAAG,WAE7B2H,IAAK,OACLC,IAAK,UAET,gCACI,yBAEIvG,MAAOmG,EAAOW,EAAW,GAAGhH,KAC5BC,SAAU,SAACpB,GACPmM,GAAsBnM,EAAG,SAJjC,UAMI,wBAAQqB,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,sBAGJ,wBACInB,QAAS,kBAAMwK,MADnB,mBAEA,wBAAQxK,QAAS,kBA9F7C6L,GAAYD,QACZpB,MA6F4B,sCCpHrBuC,EArHH,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,cAAelO,EAA0C,EAA1CA,iBAAkBmO,EAAwB,EAAxBA,kBAC5C,EAAwBjO,mBAASgO,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAsBnO,mBAAS,MAA/B,mBAAO+J,EAAP,KAAYqE,EAAZ,KACA,EAAgCpO,mBAAS,MAAzC,mBAAO+L,EAAP,KAAiBsC,EAAjB,KACA,EAAwCrO,mBAAS,MAAjD,mBAAOkL,EAAP,KAAqBoD,EAArB,KACA,EAA4BtO,mBAAS,MAArC,mBAAOsI,EAAP,KAAewD,EAAf,KA+EA,OA1EA3L,qBAAU,WACN,GAAI8N,EAAmB,CAEfC,GACAE,EAAO,IAAIG,cAEf,IAAMC,EAAiB,IAAIpH,MAAM,IAAIC,KAAK,CACtC8D,UAAW,IACXC,OAAQ,EACRnJ,KAAM,QACN+H,KAAM,OAGO,uCAAG,kCAAA5J,EAAA,sEACKC,EAAIC,IAAJ,4BAA6B2N,IADlC,cACVQ,EADU,OAEVC,EAAUD,EAAOjO,KAAK,GAAG8H,OAKzBqG,EAAeD,EAAQ7N,IAAR,+BAAAT,EAAA,MAAY,WAAOU,GAAP,SAAAV,EAAA,sEAChBC,EAAIC,IAAJ,kBAAmBQ,EAAEgF,KADL,mFAAZ,uDAGjB8I,EAAgB,KAVJ,SAWVlP,IAAMmP,IAAIF,GACXG,KAAKpP,IAAMqP,QAAO,WAAkB,IACjC,IAAIjH,EAAU,GADmB,mBAAdkH,EAAc,yBAAdA,EAAc,gBAEjC,IAAK,IAAIjO,EAAI,EAAGA,EAAI,GAAIA,IACpB+G,EAAQmH,KAAR,aACItD,QAASqD,EAAUjO,GAAGP,KAAK,GAAGmF,MAC9B2B,MAAOoH,EAAQ3N,GAAGuG,OACfkH,EAAezN,KAG1B6N,EAAgB9G,MAChBoH,OAAM,SAAAC,OAtBE,OA0BhB7P,QAAQC,IAAIkP,GAEZ3C,EAAU8C,GA5BM,4CAAH,qDA+BjBQ,QAGAtP,GAAiB,KAKtB,CAACoO,EAAMD,EAAmBnO,IAI7BK,qBAAU,WAEF4J,IAAQgC,IACRsC,EAAYtE,EAAIe,cAChBwD,EAAgBvE,EAAIkB,yBAEzB,CAAClB,EAAKgC,IAET5L,qBAAU,WACF4L,GACAA,EAASf,QAAQjB,EAAIsF,aAGrBnE,GACAA,EAAaF,QAAQe,KAE1B,CAACA,EAAUhC,EAAKmB,IAGf,sCACM+C,GAAqB,cAAC,IAAD,CAAU/M,GAAG,MAGnC+M,GACG,qCACI,wBACIjN,QAAS,WACAkN,GAGDE,EAAO,MACPD,GAAQ,GACRE,EAAY,MACZC,EAAgB,MAChBxC,EAAU,OANVqC,GAAQ,IAHpB,qBAcA,cAAC,EAAD,CACIpE,IAAKA,EACLzB,OAAQA,EACRwD,UAAWA,EACXC,SAAUA,EACVb,aAAcA,WCrDvB6C,EAzDH,WACV,MAA0C/N,oBAAS,GAAnD,mBAAOgO,EAAP,KAAsBlO,EAAtB,KAEA,EAAkDE,mBAAS,MAA3D,mBAAOiO,EAAP,KAA0BlO,EAA1B,KAEA,EAA8BC,oBAAS,GAAvC,mBAAOsP,EAAP,KAAgBhN,EAAhB,KACA,EAAgCtC,mBAAS,MAAzC,mBAAOmD,EAAP,KAAiBW,EAAjB,KAQA,OAPA3D,qBAAU,WACJ6C,aAAaI,QACfd,GAAW,GACXwB,EAAYd,aAAaK,QAAQ,YAElC,CAACiM,IAGF,qCACGhQ,QAAQC,IAAIyO,IACXsB,GAAW,cAAC,EAAD,CAAahN,WAAYA,IACtC,cAAC,IAAD,UACGgN,GAAW,sCACRtB,GAAiB,cAAC,EAAD,CAAQ7K,SAAUA,IACrC,cAAC,IAAD,CAAOoM,KAAK,IAAIC,OAAK,EACnBC,UAAW,kBACT,cAAC,EAAD,CACE3P,iBAAkBA,EAClBkO,cAAeA,EACfjO,qBAAsBA,OAK5B,cAAE,IAAF,CAAQwP,KAAK,QAAQC,OAAK,EAACC,UAAW,kBACpC,cAAC,EAAD,CACE3P,iBAAkBA,EAClBkO,cAAeA,EACfjO,qBAAsBA,OAI1B,cAAE,IAAF,CAAQwP,KAAK,UAAUC,OAAK,EAACC,UAAW,kBACtC,cAAC,EAAD,OAGF,cAAE,IAAF,CAAQF,KAAK,WAAWC,OAAK,EAACC,UAAW,kBACvC,cAACC,EAAD,CACE1B,cAAeA,EACflO,iBAAkBA,EAClBmO,kBAAmBA,gB,MCpDjC0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9df971e1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet url;\r\nif (process.env.NODE_ENV === 'development') {\r\n    url = 'http://localhost:5000/api/'\r\n}\r\nif (process.env.NODE_ENV === 'production') {\r\n    console.log(process.env.NODE_ENV)\r\n    url = 'api'\r\n}\r\nconst api = axios.create({\r\n    baseURL: url,\r\n})\r\n\r\nexport default api;\r\n","export default __webpack_public_path__ + \"static/media/openBackgound.68c73abe.jpg\";","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Api from '../../api/Api'\r\nimport './home.css'\r\nimport testImg from '../../img/openBackgound.jpg'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import OpeningPage from '../openingPage/OpeningPage';\r\nconst Home = ({ setConsoleIsOpen, setCurrentCollection }) => {\r\n    const [collectionsNames, setCollectionsNames] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getCollectionsName = async () => {\r\n            const res = await Api.get('/sound-collection')\r\n            setCollectionsNames(res.data)\r\n        }\r\n        getCollectionsName()\r\n    }, [])\r\n\r\n    const openConsole = () => {\r\n        setConsoleIsOpen(true)\r\n\r\n    }\r\n\r\n\r\n    const insetCollectionsNames = () => {\r\n        return collectionsNames.map((e, i) => {\r\n            return <section className='home-section' key={`collection${i}`}\r\n                onClick={() => {\r\n                    setCurrentCollection(e._id)\r\n                    openConsole()\r\n                }}\r\n            >\r\n                <Link\r\n                    to={'/console'}\r\n                >\r\n                    <figure className='home-figure-img'>\r\n                        <img src={testImg} alt='fasd' />\r\n                    </figure>\r\n                    <figure className='home-figure-text'>\r\n                        <article className='home-article'>\r\n                            <span >{e.ownerName}</span>\r\n                            <h3 className='home-h3'>{e.name} {e._id}</h3>\r\n                        </article>\r\n                    </figure>\r\n                </Link>\r\n            </section >\r\n        })\r\n    }\r\n    return (\r\n        <div style={{ paddingTop: '5rem' }}>\r\n            <div className='home-main'>\r\n                {collectionsNames && insetCollectionsNames()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css';\r\n\r\n\r\nconst Navbar = ({ openCloseLogMenu, userlog, userDetails }) => {\r\n    const [isNavOpen, setIsNavOpen] = useState(false);\r\n\r\n    const menuOpen = () => {\r\n        if (isNavOpen) {\r\n            return '300px'\r\n        } else {\r\n            return '0'\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"my-nav\" style={{ fontSize: '17px' }}>\r\n            <Link to='/' className=\"menu-logo\">\r\n                A Beat Mor\r\n            </Link>\r\n            <div className=\"hamburger\" onClick={() => { setIsNavOpen(!isNavOpen) }}>\r\n                {/* nav here */}\r\n                dads\r\n            </div>\r\n            <div className=\"nav-menu\" style={{ maxHeight: menuOpen() }}>\r\n                <Link to='/search' className=\"menu-link\">Search</Link>\r\n                <Link to='/create' className=\"menu-link\">Create</Link>\r\n                <Link to={`/`} className=\"menu-link\">Home</Link>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Navbar;","const Input = ({ type, onChange, value, className }) => {\r\n    return (\r\n        <input\r\n            className={className} onChange={onChange} value={value}></input>\r\n    )\r\n}\r\n\r\nexport default Input;","import { useState } from 'react';\r\nimport Input from '../input/Input'\r\nimport Api from '../../api/Api'\r\nimport './login.css'\r\n\r\nconst Login = ({ setLoginCard, setIsLoged }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n\r\n    const handleSubmission = async () => {\r\n        try {\r\n            // console.log(password.toString())\r\n            const res = await Api.post('/users/login', {\r\n                password: password.toString(),\r\n                email\r\n            })\r\n            localStorage.setItem('name', res.data.user.userName)\r\n            localStorage.setItem('token', res.data.token)\r\n            setLoginCard(false)\r\n            setIsLoged(true)\r\n            console.log(localStorage.getItem('name'))\r\n            console.log(localStorage.getItem('token'))\r\n        } catch (e) {\r\n            setShowMessage(true)\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='log-in-top'>\r\n            <div className='log-in-container'>\r\n                <h2\r\n                    className='log-in-container-h2'\r\n                >Welcome Back</h2>\r\n                <br></br>\r\n                <h3\r\n                    className='log-in-container-h3'\r\n                >Email</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'log-in-input'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <br></br>\r\n                <h3\r\n                    className='log-in-container-h3'\r\n                >Password</h3>\r\n                <Input\r\n                    className={'log-in-input'}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value.split(' '))}\r\n                />\r\n                <br></br>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <button\r\n                        className='log-in-container-button'\r\n                        type='button' onClick={handleSubmission}\r\n                    >Submit</button>\r\n                    <br></br>\r\n                    <button\r\n                        className='log-in-container-button'\r\n                        type='button' onClick={() => {\r\n                            setPassword('')\r\n                            setEmail('')\r\n                            setLoginCard(false)\r\n                        }}\r\n                    >Cancel</button>\r\n                    {/* <button\r\n                    type='button' onClick={async () => {\r\n                        const test = await Api.get('users/me', {\r\n                            headers: {\r\n                                \"Authorization\": localStorage.getItem('token')\r\n                            }\r\n                        })\r\n                        console.log(test)\r\n                    }}\r\n                >Get me test</button> */}\r\n                </div>\r\n                <br />\r\n                {!showMessage && < br />}\r\n                {showMessage && <h4>Wrong input please try again</h4>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Login;","import { useState } from 'react';\r\nimport Input from '../input/Input'\r\nimport Api from '../../api/Api'\r\nimport './sign.css'\r\n\r\nconst Sign = ({ setLoginCard, setIsLoged }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const handleSubmission = async () => {\r\n        if (passwordConfirm !== password) {\r\n            setShowMessage(true)\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n                setMessage('Your password conformation is in currect')\r\n            }, 2000)\r\n        } else if (password.length < 8) {\r\n            setShowMessage(true)\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n                setMessage('Your password must be at least 8 digits')\r\n            }, 2000)\r\n        } else {\r\n            try {\r\n                const res = await Api.post('/users/', {\r\n                    password: password.toString(),\r\n                    email,\r\n                    userName\r\n                })\r\n                localStorage.clear()\r\n                localStorage.setItem('name', res.data.user.userName)\r\n                localStorage.setItem('token', res.data.token)\r\n                setLoginCard(false)\r\n                setIsLoged(true)\r\n                console.log(localStorage.getItem('name'))\r\n                console.log(localStorage.getItem('token'))\r\n            } catch (e) {\r\n                setShowMessage(true)\r\n                setTimeout(() => {\r\n                    setShowMessage(false)\r\n                    setMessage('Error in email Check the spelling and make sure you are not already registered')\r\n                }, 2000)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='signin-top'>\r\n            <div className='signin-container'>\r\n                <h2\r\n                    className='signin-container-h2'\r\n                >Ready to get started</h2>\r\n                <h3\r\n                    className='signin-container-h3'\r\n                >Write your user name</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'signin-input'}\r\n                    value={userName}\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='signin-container-h3'\r\n                // className='signin-container-h3'\r\n                >Enter your Email</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'signin-input'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='signin-container-h3'\r\n                >Choose password</h3>\r\n                <Input\r\n                    className={'signin-input'}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='signin-container-h3'\r\n                >Confirm your password</h3>\r\n                <Input\r\n                    className={'signin-input'}\r\n                    value={passwordConfirm}\r\n                    onChange={(e) => setPasswordConfirm(e.target.value)}\r\n\r\n                />\r\n                <br></br>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <button\r\n                        className='signin-container-button'\r\n                        type='button' onClick={handleSubmission}\r\n                    >Submit</button>\r\n                    <button\r\n                        className='signin-container-button'\r\n                        type='button' onClick={() => {\r\n                            setPassword('')\r\n                            setEmail('')\r\n                            setLoginCard(false)\r\n                        }}\r\n                    >Cancel</button>\r\n                </div>\r\n                <br />\r\n                {!showMessage && < br />}\r\n                {showMessage && <h4>{message}</h4>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Sign;","// import img from '../../img/openBackgound.jpg'\r\nimport { useState } from 'react';\r\nimport './openingPage.css';\r\nimport Login from '../../components/login/Login';\r\nimport Sign from '../../components/sign/sign';\r\n\r\nconst OpeningPage = ({ setIsLoged }) => {\r\n    const [logOrSingCard, setLogOrSingCard] = useState(false)\r\n    const [singCard, setSingCard] = useState(false)\r\n    const [loginCard, setLoginCard] = useState(false)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='opening-page-container'>\r\n                <h1\r\n                    className='opening-page-container-h1'\r\n                >A Beat Mor</h1>\r\n                <h2\r\n                    className='opening-page-container-h2'\r\n                >Tomorrow's sound starts today</h2>\r\n                <h3\r\n                    className='opening-page-container-h3'\r\n                >\r\n                    Is your head full of sounds? You have an idea for the beat of the next hit?</h3>\r\n                <h2\r\n                    className='opening-page-container-h2'\r\n                >Come and share...</h2>\r\n                <h3\r\n                    className='opening-page-container-h3'\r\n                >Upload your own unique sounds or use existing sounds Create the rhythm Add audio effects.\r\nSave and share and let the world experience your touch.</h3>\r\n                <br />\r\n                <div style={{ display: 'flex', justifyContent: !logOrSingCard ? 'center' : 'space-around ' }}>\r\n                    {!logOrSingCard && <button\r\n                        className='opening-page-container-button'\r\n                        onClick={() => {\r\n\r\n                            setLogOrSingCard(true)\r\n                        }\r\n                        }>Get started</button>}\r\n                    {logOrSingCard &&\r\n                        <>\r\n                            <button\r\n                                className='opening-page-container-button'\r\n                                onClick={() => setLoginCard(true)}>Log in</button>\r\n                            <button\r\n                                className='opening-page-container-button'\r\n                                onClick={() => setSingCard(true)}>Sing</button>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            { loginCard && <Login\r\n                setLoginCard={setLoginCard}\r\n                setIsLoged={setIsLoged}\r\n            />}\r\n\r\n            { singCard && <Sign\r\n                setLoginCard={setSingCard}\r\n                setIsLoged={setIsLoged}\r\n            />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpeningPage;","import { useState } from 'react'\r\nimport Api from '../../api/Api'\r\nimport Input from '../input/Input'\r\n// import Selector from '../selector/Selector'\r\nimport './addSound.css'\r\nconst AddSound = ({ setAddSoundIsOpen, setSelectedSound }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n    const [fileName, setFileName] = useState('');\r\n    const [tagsValue, setTagsValue] = useState(null);\r\n    // const selectorOptions = ['red', 'blue', 'green', 'yellow', 'ligth-blue', 'purpule']\r\n    // const [selectValue, setSelectVal] = useState(selectorOptions[0]);\r\n\r\n    const [userMessage, setUserMessage] = useState(null);\r\n    const [buttonText, setButtonText] = useState('Submit');\r\n\r\n\r\n    const getFileFromUser = (event) => {\r\n        let reader = new FileReader();\r\n        if (event.target.files[0]) {\r\n            reader.readAsDataURL(event.target.files[0])\r\n            setSelectedFile(reader);\r\n            setIsFilePicked(true);\r\n            if (fileName === '') {\r\n                if (event.target.files[0].name.match(/\\.wav$/)) {\r\n                    setFileName(event.target.files[0].name.split('.wav')[0])\r\n                }\r\n                if (event.target.files[0].name.match(/\\.mp3$/)) {\r\n                    setFileName(event.target.files[0].name.split('.mp3')[0])\r\n                }\r\n            }\r\n            setButtonText('Submit')\r\n        } else {\r\n            setIsFilePicked(false);\r\n        }\r\n    }\r\n    const handleSubmission = async () => {\r\n        if (!tagsValue) {\r\n            setUserMessage('File must have at least one tag')\r\n            setButtonText('Try Again')\r\n        } else {\r\n            if (isFilePicked) {\r\n                const token = localStorage.getItem('token')\r\n                // console.log(token)\r\n                const file = await selectedFile.result.split('data:audio/wav;base64,').join('')\r\n                try {\r\n                    const data = await Api.post('sounds', {\r\n                        name: fileName,\r\n                        audio: file,\r\n                        tags: tagsValue\r\n                    }, {\r\n                        headers: {\r\n                            \"Authorization\": `Bearer ${token}`\r\n                        }\r\n                    })\r\n\r\n                    setUserMessage('Succeeded')\r\n                    // setTimeout(() => {\r\n                    setUserMessage('')\r\n                    // }, 2000);\r\n                    setSelectedFile(null)\r\n                    setIsFilePicked(null)\r\n                    setFileName('')\r\n                    setTagsValue(null)\r\n                    console.log(data.data.name)\r\n                    setSelectedSound({\r\n                        name: data.data.name,\r\n                        id: data.data._id,\r\n                        audio: data.data.audio\r\n                    })\r\n                    setAddSoundIsOpen(false)\r\n                } catch (e) {\r\n                    setUserMessage('File name must be unique!')\r\n                    setButtonText('Try Again')\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='add-sound-top'>\r\n                <div className='add-sound-container'>\r\n                    <div className='add-sound-exit'\r\n                        onClick={() => setAddSoundIsOpen(false)}\r\n                    >\r\n                        X\r\n                    </div>\r\n                    <h2\r\n                        className='add-sound-container-h2'\r\n                    >Upload new sound</h2>\r\n                    <br className='add-sound-br'></br>\r\n                    <h3\r\n                        className='add-sound-container-h3'\r\n                    >Insert sound name</h3>\r\n                    <p\r\n                        className='add-sound-container-p'\r\n                    >Must be unique (auto fill when upload file)</p>\r\n                    <Input\r\n                        className={'add-sound-input'}\r\n                        value={fileName}\r\n                        onChange={(e) => setFileName(e.target.value)}\r\n                    />\r\n                    <br className='add-sound-br'></br>\r\n                    <h3\r\n                        className='add-sound-container-h3'\r\n                    >Insert sound tags</h3>\r\n                    <p\r\n                        className='add-sound-container-p'\r\n                    >A space must be left between each tag</p>\r\n                    <Input\r\n                        className={'add-sound-input'}\r\n                        value={tagsValue ? tagsValue.join(' ') : ''}\r\n                        onChange={(e) => setTagsValue(e.target.value.split(' '))}\r\n                    />\r\n                    <br className='add-sound-br'></br>\r\n                    {/* <div className='selector' >\r\n                    <div>\r\n                        <h3>Select color</h3>\r\n                        <p>That will be the button color</p>\r\n                    </div>\r\n                    <Selector\r\n                        className={'add-sound-input'}\r\n                        options={selectorOptions}\r\n                        value={selectValue}\r\n                        setValue={setSelectVal}\r\n                    />\r\n                </div>\r\n                <br></br> */}\r\n                    <label htmlFor=\"upload-sound\">Upload file</label>\r\n                    <div\r\n                        className='add-sound-button-div'>\r\n                        <input\r\n                            id='upload-sound'\r\n                            size=\"80\"\r\n                            type='file'\r\n                            accept='audio/mp3, audio/wav '\r\n                            onChange={getFileFromUser}\r\n                        />\r\n                        <div>\r\n                            {isFilePicked && <button\r\n                                className='add-sound-button'\r\n                                onClick={() => {\r\n                                    const newAudioTest = new Audio(`${selectedFile.result}`)\r\n                                    newAudioTest.play()\r\n                                }}\r\n                            >Test</button>}\r\n                            <button\r\n                                className='add-sound-button'\r\n                                type='button' onClick={handleSubmission}\r\n                            >{buttonText}</button>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        {!userMessage && <br />}\r\n                        <p\r\n                            className='add-sound-container-p'\r\n                        >{userMessage}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AddSound;","const Selector = ({ value, options, setValue, className }) => {\r\n    const setOptions = () => {\r\n        return options.map(e => {\r\n            return <option key={e} id={e}>{e}</option>\r\n        })\r\n    }\r\n    return (\r\n        <select\r\n            className={className}\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n        >\r\n            {options && setOptions()}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Selector;","import './create.css'\r\nimport AddSound from '../../components/addSound/AddSound'\r\nimport { useEffect, useState } from 'react'\r\nimport Selector from '../../components/selector/Selector'\r\nimport Api from '../../api/Api'\r\n\r\nconst Create = () => {\r\n    const [addSoundIsOpen, setAddSoundIsOpen] = useState(false)\r\n\r\n    const [fileIsSelected, setFileIsSelected] = useState(false)\r\n    const [selectedSound, setSelectedSound] = useState(null)\r\n    const [fileSelectedName, setFileSelectedName] = useState('')\r\n\r\n    const [arr, setArr] = useState(new Array(32).fill({ color: '' }))\r\n\r\n    const [selectorVal, setSelectorVal] = useState('purpule')\r\n    const selectorOps = ['ligth-blue', 'purpule', 'red', 'yellow', 'blue', 'green',];\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedSound) {\r\n            setFileSelectedName(selectedSound.name)\r\n        }\r\n    }, [selectedSound])\r\n\r\n\r\n    const padHandler = (e) => {\r\n        const index = e.target.id.replace('pad-num-', '')\r\n        if (fileIsSelected && selectedSound) {\r\n            const tempArr = arr;\r\n            tempArr[index] = {\r\n                ...tempArr[index],\r\n                id: selectedSound.id,\r\n                audio: selectedSound.audio,\r\n                name: selectedSound.name,\r\n                color: selectorVal\r\n            }\r\n            setFileIsSelected(false)\r\n            setArr(tempArr)\r\n        } else {\r\n            if (arr[index].id) {\r\n                const test = async () => {\r\n                    const audio = new Audio(`data:audio/mp3;base64,${arr[index].audio}`)\r\n                    await audio.play()\r\n                }\r\n                test()\r\n            }\r\n        }\r\n    }\r\n\r\n    const insertPads = (formIndex) => {\r\n        const tempMap = arr.filter((e, i) => {\r\n            return i >= formIndex && i < formIndex + 6\r\n        })\r\n        return <div className='pads-grid'>\r\n            {tempMap.map((e, i) => <div\r\n                className={`single-pad ${arr[formIndex + i].color}`}\r\n                key={`create-pad-${formIndex + i}`}\r\n                id={`pad-num-${formIndex + i}`}\r\n                onClick={padHandler}\r\n            ></div>)}\r\n        </div>\r\n    }\r\n\r\n    const saveCollection = async () => {\r\n        const tempArr = arr.filter(e => e.id)\r\n        if (tempArr.length === 24) {\r\n            try {\r\n                const token = localStorage.getItem('token')\r\n                // console.log(token)\r\n                const tempArr2 = tempArr.map(e => {\r\n                    return { id: e.id, color: e.color }\r\n                })\r\n                console.log(tempArr2)\r\n                const save = await Api.post('/sound-collection', {\r\n                    name: 'noare',\r\n                    sounds: tempArr2\r\n                },\r\n                    {\r\n                        headers: {\r\n                            \"Authorization\": `Bearer ${token}`\r\n                        }\r\n                    }\r\n                )\r\n                console.log(save)\r\n            } catch (e) {\r\n                console.log('the name is in use choose a differnt collection name')\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {addSoundIsOpen && <AddSound\r\n                setAddSoundIsOpen={setAddSoundIsOpen}\r\n                setSelectedSound={setSelectedSound}\r\n            />}\r\n            <div className='create-container'>\r\n                <div className='create-nav'>\r\n                    <h2 className=' create-h2'>Fill the board with sound</h2>\r\n                    <div className='create-buttons-div'>\r\n                        <h3 className='create-h3'>Upload or choose other sound, than fill the pad board as your wish</h3>\r\n                    </div>\r\n                    <div className='create-buttons-div'>\r\n                        <button\r\n                            className='create-button'\r\n                            type='button'\r\n                            onClick={() => setAddSoundIsOpen(true)}\r\n                        >Upload sound</button>\r\n\r\n                        <button\r\n                            className='create-button'\r\n                            type='button'\r\n                        >Search sound</button>\r\n\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`${fileIsSelected ? 'create-file-sound-selected' : ''} create-file-sound`}\r\n                        onClick={() => setFileIsSelected(!fileIsSelected)}\r\n                    ><span\r\n                        style={{ color: `var(--led-${selectorVal})` }}\r\n                    >SOUND: </span>{fileSelectedName}</div>\r\n\r\n                    <div className='create-buttons-div'>\r\n                        <h3\r\n                            className='create-h3'\r\n                        >Button color</h3>\r\n                        <Selector\r\n                            value={selectorVal}\r\n                            options={selectorOps}\r\n                            setValue={setSelectorVal}\r\n                            className={'create-selector'}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className='pads-container'>\r\n                    <div className='pads-container-san'>\r\n                        {insertPads(0)}\r\n                        {insertPads(7)}\r\n                        {insertPads(13)}\r\n                        {insertPads(19)}\r\n                    </div>\r\n                    <button\r\n                        className='create-button'\r\n                        onClick={() => saveCollection()}\r\n\r\n                    >Save</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Create;","import './horizontalRange.css'\r\nconst HorizontalRange = ({ value, setValue\r\n    , max, min }) => {\r\n    return (\r\n        <div style={{ padding: '0.3rem 1rem', background: 'none', width: '50%' }}>\r\n            <input\r\n                min={min}\r\n                max={max}\r\n                type='range'\r\n                value={value}\r\n                onChange={setValue}\r\n            ></input>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HorizontalRange;","import { useEffect, useState } from 'react'\r\n\r\nconst BeatBox = ({ boxTiming, id, thisClass, padIndex, currentColor, rythemArr, setMyRythemArr }) => {\r\n    const [boxIsPressed, setBoxIsPressed] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setBoxIsPressed(rythemArr[id - 1])\r\n    }, [rythemArr, id, padIndex])\r\n    return (\r\n        <div\r\n            className={`${thisClass} ${boxTiming === id && !boxIsPressed ? 'play-mode-boxIsOn' : ''}\r\n            ${boxIsPressed && boxTiming !== id && `${currentColor} empty-center-of-box`}\r\n            ${boxIsPressed && boxTiming === id && currentColor}\r\n            `}\r\n            onMouseDown={() => {\r\n                const tempArr = [...rythemArr]\r\n                if (!boxIsPressed) {\r\n                    tempArr[32] = tempArr[32] === false ? 1 : tempArr[32] + 1\r\n                } else {\r\n                    tempArr[32] = tempArr[32] === 1 ? false : tempArr[32] - 1\r\n                }\r\n                setBoxIsPressed(!boxIsPressed)\r\n                tempArr[id - 1] = !tempArr[id - 1]\r\n                setMyRythemArr(tempArr, padIndex)\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BeatBox;","import { useEffect, useState } from \"react\"\r\nimport { decode } from 'base64-arraybuffer'\r\nconst PadBox = (\r\n    { id,\r\n        thisClass,\r\n        padIndex,\r\n        setPadIndex,\r\n        so,\r\n        boxTiming,\r\n        rythemObj,\r\n        setCurrentColor,\r\n        padsStatus,\r\n        setMyPadsStatus,\r\n        ctx,\r\n        gain\r\n    }) => {\r\n\r\n    const [offSet1, setOffSet1] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (padsStatus && rythemObj[boxTiming - 1] === true) {\r\n            const getFile = async (filePath) => {\r\n                const arrayBuffer = decode(filePath)\r\n                const audioBuffer = await ctx.decodeAudioData(arrayBuffer)\r\n                return audioBuffer;\r\n            }\r\n            const playClip = async (clip, outPut) => {\r\n                if (ctx.state === 'suspended') {\r\n                    ctx.resume()\r\n                }\r\n                const clipAudioBuffer = await getFile(clip)\r\n                const myGain = await ctx.createGain()\r\n                myGain.gain.value = so.gain\r\n                myGain.connect(outPut)\r\n\r\n                let biquadFilter = await ctx.createBiquadFilter();\r\n                biquadFilter.frequency.value = so.frequency\r\n                biquadFilter.detune.value = so.detune\r\n                // biquadFilter.detune.value = 0\r\n                biquadFilter.type = so.type\r\n                biquadFilter.connect(myGain)\r\n                // biquadFilter.type = 'lowpass'\r\n\r\n                const clipSource = ctx.createBufferSource()\r\n                clipSource.buffer = clipAudioBuffer;\r\n                clipSource.connect(biquadFilter);\r\n\r\n                // console.log(clipSource)\r\n                if (offSet1 === 0) {\r\n                    clipSource.start()\r\n                    // console.log(ctx.currentTime - offSet)\r\n                    // console.log(myGain)\r\n                    setOffSet1(0)\r\n                } else {\r\n                    clipSource.start(0, ctx.currentTime - offSet1)\r\n                }\r\n            }\r\n            playClip(so.myAudio, gain)\r\n\r\n        }\r\n\r\n    }, [boxTiming, rythemObj, id, so, padsStatus, padIndex, gain, offSet1, ctx])\r\n\r\n\r\n\r\n\r\n\r\n    const userClick = () => {\r\n        setPadIndex(id)\r\n        const somethingInOn = rythemObj.find(e => e === true)\r\n        if (somethingInOn && padIndex === id) {\r\n            setMyPadsStatus(padIndex, !padsStatus)\r\n        }\r\n        setCurrentColor(so.color)\r\n    }\r\n\r\n    const setIcon = () => {\r\n        if (rythemObj[32]) {\r\n            if (padsStatus) {\r\n                return <i className=\"fas fa-undo fa-1x\"></i>\r\n            }\r\n            return <i className=\"fas fa-pause fa-1x\"></i>\r\n        }\r\n        return ''\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`${thisClass} \r\n            ${so.color}\r\n            ${padIndex === id ? `buttonOn` : 'buttonOff'}\r\n            ${padsStatus && rythemObj[boxTiming - 1] === true ? `play-mode-boxIsOn` : 'buttonOff'}`\r\n                }\r\n                onMouseDown={userClick}\r\n            >\r\n                <div className='play-mode-pad-icon'>{setIcon()}</div>\r\n\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PadBox;","import React, { useEffect, useState } from 'react';\r\nimport HorizontalRange from '../../components/horizontalRange/HorizontalRange'\r\nimport ReactInterval from 'react-interval';\r\nimport './playModePage.css'\r\nimport BeatBox from '../../components/beatBox/BeatBox'\r\nimport PadBox from '../../components/‏‏padBox/padBox'\r\n\r\n// import Sounds2 from '../../components/‏‏sounds/Sounds'\r\n\r\n\r\nconst PlayModePage = ({\r\n    ctx,\r\n    sounds,\r\n    setSounds,\r\n    gainNode,\r\n    biquadFilter\r\n}) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const [bpm, setBpm] = useState(120)\r\n    const [realBpm, setRealBpm] = useState(120)\r\n    const [enabled, setEnabled] = useState(false)\r\n    const [beat, setBeat] = useState(0)\r\n    const [sequencerBeat, setSequencerBeat] = useState(0)\r\n    const [restart, setRestart] = useState(false)\r\n\r\n    const [rythemObj, setRythemObj] = useState({})\r\n    const [padIndex, setPadIndex] = useState(1)\r\n    const [currentColor, setCurrentColor] = useState('ligth-blue');\r\n\r\n    //---Is Loading------///\r\n    useEffect(() => {\r\n        if (sounds) {\r\n            setIsLoading(false)\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n    }, [sounds])\r\n\r\n\r\n    //====AudioApi=====///\r\n    const [gain, setGain] = useState(0.75)\r\n    const [frequency, setFrequency] = useState(350)\r\n\r\n    useEffect(() => {\r\n        if (gainNode) {\r\n            gainNode.gain.value = gain\r\n        }\r\n        if (biquadFilter) {\r\n            biquadFilter.frequency.value = frequency\r\n            biquadFilter.type = 'notch'\r\n        }\r\n    }, [gainNode, gain, biquadFilter, frequency])\r\n\r\n    const setGainInSoundsObject = (e, type) => {\r\n        const tempSounds = [...sounds]\r\n        if (type === 'gain') {\r\n            tempSounds[padIndex - 1][type] = e.target.value / 100\r\n        } else if (type === 'type') {\r\n            tempSounds[padIndex - 1][type] = e.target.value\r\n        } else {\r\n            tempSounds[padIndex - 1][type] = e.target.value\r\n        }\r\n\r\n        setSounds(tempSounds)\r\n    }\r\n\r\n\r\n    //-----------\r\n    useEffect(() => {\r\n        let temp = {}\r\n        for (let i = 0; i < 24; i++) {\r\n            temp[i + 1] = new Array(33).fill(false)\r\n        }\r\n        temp.padsStatus = new Array(24).fill(true)\r\n        setRythemObj(temp)\r\n        // setSounds(Sounds2().map(e => {\r\n        //     return { ...e, gain: 0.75, frequency: 300 }\r\n        // }))\r\n    }, [restart, setSounds])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setRealBpm(bpm)\r\n        }, 1000)\r\n    }, [bpm])\r\n\r\n    const setMyRythemObj = (arr, index) => {\r\n        const tempObj = { ...rythemObj, [index]: arr }\r\n        setRythemObj({ ...tempObj })\r\n    }\r\n    const setMyPadsStatus = (pad, bool) => {\r\n        const tempArr = [...rythemObj.padsStatus]\r\n        tempArr[pad - 1] = bool\r\n        const tempObj = { ...rythemObj, padsStatus: tempArr }\r\n        setRythemObj({ ...tempObj })\r\n    }\r\n\r\n\r\n    const insertDivs = (rowLength, girdClass, singleClass, fromNum) => {\r\n        const tempMap = new Array(rowLength).fill(1)\r\n        const temp = <div className={girdClass}>\r\n            {tempMap.map((e, i) => {\r\n                if (singleClass === 'play-mode-single-sequencer') {\r\n                    return (\r\n                        <BeatBox\r\n                            key={`${singleClass}${fromNum + i}`}\r\n                            thisClass={singleClass}\r\n                            boxTiming={sequencerBeat}\r\n                            id={fromNum + i}\r\n                            padIndex={padIndex}\r\n                            currentColor={currentColor}\r\n                            rythemArr={rythemObj[`${padIndex}`]}\r\n                            setMyRythemArr={setMyRythemObj}\r\n                        />\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <PadBox\r\n                            key={`${singleClass}${fromNum + i}`}\r\n                            thisClass={singleClass}\r\n                            id={fromNum + i}\r\n                            padIndex={padIndex}\r\n                            setPadIndex={setPadIndex}\r\n                            boxTiming={sequencerBeat}\r\n                            rythemObj={rythemObj[`${fromNum + i}`]}\r\n                            setCurrentColor={setCurrentColor}\r\n                            padsStatus={rythemObj.padsStatus[fromNum + i - 1]}\r\n                            setMyPadsStatus={setMyPadsStatus}\r\n\r\n                            ctx={ctx}\r\n                            gain={biquadFilter}\r\n                            so={sounds[fromNum + i - 1]}\r\n                        />\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n        return temp\r\n    }\r\n    const start = () => {\r\n        if (enabled) {\r\n            setBeat(0)\r\n            setSequencerBeat(0)\r\n        }\r\n        setEnabled(!enabled)\r\n    }\r\n    const stop = () => {\r\n        setRestart(!restart)\r\n        start()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <h1 style={{ color: 'white' }}>Loading Spinner</h1>}\r\n            {!isLoading && <>\r\n                <ReactInterval timeout={60000 / realBpm / 4} enabled={enabled}\r\n                    callback={() => {\r\n                        setBeat((beat + 1))\r\n                        setSequencerBeat(sequencerBeat < 32 ? sequencerBeat + 1 : 1)\r\n                    }}\r\n                />\r\n                {sounds && ctx &&\r\n                    <div className='play-mode-container'>\r\n                        <div className='play-mode-sequencer-container'>\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 1)}\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 9)}\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 17)}\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 25)}\r\n                    BPM {bpm}\r\n                            <HorizontalRange\r\n                                value={bpm}\r\n                                setValue={(e) => { setBpm(e.target.value) }}\r\n                                max={'220'}\r\n                                min={'60'} />\r\n                            <HorizontalRange\r\n                                value={gain * 100} setValue={(e) => {\r\n                                    setGain(e.target.value / 100)\r\n                                }}\r\n                                max={'100'}\r\n                                min={'0'}\r\n                            />\r\n                                Gain {gain}\r\n                            <HorizontalRange\r\n                                value={frequency} setValue={(e) => {\r\n                                    setFrequency(e.target.value)\r\n                                }}\r\n                                max={'4000'}\r\n                                min={'0'}\r\n                            />\r\n                            frequency {frequency}\r\n                            <br />\r\n                            {sequencerBeat}\r\n                        </div>\r\n                        <div className='play-mode-pads-container'>\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 1)}\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 7)}\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 13)}\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 19)}\r\n                            {beat}\r\n                            <div style={{ display: 'flex', background: 'none' }}>\r\n                                <HorizontalRange\r\n                                    value={sounds[padIndex - 1].gain * 100} setValue={(e) => {\r\n                                        setGainInSoundsObject(e, 'gain')\r\n                                        // setGain(e.target.value / 100)\r\n                                    }}\r\n                                    max={'100'}\r\n                                    min={'0'}\r\n                                />\r\n                                <HorizontalRange\r\n                                    value={sounds[padIndex - 1].frequency} setValue={(e) => {\r\n                                        setGainInSoundsObject(e, 'frequency')\r\n                                    }}\r\n                                    max={'2000'}\r\n                                    min={'0'}\r\n                                />\r\n                                <HorizontalRange\r\n                                    value={sounds[padIndex - 1].detune} setValue={(e) => {\r\n                                        setGainInSoundsObject(e, 'detune')\r\n                                    }}\r\n                                    max={'4000'}\r\n                                    min={'-4000'}\r\n                                />\r\n                                <div >\r\n                                    <select\r\n\r\n                                        value={sounds[padIndex - 1].type}\r\n                                        onChange={(e) => {\r\n                                            setGainInSoundsObject(e, 'type')\r\n                                        }}>\r\n                                        <option value='allpass'>Allpass</option>\r\n                                        <option value='lowpass'>Lowpass</option>\r\n                                        <option value='highpass'>Highpass</option>\r\n                                        <option value='bandpass'>Bandpass</option>\r\n                                        <option value='lowshelf'>Lowshelf</option>\r\n                                        <option value='highshelf'>Highshelf</option>\r\n                                        <option value='peaking'>Peaking</option>\r\n                                        <option value='notch'>Notch</option>\r\n                                    </select>\r\n\r\n                                    <button\r\n                                        onClick={() => start()}>Start</button>\r\n                                    <button onClick={() => stop()}>Clear</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >}\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayModePage;","import PlayModePage from './PlayModePage'\r\nimport { useState, useEffect } from 'react'\r\n// import Sounds2 from '../../components/‏‏sounds/Sounds'\r\n\r\nimport axios from 'axios'\r\nimport Api from '../../api/Api'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst App = ({ consoleIsOpen, setConsoleIsOpen, currentCollection }) => {\r\n    const [isOn, setIsOn] = useState(consoleIsOpen)\r\n    const [ctx, setCtx] = useState(null)\r\n    const [gainNode, setGainNode] = useState(null)\r\n    const [biquadFilter, setBiquadFilter] = useState(null)\r\n    const [sounds, setSounds] = useState(null)\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentCollection) {\r\n\r\n            if (isOn)\r\n                setCtx(new AudioContext())\r\n\r\n            const tempEffectsArr = new Array(24).fill({\r\n                frequency: 350,\r\n                detune: 0,\r\n                type: 'notch',\r\n                gain: 0.75\r\n            })\r\n            //fetch sounds \r\n            const fetchSounds = async () => {\r\n                const arrRes = await Api.get(`/sound-collection/${currentCollection}`)\r\n                const arrData = arrRes.data[0].sounds\r\n                // const collectionData = {\r\n                //     collectionName: arrRes.data[0].name,\r\n                //     collectionId: arrRes.data[0]._id\r\n                // }\r\n                const arrDataLinks = arrData.map(async (e) => {\r\n                    return await Api.get(`/sounds/${e.id}`)\r\n                })\r\n                let arrDataSounds = null;\r\n                await axios.all(arrDataLinks)\r\n                    .then(axios.spread((...responses) => {\r\n                        let tempArr = [];\r\n                        for (let i = 0; i < 24; i++) {\r\n                            tempArr.push({\r\n                                myAudio: responses[i].data[0].audio,\r\n                                color: arrData[i].color,\r\n                                ...tempEffectsArr[i]\r\n                            })\r\n                        }\r\n                        arrDataSounds = tempArr\r\n                    })).catch(errors => {\r\n                    })\r\n                //------------------------\r\n                // console.log(arrDataSounds)\r\n                console.log(arrRes)\r\n                // return arrDataSounds\r\n                setSounds(arrDataSounds)\r\n            }\r\n\r\n            fetchSounds()\r\n\r\n        } else {\r\n            setConsoleIsOpen(false)\r\n        }\r\n        // console.log(Sounds2())\r\n        // setSounds(fetchSounds())\r\n        // setSounds(Sounds2())\r\n    }, [isOn, currentCollection, setConsoleIsOpen])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (ctx && !gainNode) {\r\n            setGainNode(ctx.createGain())\r\n            setBiquadFilter(ctx.createBiquadFilter())\r\n        }\r\n    }, [ctx, gainNode])\r\n\r\n    useEffect(() => {\r\n        if (gainNode) {\r\n            gainNode.connect(ctx.destination)\r\n            // setRecord(new Recorder(gainNode))\r\n        }\r\n        if (biquadFilter) {\r\n            biquadFilter.connect(gainNode)\r\n        }\r\n    }, [gainNode, ctx, biquadFilter,])\r\n\r\n    return (\r\n        <>\r\n            {!currentCollection && <Redirect to='/'></Redirect >}\r\n            {/* {console.log(isLoading)} */}\r\n            {/* {isLoading && <h1 style={{ color: 'white' }}>fasfsdfsddf</h1>} */}\r\n            {currentCollection &&\r\n                <>\r\n                    <button\r\n                        onClick={() => {\r\n                            if (!isOn) {\r\n                                setIsOn(true)\r\n                            } else {\r\n                                setCtx(null)\r\n                                setIsOn(false)\r\n                                setGainNode(null)\r\n                                setBiquadFilter(null)\r\n                                setSounds(null)\r\n                            }\r\n                        }\r\n                        }\r\n                    >get ctx</button>\r\n                    <PlayModePage\r\n                        ctx={ctx}\r\n                        sounds={sounds}\r\n                        setSounds={setSounds}\r\n                        gainNode={gainNode}\r\n                        biquadFilter={biquadFilter}\r\n                    />\r\n                </>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from '../pages/home/Home'\nimport Navbar from '../components/navbar/Navbar'\nimport OpeningPage from '../pages/openingPage/OpeningPage'\nimport Create from '../pages/create/Create'\nimport StarterPlayModePage from '../pages/‏‏playModePage/StarterPlayModePage'\n\n\nconst App = () => {\n  const [consoleIsOpen, setConsoleIsOpen] = useState(false)\n\n  const [currentCollection, setCurrentCollection] = useState(null)\n\n  const [isLoged, setIsLoged] = useState(false)\n  const [userName, setUserName] = useState(null)\n  useEffect(() => {\n    if (localStorage.token) {\n      setIsLoged(true)\n      setUserName(localStorage.getItem('name'))\n    }\n  }, [isLoged])\n\n  return (\n    <>\n      {console.log(consoleIsOpen)}\n      {!isLoged && <OpeningPage setIsLoged={setIsLoged} />}\n      <BrowserRouter>\n        {isLoged && <>\n          {!consoleIsOpen && <Navbar userName={userName} />}\n          <Route path=\"/\" exact\n            component={() =>\n              <Home\n                setConsoleIsOpen={setConsoleIsOpen}\n                consoleIsOpen={consoleIsOpen}\n                setCurrentCollection={setCurrentCollection}\n              />\n            }\n          >\n          </Route>\n          < Route path=\"/home\" exact component={() =>\n            <Home\n              setConsoleIsOpen={setConsoleIsOpen}\n              consoleIsOpen={consoleIsOpen}\n              setCurrentCollection={setCurrentCollection}\n            />\n          }\n          />\n          < Route path=\"/create\" exact component={() =>\n            <Create />\n          }\n          />\n          < Route path=\"/console\" exact component={() =>\n            <StarterPlayModePage\n              consoleIsOpen={consoleIsOpen}\n              setConsoleIsOpen={setConsoleIsOpen}\n              currentCollection={currentCollection}\n            />\n          }\n          />\n        </>}\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}