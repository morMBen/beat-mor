{"version":3,"sources":["api/Api.js","img/openBackgound.jpg","pages/home/Home.js","components/navbar/Navbar.js","components/input/Input.js","components/login/Login.js","components/sign/sign.js","pages/openingPage/OpeningPage.js","components/addSound/AddSound.js","components/selector/Selector.js","components/searchSound/SearchSound.js","pages/create/Create.js","components/horizontalRange/HorizontalRange.js","components/beatBox/BeatBox.js","components/‏‏padBox/padBox.js","components/spinner/Spinner.js","pages/‏‏playModePage/PlayModePage.js","components/choosePattern/ChoosePattern.js","pages/‏‏playModePage/StarterPlayModePage.js","components/App.js","reportWebVitals.js","index.js"],"names":["url","api","axios","create","baseURL","Home","setConsoleIsOpen","setCurrentCollection","consoleIsOpen","useState","collectionsNames","setCollectionsNames","useEffect","a","Api","get","res","data","getCollectionsName","style","paddingTop","className","map","e","i","onClick","_id","to","src","testImg","alt","ownerName","name","Navbar","openCloseLogMenu","userlog","userDetails","isNavOpen","setIsNavOpen","fontSize","maxHeight","Input","type","onChange","value","Login","setLoginCard","setIsLoged","password","setPassword","email","setEmail","showMessage","setShowMessage","handleSubmission","post","toString","localStorage","setItem","user","userName","token","setTimeout","target","split","display","justifyContent","Sign","passwordConfirm","setPasswordConfirm","setUserName","message","setMessage","length","clear","console","log","getItem","OpeningPage","logOrSingCard","setLogOrSingCard","singCard","setSingCard","loginCard","AddSound","setAddSoundIsOpen","setSelectedSound","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","fileName","setFileName","tagsValue","setTagsValue","userMessage","setUserMessage","buttonText","setButtonText","result","join","file","audio","tags","headers","id","htmlFor","size","accept","event","reader","FileReader","files","readAsDataURL","match","Audio","play","Selector","options","setValue","SearchSound","setSearchSoundIsOpen","setSelected","isLoading","setIsLoading","isLoadingOnPage","setIsLoadingOnPage","tagsOptions","setTagsOptions","selectorVal","setSelectorVal","soundsList","setSoundsList","inputVal","setInputVal","selectedSound","selectedSoundAudio","setSelectedSoundAudio","selectedSoundAudioDetails","setSelectedSoundAudioDetails","tempRes","sort","tagsRes","handelSerchByTag","tempSounds","handelSerchByFreetext","handelSoundSelect","res2","playAudio","el","marginLeft","color","Create","addSoundIsOpen","searchSoundIsOpen","fileIsSelected","setFileIsSelected","fileSelectedName","setFileSelectedName","Array","fill","arr","setArr","collectionName","setCollectionName","padHandler","index","replace","tempArr","test","insertPads","formIndex","tempMap","filter","saveCollection","history","tempArr2","sounds","save","push","width","padding","render","HorizontalRange","max","min","background","BeatBox","boxTiming","thisClass","padIndex","currentColor","rythemArr","setMyRythemArr","boxIsPressed","setBoxIsPressed","onMouseDown","PadBox","setPadIndex","so","rythemObj","setCurrentColor","padsStatus","setMyPadsStatus","ctx","gain","offSet1","setOffSet1","getFile","filePath","arrayBuffer","decode","decodeAudioData","audioBuffer","clip","outPut","state","resume","clipAudioBuffer","createGain","myGain","connect","createBiquadFilter","biquadFilter","frequency","detune","clipSource","createBufferSource","buffer","start","currentTime","playClip","myAudio","find","Spinner","alignItems","height","class","PlayModePage","setSounds","gainNode","currentCollection","patternArr","bpm","setBpm","realBpm","setRealBpm","enabled","setEnabled","beat","setBeat","sequencerBeat","setSequencerBeat","restart","setRestart","setRythemObj","saveIsOpen","setSaveIsOpen","patternName","setPatternName","setGain","setFrequency","setGainInSoundsObject","temp","sequencer","setMyRythemObj","tempObj","pad","bool","insertDivs","rowLength","girdClass","singleClass","fromNum","pattern","gacurrentCollectionin","collectionId","patch","timeout","callback","Math","round","margin","transition","borderRadius","ChoosePattern","setChoosePatternIsOpen","tempCurrentCollection","setIsOn","patternOps","setPatternOps","current","setCurrent","patterns","App","setcurrentCollection","isOn","setCtx","setGainNode","setBiquadFilter","savedObj","setSavedObj","patternIsOpen","setPatternIsOpen","setPattern","setPatternArr","tempEffectsArr","AudioContext","Number","arrRes","arrData","arrDataLinks","arrDataSounds","all","then","spread","responses","catch","errors","fetchSounds","destination","position","border","bottom","left","cursor","isLoged","path","exact","component","StarterPlayModePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58eb829a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet url;\r\nif (process.env.NODE_ENV === 'development') {\r\n    url = 'http://localhost:5000/api'\r\n}\r\nif (process.env.NODE_ENV === 'production') {\r\n    url = 'api'\r\n}\r\nconst api = axios.create({\r\n    baseURL: url,\r\n})\r\n\r\nexport default api;\r\n","export default __webpack_public_path__ + \"static/media/openBackgound.68c73abe.jpg\";","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Api from '../../api/Api'\r\nimport './home.css'\r\nimport testImg from '../../img/openBackgound.jpg'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import OpeningPage from '../openingPage/OpeningPage';\r\nconst Home = ({ setConsoleIsOpen, setCurrentCollection, consoleIsOpen }) => {\r\n    const [collectionsNames, setCollectionsNames] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getCollectionsName = async () => {\r\n            const res = await Api.get('/sound-collection')\r\n            setCollectionsNames(res.data)\r\n        }\r\n        getCollectionsName()\r\n        if (consoleIsOpen) {\r\n            setConsoleIsOpen(false)\r\n        }\r\n    }, [consoleIsOpen, setConsoleIsOpen])\r\n\r\n    const openConsole = () => {\r\n        setConsoleIsOpen(true)\r\n    }\r\n\r\n    // const choosePattern = async (id) => {\r\n    //     const tempRes = await Api.get(`/patterns/all/${id}`)\r\n    //     console.log(tempRes)\r\n    // }\r\n\r\n\r\n    const insetCollectionsNames = () => {\r\n        return collectionsNames.map((e, i) => {\r\n            return <section className='home-section' key={`collection${i}`}\r\n                onClick={() => {\r\n                    setCurrentCollection(e._id)\r\n                    // choosePattern(e.id)\r\n\r\n                    openConsole()\r\n                }}\r\n            >\r\n                <Link\r\n                    to={'/console'}\r\n                >\r\n                    <figure className='home-figure-img'>\r\n                        <img src={testImg} alt='fasd' />\r\n                    </figure>\r\n                    <figure className='home-figure-text'>\r\n                        <article className='home-article'>\r\n                            <span >{e.ownerName}</span>\r\n                            <h3 className='home-h3'>{e.name}</h3>\r\n                        </article>\r\n                    </figure>\r\n                </Link>\r\n            </section >\r\n        })\r\n    }\r\n    return (\r\n        <div style={{ paddingTop: '5rem' }}>\r\n            <div className='home-main'>\r\n                {collectionsNames && insetCollectionsNames()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css';\r\n\r\n\r\nconst Navbar = ({ openCloseLogMenu, userlog, userDetails }) => {\r\n    const [isNavOpen, setIsNavOpen] = useState(false);\r\n\r\n\r\n    const menuOpen = () => {\r\n        if (isNavOpen) {\r\n            return '300px'\r\n        } else {\r\n            return '0'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-nav\" style={{ fontSize: '17px' }}>\r\n                <Link to='/' className=\"menu-logo\">\r\n                    A Beat Mor\r\n            </Link>\r\n                <div className=\"hamburger\" onClick={() => { setIsNavOpen(!isNavOpen) }}>\r\n                    {/* nav here */}\r\n                dads\r\n            </div>\r\n                <div className=\"nav-menu\" style={{ maxHeight: menuOpen() }}>\r\n                    <Link to='/search' className=\"menu-link\">Search</Link>\r\n                    <Link to='/create' className=\"menu-link\">Create</Link>\r\n                    <Link to={`/`} className=\"menu-link\">Home</Link>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","const Input = ({ type, onChange, value, className }) => {\r\n    return (\r\n        <input\r\n            className={className} onChange={onChange} value={value}></input>\r\n    )\r\n}\r\n\r\nexport default Input;","import { useState } from 'react';\r\nimport Input from '../input/Input'\r\nimport Api from '../../api/Api'\r\nimport './login.css'\r\n\r\nconst Login = ({ setLoginCard, setIsLoged }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n\r\n    const handleSubmission = async () => {\r\n        try {\r\n            // console.log(password.toString())\r\n            const res = await Api.post('/users/login', {\r\n                password: password.toString(),\r\n                email\r\n            })\r\n            localStorage.setItem('name', res.data.user.userName)\r\n            localStorage.setItem('token', res.data.token)\r\n            localStorage.setItem('id', res.data.user._id)\r\n            setLoginCard(false)\r\n            setIsLoged(true)\r\n            // console.log(localStorage.getItem('name'))\r\n            // console.log(localStorage.getItem('token'))\r\n        } catch (e) {\r\n            setShowMessage(true)\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='log-in-top'>\r\n            <div className='log-in-container'>\r\n                <h2\r\n                    className='log-in-container-h2'\r\n                >Welcome Back</h2>\r\n                <br></br>\r\n                <h3\r\n                    className='log-in-container-h3'\r\n                >Email</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'log-in-input'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <br></br>\r\n                <h3\r\n                    className='log-in-container-h3'\r\n                >Password</h3>\r\n                <Input\r\n                    className={'log-in-input'}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value.split(' '))}\r\n                />\r\n                <br></br>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <button\r\n                        className='log-in-container-button'\r\n                        type='button' onClick={handleSubmission}\r\n                    >Submit</button>\r\n                    <br></br>\r\n                    <button\r\n                        className='log-in-container-button'\r\n                        type='button' onClick={() => {\r\n                            setPassword('')\r\n                            setEmail('')\r\n                            setLoginCard(false)\r\n                        }}\r\n                    >Cancel</button>\r\n                    {/* <button\r\n                    type='button' onClick={async () => {\r\n                        const test = await Api.get('users/me', {\r\n                            headers: {\r\n                                \"Authorization\": localStorage.getItem('token')\r\n                            }\r\n                        })\r\n                        console.log(test)\r\n                    }}\r\n                >Get me test</button> */}\r\n                </div>\r\n                <br />\r\n                {!showMessage && < br />}\r\n                {showMessage && <h4>Wrong input please try again</h4>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Login;","import { useState } from 'react';\r\nimport Input from '../input/Input'\r\nimport Api from '../../api/Api'\r\nimport './sign.css'\r\n\r\nconst Sign = ({ setLoginCard, setIsLoged }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const handleSubmission = async () => {\r\n        if (passwordConfirm !== password) {\r\n            setShowMessage(true)\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n                setMessage('Your password conformation is in currect')\r\n            }, 2000)\r\n        } else if (password.length < 8) {\r\n            setShowMessage(true)\r\n            setTimeout(() => {\r\n                setShowMessage(false)\r\n                setMessage('Your password must be at least 8 digits')\r\n            }, 2000)\r\n        } else {\r\n            try {\r\n                const res = await Api.post('/users/', {\r\n                    password: password.toString(),\r\n                    email,\r\n                    userName\r\n                })\r\n                localStorage.clear()\r\n                localStorage.setItem('name', res.data.user.userName)\r\n                localStorage.setItem('token', res.data.token)\r\n                setLoginCard(false)\r\n                setIsLoged(true)\r\n                console.log(localStorage.getItem('name'))\r\n                console.log(localStorage.getItem('token'))\r\n            } catch (e) {\r\n                setShowMessage(true)\r\n                setTimeout(() => {\r\n                    setShowMessage(false)\r\n                    setMessage('Error in email Check the spelling and make sure you are not already registered')\r\n                }, 2000)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='signin-top'>\r\n            <div className='signin-container'>\r\n                <h2\r\n                    className='signin-container-h2'\r\n                >Ready to get started</h2>\r\n                <h3\r\n                    className='signin-container-h3'\r\n                >Write your user name</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'signin-input'}\r\n                    value={userName}\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='signin-container-h3'\r\n                // className='signin-container-h3'\r\n                >Enter your Email</h3>\r\n                {/* <p>A space must be left between each tag</p> */}\r\n                <Input\r\n                    className={'signin-input'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='signin-container-h3'\r\n                >Choose password</h3>\r\n                <Input\r\n                    className={'signin-input'}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <h3\r\n                    className='signin-container-h3'\r\n                >Confirm your password</h3>\r\n                <Input\r\n                    className={'signin-input'}\r\n                    value={passwordConfirm}\r\n                    onChange={(e) => setPasswordConfirm(e.target.value)}\r\n\r\n                />\r\n                <br></br>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <button\r\n                        className='signin-container-button'\r\n                        type='button' onClick={handleSubmission}\r\n                    >Submit</button>\r\n                    <button\r\n                        className='signin-container-button'\r\n                        type='button' onClick={() => {\r\n                            setPassword('')\r\n                            setEmail('')\r\n                            setLoginCard(false)\r\n                        }}\r\n                    >Cancel</button>\r\n                </div>\r\n                <br />\r\n                {!showMessage && < br />}\r\n                {showMessage && <h4>{message}</h4>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Sign;","// import img from '../../img/openBackgound.jpg'\r\nimport { useState } from 'react';\r\nimport './openingPage.css';\r\nimport Login from '../../components/login/Login';\r\nimport Sign from '../../components/sign/sign';\r\n\r\nconst OpeningPage = ({ setIsLoged }) => {\r\n    const [logOrSingCard, setLogOrSingCard] = useState(false)\r\n    const [singCard, setSingCard] = useState(false)\r\n    const [loginCard, setLoginCard] = useState(false)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='opening-page-container'>\r\n                <h1\r\n                    className='opening-page-container-h1'\r\n                >A Beat Mor</h1>\r\n                <h2\r\n                    className='opening-page-container-h2'\r\n                >Tomorrow's sound starts today</h2>\r\n                <h3\r\n                    className='opening-page-container-h3'\r\n                >\r\n                    Is your head full of sounds? You have an idea for the beat of the next hit?</h3>\r\n                <h2\r\n                    className='opening-page-container-h2'\r\n                >Come and share...</h2>\r\n                <h3\r\n                    className='opening-page-container-h3'\r\n                >Upload your own unique sounds or use existing sounds Create the rhythm Add audio effects.\r\nSave and share and let the world experience your touch.</h3>\r\n                <br />\r\n                <div style={{ display: 'flex', justifyContent: !logOrSingCard ? 'center' : 'space-around ' }}>\r\n                    {!logOrSingCard && <button\r\n                        className='opening-page-container-button'\r\n                        onClick={() => {\r\n\r\n                            setLogOrSingCard(true)\r\n                        }\r\n                        }>Get started</button>}\r\n                    {logOrSingCard &&\r\n                        <>\r\n                            <button\r\n                                className='opening-page-container-button'\r\n                                onClick={() => setLoginCard(true)}>Log in</button>\r\n                            <button\r\n                                className='opening-page-container-button'\r\n                                onClick={() => setSingCard(true)}>Sing</button>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            { loginCard && <Login\r\n                setLoginCard={setLoginCard}\r\n                setIsLoged={setIsLoged}\r\n            />}\r\n\r\n            { singCard && <Sign\r\n                setLoginCard={setSingCard}\r\n                setIsLoged={setIsLoged}\r\n            />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpeningPage;","import { useState } from 'react'\r\nimport Api from '../../api/Api'\r\nimport Input from '../input/Input'\r\n// import Selector from '../selector/Selector'\r\nimport './addSound.css'\r\nconst AddSound = ({ setAddSoundIsOpen, setSelectedSound }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n    const [fileName, setFileName] = useState('');\r\n    const [tagsValue, setTagsValue] = useState(null);\r\n    // const selectorOptions = ['red', 'blue', 'green', 'yellow', 'ligth-blue', 'purpule']\r\n    // const [selectValue, setSelectVal] = useState(selectorOptions[0]);\r\n\r\n    const [userMessage, setUserMessage] = useState(null);\r\n    const [buttonText, setButtonText] = useState('Submit');\r\n\r\n\r\n    const getFileFromUser = (event) => {\r\n        let reader = new FileReader();\r\n        if (event.target.files[0]) {\r\n            reader.readAsDataURL(event.target.files[0])\r\n            setSelectedFile(reader);\r\n            setIsFilePicked(true);\r\n\r\n            if (event.target.files[0].name.match(/\\.wav$/)) {\r\n                setFileName(event.target.files[0].name.split('.wav')[0])\r\n            }\r\n            if (event.target.files[0].name.match(/\\.mp3$/)) {\r\n                setFileName(event.target.files[0].name.split('.mp3')[0])\r\n            }\r\n\r\n            setButtonText('Submit')\r\n        } else {\r\n            setIsFilePicked(false);\r\n        }\r\n    }\r\n    const handleSubmission = async () => {\r\n        if (!tagsValue) {\r\n            setUserMessage('File must have at least one tag')\r\n            setButtonText('Try Again')\r\n        } else {\r\n            if (isFilePicked) {\r\n                const token = localStorage.getItem('token')\r\n                // console.log(token)\r\n                const file = await selectedFile.result.split('data:audio/wav;base64,').join('')\r\n                try {\r\n                    const data = await Api.post('sounds', {\r\n                        name: fileName,\r\n                        audio: file,\r\n                        tags: tagsValue\r\n                    }, {\r\n                        headers: {\r\n                            \"Authorization\": `Bearer ${token}`\r\n                        }\r\n                    })\r\n\r\n                    setUserMessage('Succeeded')\r\n                    // setTimeout(() => {\r\n                    setUserMessage('')\r\n                    // }, 2000);\r\n                    setSelectedFile(null)\r\n                    setIsFilePicked(null)\r\n                    setFileName('')\r\n                    setTagsValue(null)\r\n                    console.log(data.data.name)\r\n                    setSelectedSound({\r\n                        name: data.data.name,\r\n                        id: data.data._id,\r\n                        audio: data.data.audio\r\n                    })\r\n                    setAddSoundIsOpen(false)\r\n                } catch (e) {\r\n                    setUserMessage('File name must be unique!')\r\n                    setButtonText('Try Again')\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='add-sound-top'>\r\n                <div className='add-sound-container'>\r\n                    <div className='add-sound-exit'\r\n                        onClick={() => setAddSoundIsOpen(false)}\r\n                    >\r\n                        X\r\n                    </div>\r\n                    <h2\r\n                        className='add-sound-container-h2'\r\n                    >Upload new sound</h2>\r\n                    <br className='add-sound-br'></br>\r\n                    <h3\r\n                        className='add-sound-container-h3'\r\n                    >Insert sound name</h3>\r\n                    <p\r\n                        className='add-sound-container-p'\r\n                    >Must be unique (auto fill when upload file)</p>\r\n                    <Input\r\n                        className={'add-sound-input'}\r\n                        value={fileName}\r\n                        onChange={(e) => setFileName(e.target.value)}\r\n                    />\r\n                    <br className='add-sound-br'></br>\r\n                    <h3\r\n                        className='add-sound-container-h3'\r\n                    >Insert sound tags</h3>\r\n                    <p\r\n                        className='add-sound-container-p'\r\n                    >A space must be left between each tag</p>\r\n                    <Input\r\n                        className={'add-sound-input'}\r\n                        value={tagsValue ? tagsValue.join(' ') : ''}\r\n                        onChange={(e) => setTagsValue(e.target.value.split(' '))}\r\n                    />\r\n                    <br className='add-sound-br'></br>\r\n                    {/* <div className='selector' >\r\n                    <div>\r\n                        <h3>Select color</h3>\r\n                        <p>That will be the button color</p>\r\n                    </div>\r\n                    <Selector\r\n                        className={'add-sound-input'}\r\n                        options={selectorOptions}\r\n                        value={selectValue}\r\n                        setValue={setSelectVal}\r\n                    />\r\n                </div>\r\n                <br></br> */}\r\n                    <label htmlFor=\"upload-sound\">Upload file</label>\r\n                    <div\r\n                        className='add-sound-button-div'>\r\n                        <input\r\n                            id='upload-sound'\r\n                            size=\"80\"\r\n                            type='file'\r\n                            accept='audio/mp3, audio/wav '\r\n                            onChange={getFileFromUser}\r\n                        />\r\n                        <div>\r\n                            {isFilePicked && <button\r\n                                className='add-sound-button'\r\n                                onClick={() => {\r\n                                    const newAudioTest = new Audio(`${selectedFile.result}`)\r\n                                    newAudioTest.play()\r\n                                }}\r\n                            >Test</button>}\r\n                            <button\r\n                                className='add-sound-button'\r\n                                type='button' onClick={handleSubmission}\r\n                            >{buttonText}</button>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        {!userMessage && <br />}\r\n                        <p\r\n                            className='add-sound-container-p'\r\n                        >{userMessage}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AddSound;","const Selector = ({ value, options, setValue, className }) => {\r\n    const setOptions = () => {\r\n        return options.map(e => {\r\n            return <option key={e} id={e}>{e}</option>\r\n        })\r\n    }\r\n    return (\r\n        <select\r\n            className={className}\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n        >\r\n            {options && setOptions()}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Selector;","import './searchSound.css'\r\nimport Selector from '../selector/Selector'\r\nimport { useEffect, useState } from 'react'\r\nimport Api from '../../api/Api'\r\nimport Input from '../input/Input'\r\n\r\n\r\nconst SearchSound = ({ setSearchSoundIsOpen, setSelected }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isLoadingOnPage, setIsLoadingOnPage] = useState(false);\r\n\r\n    const [tagsOptions, setTagsOptions] = useState(null)\r\n    const [selectorVal, setSelectorVal] = useState(null)\r\n    // const [userMessage, setUserMessage] = useState('')\r\n\r\n    const [soundsList, setSoundsList] = useState([])\r\n    const [inputVal, setInputVal] = useState('')\r\n\r\n    const [selectedSound, setSelectedSound] = useState(null)\r\n    const [selectedSoundAudio, setSelectedSoundAudio] = useState(null)\r\n    const [selectedSoundAudioDetails, setSelectedSoundAudioDetails] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const tagsRes = async () => {\r\n            try {\r\n                const tempRes = await Api.get('/sounds/tags')\r\n                setTagsOptions(await tempRes.data.sort())\r\n                // console.log(tempRes)\r\n                setSelectorVal(await tempRes.data[0])\r\n                setIsLoading(false)\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n\r\n        }\r\n        tagsRes()\r\n    }, [])\r\n\r\n\r\n    const handelSerchByTag = async () => {\r\n        setIsLoadingOnPage(true)\r\n        const tempSounds = await Api.get(`/sounds/tags/${selectorVal}`)\r\n        // console.log(tempSounds.data)\r\n        setSoundsList(tempSounds.data)\r\n        setIsLoadingOnPage(false)\r\n    }\r\n    const handelSerchByFreetext = async () => {\r\n        if (inputVal.length > 0) {\r\n            setIsLoadingOnPage(true)\r\n            const tempSounds = await Api.get(`/sounds/search/${inputVal}`)\r\n            // console.log(tempSounds)\r\n            // console.log(tempSounds.data)\r\n            setSoundsList(tempSounds.data)\r\n            setIsLoadingOnPage(false)\r\n        }\r\n    }\r\n    const handelSoundSelect = async (e) => {\r\n        if (selectedSound === e.target.id) {\r\n            setSelectedSound(null)\r\n        } else {\r\n            setIsLoadingOnPage(true)\r\n            setSelectedSound(e.target.id)\r\n            const res = await Api.get(`/sounds/${e.target.id}`)\r\n            const res2 = await res.data[0].audio\r\n            setSelectedSoundAudioDetails(await res.data[0])\r\n            setSelectedSoundAudio(new Audio(`data:audio/wav;base64,${res2}`))\r\n            setIsLoadingOnPage(false)\r\n        }\r\n    }\r\n    const playAudio = async () => {\r\n        setIsLoadingOnPage(true)\r\n        selectedSoundAudio.play()\r\n        // setSelectedSoundAudio(res2)\r\n        // const tempAudio = new Audio(res2)\r\n        // tempAudio.play()\r\n        setIsLoadingOnPage(false)\r\n    }\r\n\r\n    const setList = () => {\r\n        return soundsList.map((e, i) => {\r\n            return (\r\n                <div\r\n                    className='search-sound-result-container'\r\n                    key={`soundList-${i}`}\r\n                >\r\n                    <div\r\n                        onClick={(e) => handelSoundSelect(e)}\r\n                        id={e._id}\r\n\r\n                        className={`search-sound-file-sound ${selectedSound === e._id ? 'search-sound-file-sound-selected' : ''}`}\r\n                    >{e.name}\r\n                        <div style={{ display: 'flex' }}\r\n                            id={e._id}\r\n                        >\r\n                            <span>tags: </span>\r\n                            {e.tags.map((el, i) => {\r\n                                return <span\r\n                                    id={e._id}\r\n                                    style={{ marginLeft: '0.6rem' }}\r\n                                    key={`soundlist-tag-${i}`}>{el}</span>\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    {selectedSound === e._id &&\r\n                        <button\r\n                            className='search-sound-button'\r\n                            style={{ color: 'var(--led-red)' }}\r\n                            onClick={() => playAudio()}\r\n                        >Test</button>}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>{isLoadingOnPage && <div className='search-sound-loading-on-page'></div>}\r\n            <div className='search-sound-top'>\r\n                <div className=\"search-sound-container\">\r\n                    {!isLoading && <>\r\n                        <div className='add-sound-exit'\r\n                            onClick={() => setSearchSoundIsOpen(false)}\r\n                        >X</div>\r\n                        <h2 className=\"search-sound-container-h2\">Search sound</h2>\r\n                        <div className='search-sound-button-div'>\r\n                            <h3 className=\"search-sound-container-h3\">Search by tag name:</h3>\r\n                            <Selector\r\n                                value={selectorVal}\r\n                                options={tagsOptions}\r\n                                setValue={setSelectorVal}\r\n                                className={'search-sound-selector'}\r\n                            />\r\n                            <button\r\n                                className='search-sound-button'\r\n                                onClick={() => handelSerchByTag()}\r\n                            >Search</button>\r\n                        </div>\r\n                        <div className='search-sound-button-div'>\r\n                            <h3 className=\"search-sound-container-h3\">Search by sound name:</h3>\r\n                            <Input\r\n                                className={'search-sound-input'}\r\n                                value={inputVal}\r\n                                onChange={(e) => setInputVal(e.target.value)}\r\n                            />\r\n                            <button\r\n                                className='search-sound-button'\r\n                                onClick={() => handelSerchByFreetext()}\r\n                            >Search</button>\r\n                        </div>\r\n                        <div className='search-sound-results'>\r\n                            {soundsList.length > 0 && setList()}\r\n                        </div>\r\n                        <button\r\n                            className='search-sound-button'\r\n                            onClick={() => {\r\n                                setSearchSoundIsOpen(false)\r\n                                setSelected(\r\n                                    {\r\n                                        name: selectedSoundAudioDetails.name,\r\n                                        id: selectedSoundAudioDetails._id,\r\n                                        audio: selectedSoundAudioDetails.audio\r\n\r\n                                    })\r\n                            }\r\n                            }\r\n                        >\r\n                            Submit\r\n                    </button>\r\n                    </>}\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchSound;","\r\nimport './create.css'\r\nimport AddSound from '../../components/addSound/AddSound'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Selector from '../../components/selector/Selector'\r\nimport Api from '../../api/Api'\r\nimport SearchSound from '../../components/searchSound/SearchSound'\r\nimport Input from '../../components/input/Input'\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n    const [addSoundIsOpen, setAddSoundIsOpen] = useState(false)\r\n    const [searchSoundIsOpen, setSearchSoundIsOpen] = useState(false)\r\n\r\n    const [fileIsSelected, setFileIsSelected] = useState(false)\r\n    const [selectedSound, setSelectedSound] = useState(null)\r\n    const [fileSelectedName, setFileSelectedName] = useState('')\r\n\r\n    const [arr, setArr] = useState(new Array(32).fill({ color: '' }))\r\n\r\n    const [selectorVal, setSelectorVal] = useState('purpule')\r\n    const selectorOps = ['ligth-blue', 'purpule', 'red', 'yellow', 'blue', 'green',];\r\n    const [collectionName, setCollectionName] = useState('')\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedSound) {\r\n            setFileSelectedName(selectedSound.name)\r\n        }\r\n    }, [selectedSound])\r\n\r\n\r\n    const padHandler = (e) => {\r\n        const index = e.target.id.replace('pad-num-', '')\r\n        if (fileIsSelected && selectedSound) {\r\n            const tempArr = arr;\r\n            tempArr[index] = {\r\n                ...tempArr[index],\r\n                id: selectedSound.id,\r\n                audio: selectedSound.audio,\r\n                name: selectedSound.name,\r\n                color: selectorVal\r\n            }\r\n            setFileIsSelected(false)\r\n            setArr(tempArr)\r\n        } else {\r\n            if (arr[index].id) {\r\n                const test = async () => {\r\n                    const audio = new Audio(`data:audio/mp3;base64,${arr[index].audio}`)\r\n                    await audio.play()\r\n                }\r\n                test()\r\n            }\r\n        }\r\n    }\r\n\r\n    const insertPads = (formIndex) => {\r\n        const tempMap = arr.filter((e, i) => {\r\n            return i >= formIndex && i < formIndex + 6\r\n        })\r\n        return <div className='pads-grid'>\r\n            {tempMap.map((e, i) => <div\r\n                className={`single-pad ${arr[formIndex + i].color}`}\r\n                key={`create-pad-${formIndex + i}`}\r\n                id={`pad-num-${formIndex + i}`}\r\n                onClick={padHandler}\r\n            ></div>)}\r\n        </div>\r\n    }\r\n\r\n    const saveCollection = async (history) => {\r\n        const tempArr = arr.filter(e => e.id)\r\n        if (tempArr.length === 24 && collectionName.length > 0) {\r\n            try {\r\n                const token = localStorage.getItem('token')\r\n                // console.log(token)\r\n                const tempArr2 = tempArr.map(e => {\r\n                    return { id: e.id, color: e.color }\r\n                })\r\n                console.log(tempArr2)\r\n                const save = await Api.post('/sound-collection', {\r\n                    name: collectionName,\r\n                    sounds: tempArr2\r\n                },\r\n                    {\r\n                        headers: {\r\n                            \"Authorization\": `Bearer ${token}`\r\n                        }\r\n                    }\r\n                )\r\n\r\n                await history.push(\"/home\");\r\n                console.log(save)\r\n            } catch (e) {\r\n                console.log('the name is in use choose a differnt collection name')\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {searchSoundIsOpen && <SearchSound\r\n                setSearchSoundIsOpen={setSearchSoundIsOpen}\r\n                setSelected={setSelectedSound}\r\n            />}\r\n            {addSoundIsOpen && <AddSound\r\n                setAddSoundIsOpen={setAddSoundIsOpen}\r\n                setSelectedSound={setSelectedSound}\r\n            />}\r\n            <div className='create-container'>\r\n                <div className='create-nav'>\r\n                    <h2 className=' create-h2'>Fill the board with sound</h2>\r\n                    <div className='create-buttons-div'>\r\n                        <h3 className='create-h3'>Upload or choose other sound, than fill the pad board as your wish</h3>\r\n                    </div>\r\n                    <div className='create-buttons-div'>\r\n                        <button\r\n                            className='create-button'\r\n                            type='button'\r\n                            onClick={() => setAddSoundIsOpen(true)}\r\n                        >Upload sound</button>\r\n\r\n                        <button\r\n                            className='create-button'\r\n                            type='button'\r\n                            onClick={() => setSearchSoundIsOpen(true)}\r\n                        >Search sound</button>\r\n\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`${fileIsSelected ? 'create-file-sound-selected' : ''} create-file-sound`}\r\n                        onClick={() => setFileIsSelected(!fileIsSelected)}\r\n                    ><span\r\n                        style={{ color: `var(--led-${selectorVal})` }}\r\n                    >SOUND: </span>{fileSelectedName}</div>\r\n\r\n                    <div className='create-buttons-div'>\r\n                        <h3\r\n                            className='create-h3'\r\n                        >Button color</h3>\r\n                        <Selector\r\n                            value={selectorVal}\r\n                            options={selectorOps}\r\n                            setValue={setSelectorVal}\r\n                            className={'create-selector'}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className='pads-container'>\r\n                    <div className='pads-container-san'>\r\n                        {insertPads(0)}\r\n                        {insertPads(7)}\r\n                        {insertPads(13)}\r\n                        {insertPads(19)}\r\n                    </div>\r\n                    <div\r\n                        style={{ display: 'flex', justifyContent: 'space-around', width: '100%', padding: '0 1rem' }}\r\n                    >\r\n                        <h3\r\n                            className='create-h3'\r\n                        >Collection Name:</h3>\r\n                        <Input\r\n                            className={\"create-selector-input\"}\r\n                            value={collectionName}\r\n                            onChange={(e) => setCollectionName(e.target.value)}\r\n                        />\r\n\r\n\r\n                        <Route render={({ history }) => (\r\n                            <button\r\n                                className='create-button'\r\n                                onClick={() => saveCollection(history)}\r\n\r\n                            >Save</button>\r\n                        )} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Create;","import './horizontalRange.css'\r\nconst HorizontalRange = ({ value, setValue\r\n    , max, min }) => {\r\n    return (\r\n        <div style={{ padding: '0.3rem 1rem', background: 'none', width: '100%' }}>\r\n            <input\r\n                min={min}\r\n                max={max}\r\n                type='range'\r\n                value={value}\r\n                onChange={setValue}\r\n            ></input>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HorizontalRange;","import { useEffect, useState } from 'react'\r\n\r\nconst BeatBox = ({ boxTiming, id, thisClass, padIndex, currentColor, rythemArr, setMyRythemArr }) => {\r\n    const [boxIsPressed, setBoxIsPressed] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setBoxIsPressed(rythemArr[id - 1])\r\n    }, [rythemArr, id, padIndex])\r\n    return (\r\n        <div\r\n            className={`${thisClass} ${boxTiming === id && !boxIsPressed ? 'play-mode-boxIsOn' : ''}\r\n            ${boxIsPressed && boxTiming !== id && `${currentColor} empty-center-of-box`}\r\n            ${boxIsPressed && boxTiming === id && currentColor}\r\n            `}\r\n            onMouseDown={() => {\r\n                const tempArr = [...rythemArr]\r\n                if (!boxIsPressed) {\r\n                    tempArr[32] = tempArr[32] === false ? 1 : tempArr[32] + 1\r\n                } else {\r\n                    tempArr[32] = tempArr[32] === 1 ? false : tempArr[32] - 1\r\n                }\r\n                setBoxIsPressed(!boxIsPressed)\r\n                tempArr[id - 1] = !tempArr[id - 1]\r\n                setMyRythemArr(tempArr, padIndex)\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BeatBox;","import { useEffect, useState } from \"react\"\r\nimport { decode } from 'base64-arraybuffer'\r\nconst PadBox = (\r\n    { id,\r\n        thisClass,\r\n        padIndex,\r\n        setPadIndex,\r\n        so,\r\n        boxTiming,\r\n        rythemObj,\r\n        setCurrentColor,\r\n        padsStatus,\r\n        setMyPadsStatus,\r\n        ctx,\r\n        gain\r\n    }) => {\r\n\r\n    const [offSet1, setOffSet1] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (padsStatus && rythemObj[boxTiming - 1] === true) {\r\n            const getFile = async (filePath) => {\r\n                const arrayBuffer = decode(filePath)\r\n                const audioBuffer = await ctx.decodeAudioData(arrayBuffer)\r\n                return audioBuffer;\r\n            }\r\n            const playClip = async (clip, outPut) => {\r\n                if (ctx.state === 'suspended') {\r\n                    ctx.resume()\r\n                }\r\n                const clipAudioBuffer = await getFile(clip)\r\n                const myGain = await ctx.createGain()\r\n                myGain.gain.value = so.gain\r\n                myGain.connect(outPut)\r\n\r\n                let biquadFilter = await ctx.createBiquadFilter();\r\n                biquadFilter.frequency.value = so.frequency\r\n                biquadFilter.detune.value = so.detune\r\n                // biquadFilter.detune.value = 0\r\n                biquadFilter.type = so.type\r\n                biquadFilter.connect(myGain)\r\n                // biquadFilter.type = 'lowpass'\r\n\r\n                const clipSource = ctx.createBufferSource()\r\n                clipSource.buffer = clipAudioBuffer;\r\n                clipSource.connect(biquadFilter);\r\n\r\n                // console.log(clipSource)\r\n                if (offSet1 === 0) {\r\n                    clipSource.start()\r\n                    // console.log(ctx.currentTime - offSet)\r\n                    // console.log(myGain)\r\n                    setOffSet1(0)\r\n                } else {\r\n                    clipSource.start(0, ctx.currentTime - offSet1)\r\n                }\r\n            }\r\n            playClip(so.myAudio, gain)\r\n\r\n        }\r\n\r\n    }, [boxTiming, rythemObj, id, so, padsStatus, padIndex, gain, offSet1, ctx])\r\n\r\n\r\n\r\n\r\n\r\n    const userClick = () => {\r\n        setPadIndex(id)\r\n        const somethingInOn = rythemObj.find(e => e === true)\r\n        if (somethingInOn && padIndex === id) {\r\n            setMyPadsStatus(padIndex, !padsStatus)\r\n        }\r\n        setCurrentColor(so.color)\r\n    }\r\n\r\n    const setIcon = () => {\r\n        if (rythemObj[32]) {\r\n            if (padsStatus) {\r\n                return <i className=\"fas fa-undo fa-1x\"></i>\r\n            }\r\n            return <i className=\"fas fa-pause fa-1x\"></i>\r\n        }\r\n        return ''\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`${thisClass} \r\n            ${so.color}\r\n            ${padIndex === id ? `buttonOn` : 'buttonOff'}\r\n            ${padsStatus && rythemObj[boxTiming - 1] === true ? `play-mode-boxIsOn` : 'buttonOff'}`\r\n                }\r\n                onMouseDown={userClick}\r\n            >\r\n                <div className='play-mode-pad-icon'>{setIcon()}</div>\r\n\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PadBox;","import './spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: \"center\", height: '100vh' }}>\r\n            <div class=\"loader\">\r\n                <span class=\"loader-span\"></span>\r\n                <span class=\"loader-span\"></span>\r\n                <span class=\"loader-span\"></span>\r\n                <span class=\"loader-span\"></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport HorizontalRange from '../../components/horizontalRange/HorizontalRange'\r\nimport ReactInterval from 'react-interval';\r\nimport './playModePage.css'\r\nimport BeatBox from '../../components/beatBox/BeatBox'\r\nimport PadBox from '../../components/‏‏padBox/padBox'\r\nimport Spinner from '../../components/spinner/Spinner'\r\nimport Api from '../../api/Api'\r\n// import Sounds2 from '../../components/‏‏sounds/Sounds'\r\n\r\n\r\nconst PlayModePage = ({\r\n    ctx,\r\n    sounds,\r\n    setSounds,\r\n    gainNode,\r\n    biquadFilter,\r\n    currentCollection,\r\n    patternArr\r\n}) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const [bpm, setBpm] = useState(120)\r\n    const [realBpm, setRealBpm] = useState(120)\r\n    const [enabled, setEnabled] = useState(false)\r\n    const [beat, setBeat] = useState(0)\r\n    const [sequencerBeat, setSequencerBeat] = useState(0)\r\n    const [restart, setRestart] = useState(false)\r\n\r\n    const [rythemObj, setRythemObj] = useState({})\r\n    const [padIndex, setPadIndex] = useState(1)\r\n    const [currentColor, setCurrentColor] = useState('ligth-blue');\r\n\r\n    const [saveIsOpen, setSaveIsOpen] = useState(false)\r\n    const [patternName, setPatternName] = useState('')\r\n    const [message, setMessage] = useState('Choose pattern name')\r\n\r\n    //---Is Loading------///\r\n    useEffect(() => {\r\n        if (sounds && patternArr) {\r\n            setIsLoading(false)\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n    }, [sounds, patternArr])\r\n\r\n\r\n    //====AudioApi=====///\r\n    const [gain, setGain] = useState(0.75)\r\n    const [frequency, setFrequency] = useState(350)\r\n\r\n    useEffect(() => {\r\n        if (gainNode) {\r\n            gainNode.gain.value = gain\r\n        }\r\n        if (biquadFilter) {\r\n            biquadFilter.frequency.value = frequency\r\n            biquadFilter.type = 'notch'\r\n        }\r\n    }, [gainNode, gain, biquadFilter, frequency])\r\n\r\n    const setGainInSoundsObject = (e, type) => {\r\n        const tempSounds = [...sounds]\r\n        if (type === 'gain') {\r\n            tempSounds[padIndex - 1][type] = e.target.value / 100\r\n        } else if (type === 'type') {\r\n            tempSounds[padIndex - 1][type] = e.target.value\r\n        } else {\r\n            tempSounds[padIndex - 1][type] = e.target.value\r\n        }\r\n\r\n        setSounds(tempSounds)\r\n    }\r\n\r\n\r\n    //-----------\r\n    useEffect(() => {\r\n        console.log(patternArr)\r\n        // if (patternArr) {\r\n        let temp = {}\r\n        if (patternArr === 'empty') {\r\n            for (let i = 0; i < 24; i++) {\r\n                temp[i + 1] = new Array(33).fill(false)\r\n            }\r\n        } else {\r\n            for (let i = 0; i < 24; i++) {\r\n                temp[i + 1] = patternArr[i].sequencer\r\n            }\r\n        }\r\n        temp.padsStatus = new Array(24).fill(true)\r\n        setRythemObj(temp)\r\n        // console.log(temp)\r\n        // console.log(sounds)\r\n        // }\r\n    }, [restart, setSounds, patternArr])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setRealBpm(bpm)\r\n        }, 1000)\r\n    }, [bpm])\r\n\r\n    const setMyRythemObj = (arr, index) => {\r\n        const tempObj = { ...rythemObj, [index]: arr }\r\n        setRythemObj({ ...tempObj })\r\n    }\r\n    const setMyPadsStatus = (pad, bool) => {\r\n        const tempArr = [...rythemObj.padsStatus]\r\n        tempArr[pad - 1] = bool\r\n        const tempObj = { ...rythemObj, padsStatus: tempArr }\r\n        setRythemObj({ ...tempObj })\r\n    }\r\n\r\n\r\n    const insertDivs = (rowLength, girdClass, singleClass, fromNum) => {\r\n        const tempMap = new Array(rowLength).fill(1)\r\n        const temp = <div className={girdClass}>\r\n            {tempMap.map((e, i) => {\r\n                if (singleClass === 'play-mode-single-sequencer') {\r\n                    return (\r\n                        <BeatBox\r\n                            key={`${singleClass}${fromNum + i}`}\r\n                            thisClass={singleClass}\r\n                            boxTiming={sequencerBeat}\r\n                            id={fromNum + i}\r\n                            padIndex={padIndex}\r\n                            currentColor={currentColor}\r\n                            rythemArr={rythemObj[`${padIndex}`]}\r\n                            setMyRythemArr={setMyRythemObj}\r\n                        />\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <PadBox\r\n                            key={`${singleClass}${fromNum + i}`}\r\n                            thisClass={singleClass}\r\n                            id={fromNum + i}\r\n                            padIndex={padIndex}\r\n                            setPadIndex={setPadIndex}\r\n                            boxTiming={sequencerBeat}\r\n                            rythemObj={rythemObj[`${fromNum + i}`]}\r\n                            setCurrentColor={setCurrentColor}\r\n                            padsStatus={rythemObj.padsStatus[fromNum + i - 1]}\r\n                            setMyPadsStatus={setMyPadsStatus}\r\n\r\n                            ctx={ctx}\r\n                            gain={biquadFilter}\r\n                            so={sounds[fromNum + i - 1]}\r\n                        />\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n        return temp\r\n    }\r\n    const start = () => {\r\n        if (enabled) {\r\n            setBeat(0)\r\n            setSequencerBeat(0)\r\n        }\r\n        setEnabled(!enabled)\r\n    }\r\n    const stop = () => {\r\n        setRestart(!restart)\r\n        setBeat(0)\r\n        setSequencerBeat(0)\r\n        setEnabled(false)\r\n    }\r\n\r\n    const save = async () => {\r\n        try {\r\n            setIsLoading(true)\r\n            const token = localStorage.getItem('token')\r\n            const pattern = sounds.map((e, i) => {\r\n                return {\r\n                    frequency: e.frequency,\r\n                    detune: e.detune,\r\n                    gacurrentCollectionin: e.gain,\r\n                    type: e.type,\r\n                    sequencer: rythemObj[i + 1]\r\n                }\r\n            })\r\n            //====\r\n            const tempObj = {\r\n                pattern: pattern,\r\n                collectionId: currentCollection,\r\n                name: patternName\r\n            }\r\n            //=====\r\n            const savedObj = await Api.patch(`sound-collection/update/${currentCollection}`, tempObj,\r\n                {\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${token}`\r\n                    }\r\n                })\r\n            setIsLoading(false)\r\n            setSaveIsOpen(false)\r\n            setPatternName('')\r\n        } catch (e) {\r\n            setMessage('The name is not available')\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Spinner />}\r\n            {!isLoading && <>\r\n                <ReactInterval timeout={60000 / realBpm / 4} enabled={enabled}\r\n                    callback={() => {\r\n                        setBeat((beat + 1))\r\n                        setSequencerBeat(sequencerBeat < 32 ? sequencerBeat + 1 : 1)\r\n                    }}\r\n                />\r\n                {sounds && ctx &&\r\n                    <div className='play-mode-container'>\r\n                        <div className='play-mode-sequencer-container'>\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 1)}\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 9)}\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 17)}\r\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 25)}\r\n                            <div className='play-mode-toggle-h2'>Control All</div>\r\n                            <div className='toggle'>\r\n                                <div className='toggle-div'>\r\n                                    <div className='toggle-div-text'>\r\n                                        <p>BPM</p>\r\n                                        <p>{bpm}</p>\r\n                                    </div>\r\n                                    <HorizontalRange\r\n                                        value={bpm}\r\n                                        setValue={(e) => { setBpm(e.target.value) }}\r\n                                        max={'220'}\r\n                                        min={'60'} />\r\n                                </div>\r\n                                <div className='toggle-div'>\r\n                                    <div className='toggle-div-text'>\r\n                                        <p>Gain</p>\r\n                                        <p>{Math.round(gain * 100)}</p>\r\n                                    </div>\r\n                                    <HorizontalRange\r\n                                        value={gain * 100} setValue={(e) => {\r\n                                            setGain(e.target.value / 100)\r\n                                        }}\r\n                                        max={'100'}\r\n                                        min={'0'}\r\n                                    />\r\n                                </div>\r\n                                <div className='toggle-div'>\r\n                                    <div className='toggle-div-text'>\r\n                                        <p>Frequency</p>\r\n                                        <p>{frequency}</p>\r\n                                    </div>\r\n                                    <HorizontalRange\r\n                                        value={frequency} setValue={(e) => {\r\n                                            setFrequency(e.target.value)\r\n                                        }}\r\n                                        max={'4000'}\r\n                                        min={'0'}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='play-mode-pads-container'>\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 1)}\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 7)}\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 13)}\r\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 19)}\r\n                            {!saveIsOpen &&\r\n                                <>\r\n\r\n                                    <div\r\n                                        style={{ display: 'flex', justifyContent: 'space-between' }}\r\n                                        className='play-mode-toggle-h2'>\r\n                                        <button\r\n                                            style={{ color: enabled ? 'var(--red)' : 'var(--green)' }}\r\n                                            className='play-mode-button'\r\n                                            onClick={() => start()}>{enabled ? 'Stop' : 'Play'}</button>\r\n\r\n                                        <select\r\n                                            className='play-mode-selector'\r\n                                            value={sounds[padIndex - 1].type}\r\n                                            onChange={(e) => {\r\n                                                setGainInSoundsObject(e, 'type')\r\n                                            }}>\r\n                                            <option value='allpass'>Allpass</option>\r\n                                            <option value='lowpass'>Lowpass</option>\r\n                                            <option value='highpass'>Highpass</option>\r\n                                            <option value='bandpass'>Bandpass</option>\r\n                                            <option value='lowshelf'>Lowshelf</option>\r\n                                            <option value='highshelf'>Highshelf</option>\r\n                                            <option value='peaking'>Peaking</option>\r\n                                            <option value='notch'>Notch</option>\r\n                                        </select>\r\n                                        <button className='play-mode-button'\r\n                                            onClick={() => stop()}>Clear</button>\r\n\r\n                                        <button className='play-mode-button'\r\n\r\n                                            onClick={() => setSaveIsOpen(true)}>Save</button>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='toggle'>\r\n                                        <div className='toggle-div'>\r\n                                            <div className='toggle-div-text'>\r\n                                                <p>Gain</p>\r\n                                                <p>{Math.round(sounds[padIndex - 1].gain * 100)}</p>\r\n                                            </div>\r\n                                            <HorizontalRange\r\n                                                value={sounds[padIndex - 1].gain * 100} setValue={(e) => {\r\n                                                    setGainInSoundsObject(e, 'gain')\r\n                                                }}\r\n                                                max={'100'}\r\n                                                min={'0'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='toggle-div'>\r\n                                            <div className='toggle-div-text'>\r\n                                                <p>Frequency</p>\r\n                                                <p>{Math.round(sounds[padIndex - 1].frequency)}</p>\r\n                                            </div>\r\n                                            <HorizontalRange\r\n                                                value={sounds[padIndex - 1].frequency} setValue={(e) => {\r\n                                                    setGainInSoundsObject(e, 'frequency')\r\n                                                }}\r\n                                                max={'2000'}\r\n                                                min={'0'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='toggle-div'>\r\n                                            <div className='toggle-div-text'>\r\n                                                <p>Detune</p>\r\n                                                <p>{sounds[padIndex - 1].detune}</p>\r\n                                            </div>\r\n                                            <HorizontalRange\r\n                                                value={sounds[padIndex - 1].detune} setValue={(e) => {\r\n                                                    setGainInSoundsObject(e, 'detune')\r\n                                                }}\r\n                                                max={'4000'}\r\n                                                min={'-4000'}\r\n                                            />\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </>}\r\n                            {saveIsOpen &&\r\n                                <>\r\n                                    <div className='play-mode-toggle-h2'>{message}</div>\r\n                                    <div style={{ display: 'flex', margin: '1rem', justifyContent: 'space-between', transition: 'all 1s' }}>\r\n                                        <input\r\n                                            style={{ fontSize: '1rem', borderRadius: '5px' }}\r\n                                            onChange={(e) => setPatternName(e.target.value)}\r\n                                            value={patternName}\r\n                                        ></input>\r\n                                        <button\r\n                                            className='play-mode-button'\r\n                                            onClick={() => save(patternName)}>Save</button>\r\n                                        <button\r\n                                            className='play-mode-button'\r\n                                            onClick={() => {\r\n                                                setSaveIsOpen(false)\r\n                                                setPatternName('')\r\n                                            }\r\n                                            }>Cansel</button>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div >}\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayModePage;","import './choosePattern.css'\r\nimport { useEffect, useState } from 'react'\r\nimport Api from '../../api/Api'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ChoosePattern = ({ setChoosePatternIsOpen, setSelected, tempCurrentCollection, setIsOn }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isLoadingOnPage, setIsLoadingOnPage] = useState(true);\r\n\r\n    const [patternOps, setPatternOps] = useState(null)\r\n    const [current, setCurrent] = useState(null)\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const tagsRes = async () => {\r\n            try {\r\n                const tempRes = await Api.get(`/patterns/all/${tempCurrentCollection}`)\r\n                // setTagsOptions(await tempRes.data.sort())\r\n                setPatternOps(tempRes.data[0].patterns)\r\n                // setSelectorVal(await tempRes.data[0])\r\n                setIsLoading(false)\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n\r\n        }\r\n        tagsRes()\r\n        setIsLoadingOnPage(false)\r\n    }, [tempCurrentCollection])\r\n\r\n\r\n    const setList = () => {\r\n        return patternOps.map((e, i) => {\r\n            return (\r\n                <div\r\n                    onClick={(e) => {\r\n                        if (current === e.target.id) {\r\n                            setCurrent(null)\r\n                        } else {\r\n                            setCurrent(e.target.id)\r\n                        }\r\n                    }}\r\n                    id={e._id}\r\n                    key={`patternOps-${i}`}\r\n                    className='search-sound-result-container'\r\n                >\r\n                    <div\r\n                        id={e._id}\r\n                        className={`search-sound-file-sound ${current === e._id ? 'search-sound-file-sound-selected' : ''}`}\r\n                    >\r\n\r\n                        <div\r\n                            style={{ display: 'flex' }}\r\n                            id={e._id}\r\n                        >{e.name}</div>\r\n                        <div\r\n                            id={e._id}>\r\n                            <span\r\n                                id={e._id}\r\n                            >by: </span>\r\n                            <span\r\n                                id={e._id}\r\n                                style={{ marginLeft: '0.6rem' }}\r\n                                key={`soundlist-tag-${i}`}>{e.userName}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>{isLoadingOnPage && <div className='search-sound-loading-on-page'></div>}\r\n            <div className='search-sound-top'>\r\n                <div className=\"search-sound-container\">\r\n                    {!isLoading && <>\r\n                        <Link to='/'>\r\n                            <div className='add-sound-exit'\r\n                                onClick={() => setChoosePatternIsOpen(false)}\r\n                            >X</div>\r\n                        </Link>\r\n                        <h2 className=\"search-sound-container-h2\">Choose Pattern</h2>\r\n\r\n                        <div className='search-sound-results'>\r\n                            {patternOps && setList()}\r\n                        </div>\r\n                        <button\r\n                            className='search-sound-button'\r\n                            onClick={() => {\r\n                                setChoosePatternIsOpen(false)\r\n                                setSelected(current ? current : 'empty')\r\n                                setIsOn(true)\r\n                            }\r\n                            }\r\n                        >\r\n                            Submit\r\n                    </button>\r\n                    </>}\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChoosePattern;","import PlayModePage from './PlayModePage'\r\nimport { useState, useEffect } from 'react'\r\nimport ChoosePattern from '../../components/choosePattern/ChoosePattern'\r\n\r\nimport axios from 'axios'\r\nimport Api from '../../api/Api'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst App = ({ consoleIsOpen, setConsoleIsOpen, currentCollection, setcurrentCollection }) => {\r\n    const [isOn, setIsOn] = useState(false)///<<<<<<<<<<<<<<\r\n    const [ctx, setCtx] = useState(null)\r\n    const [gainNode, setGainNode] = useState(null)\r\n    const [biquadFilter, setBiquadFilter] = useState(null)\r\n    const [sounds, setSounds] = useState(null)\r\n\r\n    const [savedObj, setSavedObj] = useState(null)\r\n\r\n    const [patternIsOpen, setPatternIsOpen] = useState(consoleIsOpen)\r\n    const [pattern, setPattern] = useState(null)\r\n    const [patternArr, setPatternArr] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentCollection) {\r\n            if (isOn)\r\n                setCtx(new AudioContext())\r\n            let tempEffectsArr;\r\n            console.log(currentCollection)\r\n            // if (!savedObj) {\r\n            if (pattern) {\r\n                const fetchSounds = async () => {\r\n                    if (pattern === 'empty') {\r\n                        tempEffectsArr = new Array(24).fill({\r\n                            frequency: 350,\r\n                            detune: 0,\r\n                            type: 'notch',\r\n                            gain: 0.75\r\n                        })\r\n                        setPatternArr('empty')\r\n                    } else {\r\n\r\n                        const res = await Api.get(`/patterns/${pattern}`)\r\n                        console.log(await res.data[0].pattern)\r\n                        setPatternArr(await res.data[0].pattern)\r\n                        tempEffectsArr = await res.data[0].pattern.map(e => {\r\n                            return ({\r\n                                frequency: Number(e.frequency),\r\n                                detune: Number(e.detune),\r\n                                type: e.type,\r\n                                gain: Number(e.gacurrentCollectionin)\r\n                            })\r\n                        })\r\n                    }\r\n                    const arrRes = await Api.get(`/sound-collection/${currentCollection}`)\r\n                    const arrData = await arrRes.data[0].sounds\r\n                    const arrDataLinks = await arrData.map(async (e) => {\r\n                        return await Api.get(`/sounds/${e.id}`)\r\n                    })\r\n\r\n                    let arrDataSounds = null;\r\n                    await axios.all(arrDataLinks)\r\n                        .then(axios.spread((...responses) => {\r\n                            let tempArr = [];\r\n                            for (let i = 0; i < 24; i++) {\r\n                                tempArr.push({\r\n                                    myAudio: responses[i].data[0].audio,\r\n                                    color: arrData[i].color,\r\n                                    ...tempEffectsArr[i]\r\n                                })\r\n                            }\r\n                            arrDataSounds = tempArr\r\n                        })).catch(errors => {\r\n                        })\r\n                    //------------------------\r\n                    // return arrDataSounds\r\n                    setSounds(arrDataSounds)\r\n                }\r\n\r\n                fetchSounds()\r\n            }\r\n        } else {\r\n            setConsoleIsOpen(false)\r\n        }\r\n        // console.log(Sounds2())\r\n        // setSounds(fetchSounds())\r\n        // setSounds(Sounds2())\r\n    }, [isOn, currentCollection, setConsoleIsOpen, pattern])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (ctx && !gainNode) {\r\n            setGainNode(ctx.createGain())\r\n            setBiquadFilter(ctx.createBiquadFilter())\r\n        }\r\n    }, [ctx, gainNode])\r\n\r\n    useEffect(() => {\r\n        if (gainNode) {\r\n            gainNode.connect(ctx.destination)\r\n            // setRecord(new Recorder(gainNode))\r\n        }\r\n        if (biquadFilter) {\r\n            biquadFilter.connect(gainNode)\r\n        }\r\n    }, [gainNode, ctx, biquadFilter,])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {patternIsOpen && <ChoosePattern\r\n                setChoosePatternIsOpen={setPatternIsOpen}\r\n                tempCurrentCollection={currentCollection}\r\n                setSelected={setPattern}\r\n                setIsOn={setIsOn}\r\n            />}\r\n            {!currentCollection && <Redirect to='/'></Redirect >}\r\n            {/* {console.log(isLoading)} */}\r\n\r\n            {currentCollection && patternArr &&\r\n                <>\r\n                    <button\r\n                        style={{ position: 'absolute', padding: '2px 4px', background: 'var(--led-red)', borderRadius: '4px', fontSize: '1.2rem', border: 'none', bottom: '2rem', left: '2rem', cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            if (!isOn) {\r\n                                setIsOn(true)\r\n                            } else {\r\n                                setCtx(null)\r\n                                setIsOn(false)\r\n                                setGainNode(null)\r\n                                setBiquadFilter(null)\r\n                                setSounds(null)\r\n                                setcurrentCollection(null)\r\n                            }\r\n                        }\r\n                        }\r\n                    >X</button>\r\n                    <PlayModePage\r\n                        ctx={ctx}\r\n                        sounds={sounds}\r\n                        setSounds={setSounds}\r\n                        gainNode={gainNode}\r\n                        biquadFilter={biquadFilter}\r\n                        savedObj={savedObj}\r\n                        setSavedObj={setSavedObj}\r\n                        currentCollection={currentCollection}\r\n                        patternArr={patternArr}\r\n                    />\r\n                </>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from '../pages/home/Home'\nimport Navbar from '../components/navbar/Navbar'\nimport OpeningPage from '../pages/openingPage/OpeningPage'\nimport Create from '../pages/create/Create'\nimport StarterPlayModePage from '../pages/‏‏playModePage/StarterPlayModePage'\n\n\nconst App = () => {\n  const [consoleIsOpen, setConsoleIsOpen] = useState(false)\n\n  const [currentCollection, setCurrentCollection] = useState(null)\n\n  const [isLoged, setIsLoged] = useState(false)\n  const [userName, setUserName] = useState(null)\n  useEffect(() => {\n    if (localStorage.token) {\n      setIsLoged(true)\n      setUserName(localStorage.getItem('name'))\n    }\n  }, [isLoged])\n\n  return (\n    <>\n      <>\n        {/* { console.log(window.location.href)} */}\n        {!isLoged && <OpeningPage setIsLoged={setIsLoged} />}\n        <BrowserRouter>\n          {isLoged && <>\n            {!consoleIsOpen && <Navbar userName={userName} />}\n            <Route path=\"/\" exact\n              component={() =>\n                <Home\n                  setConsoleIsOpen={setConsoleIsOpen}\n                  consoleIsOpen={consoleIsOpen}\n                  setCurrentCollection={setCurrentCollection}\n                />\n              }\n            >\n            </Route>\n            < Route path=\"/home\" exact component={() =>\n              <Home\n                setConsoleIsOpen={setConsoleIsOpen}\n                consoleIsOpen={consoleIsOpen}\n                setCurrentCollection={setCurrentCollection}\n              />\n            }\n            />\n            < Route path=\"/create\" exact component={() =>\n              <Create />\n            }\n            />\n            < Route path=\"/console\" exact component={() =>\n              <StarterPlayModePage\n                consoleIsOpen={consoleIsOpen}\n                setConsoleIsOpen={setConsoleIsOpen}\n                currentCollection={currentCollection}\n                setcurrentCollection={setCurrentCollection}\n              />\n            }\n            />\n          </>}\n        </BrowserRouter>\n      </>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}