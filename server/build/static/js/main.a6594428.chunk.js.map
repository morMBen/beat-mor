{"version":3,"sources":["api/Api.js","img/openBackgound.jpg","pages/home/Home.js","components/navbar/Navbar.js","components/input/Input.js","components/login/Login.js","components/sign/sign.js","pages/openingPage/OpeningPage.js","components/addSound/AddSound.js","components/selector/Selector.js","components/searchSound/SearchSound.js","pages/create/Create.js","components/horizontalRange/HorizontalRange.js","components/beatBox/BeatBox.js","components/‏‏padBox/padBox.js","pages/‏‏playModePage/PlayModePage.js","pages/‏‏playModePage/StarterPlayModePage.js","components/App.js","reportWebVitals.js","index.js"],"names":["url","api","axios","create","baseURL","Home","setConsoleIsOpen","setCurrentCollection","useState","collectionsNames","setCollectionsNames","useEffect","a","Api","get","res","data","getCollectionsName","style","paddingTop","className","map","e","i","onClick","_id","to","src","testImg","alt","ownerName","name","Navbar","openCloseLogMenu","userlog","userDetails","isNavOpen","setIsNavOpen","fontSize","maxHeight","Input","type","onChange","value","Login","setLoginCard","setIsLoged","password","setPassword","email","setEmail","showMessage","setShowMessage","handleSubmission","post","toString","localStorage","setItem","user","userName","token","setTimeout","target","split","display","justifyContent","Sign","passwordConfirm","setPasswordConfirm","setUserName","message","setMessage","length","clear","console","log","getItem","OpeningPage","logOrSingCard","setLogOrSingCard","singCard","setSingCard","loginCard","AddSound","setAddSoundIsOpen","setSelectedSound","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","fileName","setFileName","tagsValue","setTagsValue","userMessage","setUserMessage","buttonText","setButtonText","result","join","file","audio","tags","headers","id","htmlFor","size","accept","event","reader","FileReader","files","readAsDataURL","match","Audio","play","Selector","options","setValue","SearchSound","setSearchSoundIsOpen","setSelected","isLoading","setIsLoading","isLoadingOnPage","setIsLoadingOnPage","tagsOptions","setTagsOptions","selectorVal","setSelectorVal","soundsList","setSoundsList","inputVal","setInputVal","selectedSound","selectedSoundAudio","setSelectedSoundAudio","selectedSoundAudioDetails","setSelectedSoundAudioDetails","tempRes","sort","tagsRes","handelSerchByTag","tempSounds","handelSerchByFreetext","handelSoundSelect","res2","playAudio","el","marginLeft","color","Create","addSoundIsOpen","searchSoundIsOpen","fileIsSelected","setFileIsSelected","fileSelectedName","setFileSelectedName","Array","fill","arr","setArr","collectionName","setCollectionName","padHandler","index","replace","tempArr","test","insertPads","formIndex","tempMap","filter","saveCollection","tempArr2","sounds","save","width","padding","HorizontalRange","max","min","background","BeatBox","boxTiming","thisClass","padIndex","currentColor","rythemArr","setMyRythemArr","boxIsPressed","setBoxIsPressed","onMouseDown","PadBox","setPadIndex","so","rythemObj","setCurrentColor","padsStatus","setMyPadsStatus","ctx","gain","offSet1","setOffSet1","getFile","filePath","arrayBuffer","decode","decodeAudioData","audioBuffer","clip","outPut","state","resume","clipAudioBuffer","createGain","myGain","connect","createBiquadFilter","biquadFilter","frequency","detune","clipSource","createBufferSource","buffer","start","currentTime","playClip","myAudio","find","PlayModePage","setSounds","gainNode","bpm","setBpm","realBpm","setRealBpm","enabled","setEnabled","beat","setBeat","sequencerBeat","setSequencerBeat","restart","setRestart","setRythemObj","setGain","setFrequency","setGainInSoundsObject","temp","setMyRythemObj","tempObj","pad","bool","insertDivs","rowLength","girdClass","singleClass","fromNum","timeout","callback","App","consoleIsOpen","currentCollection","isOn","setIsOn","setCtx","setGainNode","setBiquadFilter","AudioContext","tempEffectsArr","arrRes","arrData","arrDataLinks","arrDataSounds","all","then","spread","responses","push","catch","errors","fetchSounds","destination","isLoged","path","exact","component","StarterPlayModePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6594428.chunk.js","sourcesContent":["import axios from 'axios';\n\nlet url;\nif (process.env.NODE_ENV === 'development') {\n    url = 'http://localhost:5000/api'\n}\nif (process.env.NODE_ENV === 'production') {\n    url = 'api'\n}\nconst api = axios.create({\n    baseURL: url,\n})\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/openBackgound.68c73abe.jpg\";","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Api from '../../api/Api'\nimport './home.css'\nimport testImg from '../../img/openBackgound.jpg'\nimport { Link } from \"react-router-dom\";\n\n// import OpeningPage from '../openingPage/OpeningPage';\nconst Home = ({ setConsoleIsOpen, setCurrentCollection }) => {\n    const [collectionsNames, setCollectionsNames] = useState(null)\n\n    useEffect(() => {\n        const getCollectionsName = async () => {\n            const res = await Api.get('/sound-collection')\n            setCollectionsNames(res.data)\n        }\n        getCollectionsName()\n    }, [])\n\n    const openConsole = () => {\n        setConsoleIsOpen(true)\n\n    }\n\n\n    const insetCollectionsNames = () => {\n        return collectionsNames.map((e, i) => {\n            return <section className='home-section' key={`collection${i}`}\n                onClick={() => {\n                    setCurrentCollection(e._id)\n                    openConsole()\n                }}\n            >\n                <Link\n                    to={'/console'}\n                >\n                    <figure className='home-figure-img'>\n                        <img src={testImg} alt='fasd' />\n                    </figure>\n                    <figure className='home-figure-text'>\n                        <article className='home-article'>\n                            <span >{e.ownerName}</span>\n                            <h3 className='home-h3'>{e.name}</h3>\n                        </article>\n                    </figure>\n                </Link>\n            </section >\n        })\n    }\n    return (\n        <div style={{ paddingTop: '5rem' }}>\n            <div className='home-main'>\n                {collectionsNames && insetCollectionsNames()}\n            </div>\n        </div>\n    )\n}\nexport default Home;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './navbar.css';\n\n\nconst Navbar = ({ openCloseLogMenu, userlog, userDetails }) => {\n    const [isNavOpen, setIsNavOpen] = useState(false);\n\n    const menuOpen = () => {\n        if (isNavOpen) {\n            return '300px'\n        } else {\n            return '0'\n        }\n    }\n\n\n    return (\n\n        <div className=\"my-nav\" style={{ fontSize: '17px' }}>\n            <Link to='/' className=\"menu-logo\">\n                A Beat Mor\n            </Link>\n            <div className=\"hamburger\" onClick={() => { setIsNavOpen(!isNavOpen) }}>\n                {/* nav here */}\n                dads\n            </div>\n            <div className=\"nav-menu\" style={{ maxHeight: menuOpen() }}>\n                <Link to='/search' className=\"menu-link\">Search</Link>\n                <Link to='/create' className=\"menu-link\">Create</Link>\n                <Link to={`/`} className=\"menu-link\">Home</Link>\n            </div>\n        </div >\n    )\n}\n\nexport default Navbar;","const Input = ({ type, onChange, value, className }) => {\n    return (\n        <input\n            className={className} onChange={onChange} value={value}></input>\n    )\n}\n\nexport default Input;","import { useState } from 'react';\nimport Input from '../input/Input'\nimport Api from '../../api/Api'\nimport './login.css'\n\nconst Login = ({ setLoginCard, setIsLoged }) => {\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [showMessage, setShowMessage] = useState(false);\n\n\n    const handleSubmission = async () => {\n        try {\n            // console.log(password.toString())\n            const res = await Api.post('/users/login', {\n                password: password.toString(),\n                email\n            })\n            localStorage.setItem('name', res.data.user.userName)\n            localStorage.setItem('token', res.data.token)\n            setIsLoged(true)\n            setLoginCard(false)\n            // console.log(localStorage.getItem('name'))\n            // console.log(localStorage.getItem('token'))\n        } catch (e) {\n            setShowMessage(true)\n            setTimeout(() => {\n                setShowMessage(false)\n            }, 2000)\n        }\n    }\n\n\n    return (\n        <div className='log-in-top'>\n            <div className='log-in-container'>\n                <h2\n                    className='log-in-container-h2'\n                >Welcome Back</h2>\n                <br></br>\n                <h3\n                    className='log-in-container-h3'\n                >Email</h3>\n                {/* <p>A space must be left between each tag</p> */}\n                <Input\n                    className={'log-in-input'}\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <br></br>\n                <h3\n                    className='log-in-container-h3'\n                >Password</h3>\n                <Input\n                    className={'log-in-input'}\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value.split(' '))}\n                />\n                <br></br>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <button\n                        className='log-in-container-button'\n                        type='button' onClick={handleSubmission}\n                    >Submit</button>\n                    <br></br>\n                    <button\n                        className='log-in-container-button'\n                        type='button' onClick={() => {\n                            setPassword('')\n                            setEmail('')\n                            setLoginCard(false)\n                        }}\n                    >Cancel</button>\n                    {/* <button\n                    type='button' onClick={async () => {\n                        const test = await Api.get('users/me', {\n                            headers: {\n                                \"Authorization\": localStorage.getItem('token')\n                            }\n                        })\n                        console.log(test)\n                    }}\n                >Get me test</button> */}\n                </div>\n                <br />\n                {!showMessage && < br />}\n                {showMessage && <h4>Wrong input please try again</h4>}\n            </div>\n        </div >\n    )\n}\nexport default Login;\n////////////","import { useState } from 'react';\nimport Input from '../input/Input'\nimport Api from '../../api/Api'\nimport './sign.css'\n\nconst Sign = ({ setLoginCard, setIsLoged }) => {\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n    const [userName, setUserName] = useState('');\n    const [email, setEmail] = useState('');\n    const [showMessage, setShowMessage] = useState(false);\n    const [message, setMessage] = useState('')\n\n\n    const handleSubmission = async () => {\n        if (passwordConfirm !== password) {\n            setShowMessage(true)\n            setTimeout(() => {\n                setShowMessage(false)\n                setMessage('Your password conformation is in currect')\n            }, 2000)\n        } else if (password.length < 8) {\n            setShowMessage(true)\n            setTimeout(() => {\n                setShowMessage(false)\n                setMessage('Your password must be at least 8 digits')\n            }, 2000)\n        } else {\n            try {\n                const res = await Api.post('/users/', {\n                    password: password.toString(),\n                    email,\n                    userName\n                })\n                localStorage.clear()\n                localStorage.setItem('name', res.data.user.userName)\n                localStorage.setItem('token', res.data.token)\n                setLoginCard(false)\n                setIsLoged(true)\n                console.log(localStorage.getItem('name'))\n                console.log(localStorage.getItem('token'))\n            } catch (e) {\n                setShowMessage(true)\n                setTimeout(() => {\n                    setShowMessage(false)\n                    setMessage('Error in email Check the spelling and make sure you are not already registered')\n                }, 2000)\n            }\n        }\n    }\n\n\n    return (\n        <div className='signin-top'>\n            <div className='signin-container'>\n                <h2\n                    className='signin-container-h2'\n                >Ready to get started</h2>\n                <h3\n                    className='signin-container-h3'\n                >Write your user name</h3>\n                {/* <p>A space must be left between each tag</p> */}\n                <Input\n                    className={'signin-input'}\n                    value={userName}\n                    onChange={(e) => setUserName(e.target.value)}\n                />\n                <h3\n                    className='signin-container-h3'\n                // className='signin-container-h3'\n                >Enter your Email</h3>\n                {/* <p>A space must be left between each tag</p> */}\n                <Input\n                    className={'signin-input'}\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <h3\n                    className='signin-container-h3'\n                >Choose password</h3>\n                <Input\n                    className={'signin-input'}\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <h3\n                    className='signin-container-h3'\n                >Confirm your password</h3>\n                <Input\n                    className={'signin-input'}\n                    value={passwordConfirm}\n                    onChange={(e) => setPasswordConfirm(e.target.value)}\n\n                />\n                <br></br>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <button\n                        className='signin-container-button'\n                        type='button' onClick={handleSubmission}\n                    >Submit</button>\n                    <button\n                        className='signin-container-button'\n                        type='button' onClick={() => {\n                            setPassword('')\n                            setEmail('')\n                            setLoginCard(false)\n                        }}\n                    >Cancel</button>\n                </div>\n                <br />\n                {!showMessage && < br />}\n                {showMessage && <h4>{message}</h4>}\n            </div>\n        </div >\n    )\n}\nexport default Sign;","// import img from '../../img/openBackgound.jpg'\nimport { useState } from 'react';\nimport './openingPage.css';\nimport Login from '../../components/login/Login';\nimport Sign from '../../components/sign/sign';\n\nconst OpeningPage = ({ setIsLoged }) => {\n    const [logOrSingCard, setLogOrSingCard] = useState(false)\n    const [singCard, setSingCard] = useState(false)\n    const [loginCard, setLoginCard] = useState(false)\n\n\n    return (\n        <>\n            <div className='opening-page-container'>\n                <h1\n                    className='opening-page-container-h1'\n                >A Beat Mor</h1>\n                <h2\n                    className='opening-page-container-h2'\n                >Tomorrow's sound starts today</h2>\n                <h3\n                    className='opening-page-container-h3'\n                >\n                    Is your head full of sounds? You have an idea for the beat of the next hit?</h3>\n                <h2\n                    className='opening-page-container-h2'\n                >Come and share...</h2>\n                <h3\n                    className='opening-page-container-h3'\n                >Upload your own unique sounds or use existing sounds Create the rhythm Add audio effects.\nSave and share and let the world experience your touch.</h3>\n                <br />\n                <div style={{ display: 'flex', justifyContent: !logOrSingCard ? 'center' : 'space-around ' }}>\n                    {!logOrSingCard && <button\n                        className='opening-page-container-button'\n                        onClick={() => {\n\n                            setLogOrSingCard(true)\n                        }\n                        }>Get started</button>}\n                    {logOrSingCard &&\n                        <>\n                            <button\n                                className='opening-page-container-button'\n                                onClick={() => setLoginCard(true)}>Log in</button>\n                            <button\n                                className='opening-page-container-button'\n                                onClick={() => setSingCard(true)}>Sing</button>\n                        </>\n                    }\n                </div>\n            </div>\n            { loginCard && <Login\n                setLoginCard={setLoginCard}\n                setIsLoged={setIsLoged}\n            />}\n\n            { singCard && <Sign\n                setLoginCard={setSingCard}\n                setIsLoged={setIsLoged}\n            />}\n        </>\n    )\n}\n\nexport default OpeningPage;","import { useState } from 'react'\nimport Api from '../../api/Api'\nimport Input from '../input/Input'\n// import Selector from '../selector/Selector'\nimport './addSound.css'\nconst AddSound = ({ setAddSoundIsOpen, setSelectedSound }) => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [isFilePicked, setIsFilePicked] = useState(false);\n    const [fileName, setFileName] = useState('');\n    const [tagsValue, setTagsValue] = useState(null);\n    // const selectorOptions = ['red', 'blue', 'green', 'yellow', 'ligth-blue', 'purpule']\n    // const [selectValue, setSelectVal] = useState(selectorOptions[0]);\n\n    const [userMessage, setUserMessage] = useState(null);\n    const [buttonText, setButtonText] = useState('Submit');\n\n\n    const getFileFromUser = (event) => {\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0])\n            setSelectedFile(reader);\n            setIsFilePicked(true);\n\n            if (event.target.files[0].name.match(/\\.wav$/)) {\n                setFileName(event.target.files[0].name.split('.wav')[0])\n            }\n            if (event.target.files[0].name.match(/\\.mp3$/)) {\n                setFileName(event.target.files[0].name.split('.mp3')[0])\n            }\n\n            setButtonText('Submit')\n        } else {\n            setIsFilePicked(false);\n        }\n    }\n    const handleSubmission = async () => {\n        if (!tagsValue) {\n            setUserMessage('File must have at least one tag')\n            setButtonText('Try Again')\n        } else {\n            if (isFilePicked) {\n                const token = localStorage.getItem('token')\n                // console.log(token)\n                const file = await selectedFile.result.split('data:audio/wav;base64,').join('')\n                try {\n                    const data = await Api.post('sounds', {\n                        name: fileName,\n                        audio: file,\n                        tags: tagsValue\n                    }, {\n                        headers: {\n                            \"Authorization\": `Bearer ${token}`\n                        }\n                    })\n\n                    setUserMessage('Succeeded')\n                    // setTimeout(() => {\n                    setUserMessage('')\n                    // }, 2000);\n                    setSelectedFile(null)\n                    setIsFilePicked(null)\n                    setFileName('')\n                    setTagsValue(null)\n                    console.log(data.data.name)\n                    setSelectedSound({\n                        name: data.data.name,\n                        id: data.data._id,\n                        audio: data.data.audio\n                    })\n                    setAddSoundIsOpen(false)\n                } catch (e) {\n                    setUserMessage('File name must be unique!')\n                    setButtonText('Try Again')\n                }\n            }\n        }\n    };\n\n    return (\n        <>\n            <div className='add-sound-top'>\n                <div className='add-sound-container'>\n                    <div className='add-sound-exit'\n                        onClick={() => setAddSoundIsOpen(false)}\n                    >\n                        X\n                    </div>\n                    <h2\n                        className='add-sound-container-h2'\n                    >Upload new sound</h2>\n                    <br className='add-sound-br'></br>\n                    <h3\n                        className='add-sound-container-h3'\n                    >Insert sound name</h3>\n                    <p\n                        className='add-sound-container-p'\n                    >Must be unique (auto fill when upload file)</p>\n                    <Input\n                        className={'add-sound-input'}\n                        value={fileName}\n                        onChange={(e) => setFileName(e.target.value)}\n                    />\n                    <br className='add-sound-br'></br>\n                    <h3\n                        className='add-sound-container-h3'\n                    >Insert sound tags</h3>\n                    <p\n                        className='add-sound-container-p'\n                    >A space must be left between each tag</p>\n                    <Input\n                        className={'add-sound-input'}\n                        value={tagsValue ? tagsValue.join(' ') : ''}\n                        onChange={(e) => setTagsValue(e.target.value.split(' '))}\n                    />\n                    <br className='add-sound-br'></br>\n                    {/* <div className='selector' >\n                    <div>\n                        <h3>Select color</h3>\n                        <p>That will be the button color</p>\n                    </div>\n                    <Selector\n                        className={'add-sound-input'}\n                        options={selectorOptions}\n                        value={selectValue}\n                        setValue={setSelectVal}\n                    />\n                </div>\n                <br></br> */}\n                    <label htmlFor=\"upload-sound\">Upload file</label>\n                    <div\n                        className='add-sound-button-div'>\n                        <input\n                            id='upload-sound'\n                            size=\"80\"\n                            type='file'\n                            accept='audio/mp3, audio/wav '\n                            onChange={getFileFromUser}\n                        />\n                        <div>\n                            {isFilePicked && <button\n                                className='add-sound-button'\n                                onClick={() => {\n                                    const newAudioTest = new Audio(`${selectedFile.result}`)\n                                    newAudioTest.play()\n                                }}\n                            >Test</button>}\n                            <button\n                                className='add-sound-button'\n                                type='button' onClick={handleSubmission}\n                            >{buttonText}</button>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div>\n                        {!userMessage && <br />}\n                        <p\n                            className='add-sound-container-p'\n                        >{userMessage}</p>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default AddSound;","const Selector = ({ value, options, setValue, className }) => {\n    const setOptions = () => {\n        return options.map(e => {\n            return <option key={e} id={e}>{e}</option>\n        })\n    }\n    return (\n        <select\n            className={className}\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n        >\n            {options && setOptions()}\n        </select>\n    )\n}\n\nexport default Selector;","import './searchSound.css'\nimport Selector from '../selector/Selector'\nimport { useEffect, useState } from 'react'\nimport Api from '../../api/Api'\nimport Input from '../input/Input'\n\n\nconst SearchSound = ({ setSearchSoundIsOpen, setSelected }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [isLoadingOnPage, setIsLoadingOnPage] = useState(false);\n\n    const [tagsOptions, setTagsOptions] = useState(null)\n    const [selectorVal, setSelectorVal] = useState(null)\n    // const [userMessage, setUserMessage] = useState('')\n\n    const [soundsList, setSoundsList] = useState([])\n    const [inputVal, setInputVal] = useState('')\n\n    const [selectedSound, setSelectedSound] = useState(null)\n    const [selectedSoundAudio, setSelectedSoundAudio] = useState(null)\n    const [selectedSoundAudioDetails, setSelectedSoundAudioDetails] = useState(null)\n\n\n\n    useEffect(() => {\n        const tagsRes = async () => {\n            try {\n                const tempRes = await Api.get('/sounds/tags')\n                setTagsOptions(await tempRes.data.sort())\n                // console.log(tempRes)\n                setSelectorVal(await tempRes.data[0])\n                setIsLoading(false)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        tagsRes()\n    }, [])\n\n\n    const handelSerchByTag = async () => {\n        setIsLoadingOnPage(true)\n        const tempSounds = await Api.get(`/sounds/tags/${selectorVal}`)\n        // console.log(tempSounds.data)\n        setSoundsList(tempSounds.data)\n        setIsLoadingOnPage(false)\n    }\n    const handelSerchByFreetext = async () => {\n        if (inputVal.length > 0) {\n            setIsLoadingOnPage(true)\n            const tempSounds = await Api.get(`/sounds/search/${inputVal}`)\n            // console.log(tempSounds)\n            // console.log(tempSounds.data)\n            setSoundsList(tempSounds.data)\n            setIsLoadingOnPage(false)\n        }\n    }\n    const handelSoundSelect = async (e) => {\n        if (selectedSound === e.target.id) {\n            setSelectedSound(null)\n        } else {\n            setIsLoadingOnPage(true)\n            setSelectedSound(e.target.id)\n            const res = await Api.get(`/sounds/${e.target.id}`)\n            const res2 = await res.data[0].audio\n            setSelectedSoundAudioDetails(await res.data[0])\n            setSelectedSoundAudio(new Audio(`data:audio/wav;base64,${res2}`))\n            setIsLoadingOnPage(false)\n        }\n    }\n    const playAudio = async () => {\n        setIsLoadingOnPage(true)\n        selectedSoundAudio.play()\n        // setSelectedSoundAudio(res2)\n        // const tempAudio = new Audio(res2)\n        // tempAudio.play()\n        setIsLoadingOnPage(false)\n    }\n\n    const setList = () => {\n        return soundsList.map((e, i) => {\n            return (\n                <div\n                    className='search-sound-result-container'\n                    key={`soundList-${i}`}\n                >\n                    <div\n                        onClick={(e) => handelSoundSelect(e)}\n                        id={e._id}\n\n                        className={`search-sound-file-sound ${selectedSound === e._id ? 'search-sound-file-sound-selected' : ''}`}\n                    >{e.name}\n                        <div style={{ display: 'flex' }}\n                            id={e._id}\n                        >\n                            <span>tags: </span>\n                            {e.tags.map((el, i) => {\n                                return <span\n                                    id={e._id}\n                                    style={{ marginLeft: '0.6rem' }}\n                                    key={`soundlist-tag-${i}`}>{el}</span>\n                            })\n                            }\n                        </div>\n                    </div>\n                    {selectedSound === e._id &&\n                        <button\n                            className='search-sound-button'\n                            style={{ color: 'var(--led-red)' }}\n                            onClick={() => playAudio()}\n                        >Test</button>}\n                </div>\n            )\n        })\n    }\n\n    return (\n        <>{isLoadingOnPage && <div className='search-sound-loading-on-page'></div>}\n            <div className='search-sound-top'>\n                <div className=\"search-sound-container\">\n                    {!isLoading && <>\n                        <div className='add-sound-exit'\n                            onClick={() => setSearchSoundIsOpen(false)}\n                        >X</div>\n                        <h2 className=\"search-sound-container-h2\">Search sound</h2>\n                        <div className='search-sound-button-div'>\n                            <h3 className=\"search-sound-container-h3\">Search by tag name:</h3>\n                            <Selector\n                                value={selectorVal}\n                                options={tagsOptions}\n                                setValue={setSelectorVal}\n                                className={'search-sound-selector'}\n                            />\n                            <button\n                                className='search-sound-button'\n                                onClick={() => handelSerchByTag()}\n                            >Search</button>\n                        </div>\n                        <div className='search-sound-button-div'>\n                            <h3 className=\"search-sound-container-h3\">Search by sound name:</h3>\n                            <Input\n                                className={'search-sound-input'}\n                                value={inputVal}\n                                onChange={(e) => setInputVal(e.target.value)}\n                            />\n                            <button\n                                className='search-sound-button'\n                                onClick={() => handelSerchByFreetext()}\n                            >Search</button>\n                        </div>\n                        <div className='search-sound-results'>\n                            {soundsList.length > 0 && setList()}\n                        </div>\n                        <button\n                            className='search-sound-button'\n                            onClick={() => {\n                                setSearchSoundIsOpen(false)\n                                setSelected(\n                                    {\n                                        name: selectedSoundAudioDetails.name,\n                                        id: selectedSoundAudioDetails._id,\n                                        audio: selectedSoundAudioDetails.audio\n\n                                    })\n                            }\n                            }\n                        >\n                            Submit\n                    </button>\n                    </>}\n                </div>\n            </div >\n        </>\n    )\n}\n\nexport default SearchSound;","import './create.css'\nimport AddSound from '../../components/addSound/AddSound'\nimport { useEffect, useState } from 'react'\nimport Selector from '../../components/selector/Selector'\nimport Api from '../../api/Api'\nimport SearchSound from '../../components/searchSound/SearchSound'\nimport Input from '../../components/input/Input'\n\nconst Create = () => {\n    const [addSoundIsOpen, setAddSoundIsOpen] = useState(false)\n    const [searchSoundIsOpen, setSearchSoundIsOpen] = useState(false)\n\n    const [fileIsSelected, setFileIsSelected] = useState(false)\n    const [selectedSound, setSelectedSound] = useState(null)\n    const [fileSelectedName, setFileSelectedName] = useState('')\n\n    const [arr, setArr] = useState(new Array(32).fill({ color: '' }))\n\n    const [selectorVal, setSelectorVal] = useState('purpule')\n    const selectorOps = ['ligth-blue', 'purpule', 'red', 'yellow', 'blue', 'green',];\n    const [collectionName, setCollectionName] = useState('')\n\n\n    useEffect(() => {\n        if (selectedSound) {\n            setFileSelectedName(selectedSound.name)\n        }\n    }, [selectedSound])\n\n\n    const padHandler = (e) => {\n        const index = e.target.id.replace('pad-num-', '')\n        if (fileIsSelected && selectedSound) {\n            const tempArr = arr;\n            tempArr[index] = {\n                ...tempArr[index],\n                id: selectedSound.id,\n                audio: selectedSound.audio,\n                name: selectedSound.name,\n                color: selectorVal\n            }\n            setFileIsSelected(false)\n            setArr(tempArr)\n        } else {\n            if (arr[index].id) {\n                const test = async () => {\n                    const audio = new Audio(`data:audio/mp3;base64,${arr[index].audio}`)\n                    await audio.play()\n                }\n                test()\n            }\n        }\n    }\n\n    const insertPads = (formIndex) => {\n        const tempMap = arr.filter((e, i) => {\n            return i >= formIndex && i < formIndex + 6\n        })\n        return <div className='pads-grid'>\n            {tempMap.map((e, i) => <div\n                className={`single-pad ${arr[formIndex + i].color}`}\n                key={`create-pad-${formIndex + i}`}\n                id={`pad-num-${formIndex + i}`}\n                onClick={padHandler}\n            ></div>)}\n        </div>\n    }\n\n    const saveCollection = async () => {\n        const tempArr = arr.filter(e => e.id)\n        if (tempArr.length === 24 && collectionName.length > 0) {\n            try {\n                const token = localStorage.getItem('token')\n                // console.log(token)\n                const tempArr2 = tempArr.map(e => {\n                    return { id: e.id, color: e.color }\n                })\n                console.log(tempArr2)\n                const save = await Api.post('/sound-collection', {\n                    name: collectionName,\n                    sounds: tempArr2\n                },\n                    {\n                        headers: {\n                            \"Authorization\": `Bearer ${token}`\n                        }\n                    }\n                )\n                console.log(save)\n            } catch (e) {\n                console.log('the name is in use choose a differnt collection name')\n            }\n        }\n    }\n    return (\n        <>\n            {searchSoundIsOpen && <SearchSound\n                setSearchSoundIsOpen={setSearchSoundIsOpen}\n                setSelected={setSelectedSound}\n            />}\n            {addSoundIsOpen && <AddSound\n                setAddSoundIsOpen={setAddSoundIsOpen}\n                setSelectedSound={setSelectedSound}\n            />}\n            <div className='create-container'>\n                <div className='create-nav'>\n                    <h2 className=' create-h2'>Fill the board with sound</h2>\n                    <div className='create-buttons-div'>\n                        <h3 className='create-h3'>Upload or choose other sound, than fill the pad board as your wish</h3>\n                    </div>\n                    <div className='create-buttons-div'>\n                        <button\n                            className='create-button'\n                            type='button'\n                            onClick={() => setAddSoundIsOpen(true)}\n                        >Upload sound</button>\n\n                        <button\n                            className='create-button'\n                            type='button'\n                            onClick={() => setSearchSoundIsOpen(true)}\n                        >Search sound</button>\n\n                    </div>\n\n                    <div\n                        className={`${fileIsSelected ? 'create-file-sound-selected' : ''} create-file-sound`}\n                        onClick={() => setFileIsSelected(!fileIsSelected)}\n                    ><span\n                        style={{ color: `var(--led-${selectorVal})` }}\n                    >SOUND: </span>{fileSelectedName}</div>\n\n                    <div className='create-buttons-div'>\n                        <h3\n                            className='create-h3'\n                        >Button color</h3>\n                        <Selector\n                            value={selectorVal}\n                            options={selectorOps}\n                            setValue={setSelectorVal}\n                            className={'create-selector'}\n                        />\n                    </div>\n                </div>\n\n\n\n                <div className='pads-container'>\n                    <div className='pads-container-san'>\n                        {insertPads(0)}\n                        {insertPads(7)}\n                        {insertPads(13)}\n                        {insertPads(19)}\n                    </div>\n                    <div\n                        style={{ display: 'flex', justifyContent: 'space-around', width: '100%', padding: '0 1rem' }}\n                    >\n                        <h3\n                            className='create-h3'\n                        >Collection Name:</h3>\n                        <Input\n                            className={\"create-selector-input\"}\n                            value={collectionName}\n                            onChange={(e) => setCollectionName(e.target.value)}\n                        />\n                        <button\n                            className='create-button'\n                            onClick={() => saveCollection()}\n\n                        >Save</button>\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}\nexport default Create;","import './horizontalRange.css'\nconst HorizontalRange = ({ value, setValue\n    , max, min }) => {\n    return (\n        <div style={{ padding: '0.3rem 1rem', background: 'none', width: '50%' }}>\n            <input\n                min={min}\n                max={max}\n                type='range'\n                value={value}\n                onChange={setValue}\n            ></input>\n        </div>\n\n    )\n}\n\nexport default HorizontalRange;","import { useEffect, useState } from 'react'\n\nconst BeatBox = ({ boxTiming, id, thisClass, padIndex, currentColor, rythemArr, setMyRythemArr }) => {\n    const [boxIsPressed, setBoxIsPressed] = useState(null)\n\n    useEffect(() => {\n        setBoxIsPressed(rythemArr[id - 1])\n    }, [rythemArr, id, padIndex])\n    return (\n        <div\n            className={`${thisClass} ${boxTiming === id && !boxIsPressed ? 'play-mode-boxIsOn' : ''}\n            ${boxIsPressed && boxTiming !== id && `${currentColor} empty-center-of-box`}\n            ${boxIsPressed && boxTiming === id && currentColor}\n            `}\n            onMouseDown={() => {\n                const tempArr = [...rythemArr]\n                if (!boxIsPressed) {\n                    tempArr[32] = tempArr[32] === false ? 1 : tempArr[32] + 1\n                } else {\n                    tempArr[32] = tempArr[32] === 1 ? false : tempArr[32] - 1\n                }\n                setBoxIsPressed(!boxIsPressed)\n                tempArr[id - 1] = !tempArr[id - 1]\n                setMyRythemArr(tempArr, padIndex)\n            }}\n        >\n\n        </div>\n    )\n}\n\nexport default BeatBox;","import { useEffect, useState } from \"react\"\nimport { decode } from 'base64-arraybuffer'\nconst PadBox = (\n    { id,\n        thisClass,\n        padIndex,\n        setPadIndex,\n        so,\n        boxTiming,\n        rythemObj,\n        setCurrentColor,\n        padsStatus,\n        setMyPadsStatus,\n        ctx,\n        gain\n    }) => {\n\n    const [offSet1, setOffSet1] = useState(0)\n\n    useEffect(() => {\n        if (padsStatus && rythemObj[boxTiming - 1] === true) {\n            const getFile = async (filePath) => {\n                const arrayBuffer = decode(filePath)\n                const audioBuffer = await ctx.decodeAudioData(arrayBuffer)\n                return audioBuffer;\n            }\n            const playClip = async (clip, outPut) => {\n                if (ctx.state === 'suspended') {\n                    ctx.resume()\n                }\n                const clipAudioBuffer = await getFile(clip)\n                const myGain = await ctx.createGain()\n                myGain.gain.value = so.gain\n                myGain.connect(outPut)\n\n                let biquadFilter = await ctx.createBiquadFilter();\n                biquadFilter.frequency.value = so.frequency\n                biquadFilter.detune.value = so.detune\n                // biquadFilter.detune.value = 0\n                biquadFilter.type = so.type\n                biquadFilter.connect(myGain)\n                // biquadFilter.type = 'lowpass'\n\n                const clipSource = ctx.createBufferSource()\n                clipSource.buffer = clipAudioBuffer;\n                clipSource.connect(biquadFilter);\n\n                // console.log(clipSource)\n                if (offSet1 === 0) {\n                    clipSource.start()\n                    // console.log(ctx.currentTime - offSet)\n                    // console.log(myGain)\n                    setOffSet1(0)\n                } else {\n                    clipSource.start(0, ctx.currentTime - offSet1)\n                }\n            }\n            playClip(so.myAudio, gain)\n\n        }\n\n    }, [boxTiming, rythemObj, id, so, padsStatus, padIndex, gain, offSet1, ctx])\n\n\n\n\n\n    const userClick = () => {\n        setPadIndex(id)\n        const somethingInOn = rythemObj.find(e => e === true)\n        if (somethingInOn && padIndex === id) {\n            setMyPadsStatus(padIndex, !padsStatus)\n        }\n        setCurrentColor(so.color)\n    }\n\n    const setIcon = () => {\n        if (rythemObj[32]) {\n            if (padsStatus) {\n                return <i className=\"fas fa-undo fa-1x\"></i>\n            }\n            return <i className=\"fas fa-pause fa-1x\"></i>\n        }\n        return ''\n    }\n\n\n\n    return (\n        <>\n            <div\n                className={`${thisClass} \n            ${so.color}\n            ${padIndex === id ? `buttonOn` : 'buttonOff'}\n            ${padsStatus && rythemObj[boxTiming - 1] === true ? `play-mode-boxIsOn` : 'buttonOff'}`\n                }\n                onMouseDown={userClick}\n            >\n                <div className='play-mode-pad-icon'>{setIcon()}</div>\n\n            </div >\n        </>\n    )\n}\n\nexport default PadBox;","import React, { useEffect, useState } from 'react';\nimport HorizontalRange from '../../components/horizontalRange/HorizontalRange'\nimport ReactInterval from 'react-interval';\nimport './playModePage.css'\nimport BeatBox from '../../components/beatBox/BeatBox'\nimport PadBox from '../../components/‏‏padBox/padBox'\n\n// import Sounds2 from '../../components/‏‏sounds/Sounds'\n\n\nconst PlayModePage = ({\n    ctx,\n    sounds,\n    setSounds,\n    gainNode,\n    biquadFilter\n}) => {\n    const [isLoading, setIsLoading] = useState(false)\n\n    const [bpm, setBpm] = useState(120)\n    const [realBpm, setRealBpm] = useState(120)\n    const [enabled, setEnabled] = useState(false)\n    const [beat, setBeat] = useState(0)\n    const [sequencerBeat, setSequencerBeat] = useState(0)\n    const [restart, setRestart] = useState(false)\n\n    const [rythemObj, setRythemObj] = useState({})\n    const [padIndex, setPadIndex] = useState(1)\n    const [currentColor, setCurrentColor] = useState('ligth-blue');\n\n    //---Is Loading------///\n    useEffect(() => {\n        if (sounds) {\n            setIsLoading(false)\n        } else {\n            setIsLoading(true)\n        }\n    }, [sounds])\n\n\n    //====AudioApi=====///\n    const [gain, setGain] = useState(0.75)\n    const [frequency, setFrequency] = useState(350)\n\n    useEffect(() => {\n        if (gainNode) {\n            gainNode.gain.value = gain\n        }\n        if (biquadFilter) {\n            biquadFilter.frequency.value = frequency\n            biquadFilter.type = 'notch'\n        }\n    }, [gainNode, gain, biquadFilter, frequency])\n\n    const setGainInSoundsObject = (e, type) => {\n        const tempSounds = [...sounds]\n        if (type === 'gain') {\n            tempSounds[padIndex - 1][type] = e.target.value / 100\n        } else if (type === 'type') {\n            tempSounds[padIndex - 1][type] = e.target.value\n        } else {\n            tempSounds[padIndex - 1][type] = e.target.value\n        }\n\n        setSounds(tempSounds)\n    }\n\n\n    //-----------\n    useEffect(() => {\n        let temp = {}\n        for (let i = 0; i < 24; i++) {\n            temp[i + 1] = new Array(33).fill(false)\n        }\n        temp.padsStatus = new Array(24).fill(true)\n        setRythemObj(temp)\n        // setSounds(Sounds2().map(e => {\n        //     return { ...e, gain: 0.75, frequency: 300 }\n        // }))\n    }, [restart, setSounds])\n\n    useEffect(() => {\n        setTimeout(() => {\n            setRealBpm(bpm)\n        }, 1000)\n    }, [bpm])\n\n    const setMyRythemObj = (arr, index) => {\n        const tempObj = { ...rythemObj, [index]: arr }\n        setRythemObj({ ...tempObj })\n    }\n    const setMyPadsStatus = (pad, bool) => {\n        const tempArr = [...rythemObj.padsStatus]\n        tempArr[pad - 1] = bool\n        const tempObj = { ...rythemObj, padsStatus: tempArr }\n        setRythemObj({ ...tempObj })\n    }\n\n\n    const insertDivs = (rowLength, girdClass, singleClass, fromNum) => {\n        const tempMap = new Array(rowLength).fill(1)\n        const temp = <div className={girdClass}>\n            {tempMap.map((e, i) => {\n                if (singleClass === 'play-mode-single-sequencer') {\n                    return (\n                        <BeatBox\n                            key={`${singleClass}${fromNum + i}`}\n                            thisClass={singleClass}\n                            boxTiming={sequencerBeat}\n                            id={fromNum + i}\n                            padIndex={padIndex}\n                            currentColor={currentColor}\n                            rythemArr={rythemObj[`${padIndex}`]}\n                            setMyRythemArr={setMyRythemObj}\n                        />\n                    )\n                } else {\n                    return (\n                        <PadBox\n                            key={`${singleClass}${fromNum + i}`}\n                            thisClass={singleClass}\n                            id={fromNum + i}\n                            padIndex={padIndex}\n                            setPadIndex={setPadIndex}\n                            boxTiming={sequencerBeat}\n                            rythemObj={rythemObj[`${fromNum + i}`]}\n                            setCurrentColor={setCurrentColor}\n                            padsStatus={rythemObj.padsStatus[fromNum + i - 1]}\n                            setMyPadsStatus={setMyPadsStatus}\n\n                            ctx={ctx}\n                            gain={biquadFilter}\n                            so={sounds[fromNum + i - 1]}\n                        />\n                    )\n                }\n            })}\n        </div>\n        return temp\n    }\n    const start = () => {\n        if (enabled) {\n            setBeat(0)\n            setSequencerBeat(0)\n        }\n        setEnabled(!enabled)\n    }\n    const stop = () => {\n        setRestart(!restart)\n        start()\n    }\n\n    return (\n        <>\n            {isLoading && <h1 style={{ color: 'white' }}>Loading Spinner</h1>}\n            {!isLoading && <>\n                <ReactInterval timeout={60000 / realBpm / 4} enabled={enabled}\n                    callback={() => {\n                        setBeat((beat + 1))\n                        setSequencerBeat(sequencerBeat < 32 ? sequencerBeat + 1 : 1)\n                    }}\n                />\n                {sounds && ctx &&\n                    <div className='play-mode-container'>\n                        <div className='play-mode-sequencer-container'>\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 1)}\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 9)}\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 17)}\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 25)}\n                    BPM {bpm}\n                            <HorizontalRange\n                                value={bpm}\n                                setValue={(e) => { setBpm(e.target.value) }}\n                                max={'220'}\n                                min={'60'} />\n                            <HorizontalRange\n                                value={gain * 100} setValue={(e) => {\n                                    setGain(e.target.value / 100)\n                                }}\n                                max={'100'}\n                                min={'0'}\n                            />\n                                Gain {gain}\n                            <HorizontalRange\n                                value={frequency} setValue={(e) => {\n                                    setFrequency(e.target.value)\n                                }}\n                                max={'4000'}\n                                min={'0'}\n                            />\n                            frequency {frequency}\n                            <br />\n                            {sequencerBeat}\n                        </div>\n                        <div className='play-mode-pads-container'>\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 1)}\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 7)}\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 13)}\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 19)}\n                            {beat}\n                            <div style={{ display: 'flex', background: 'none' }}>\n                                <HorizontalRange\n                                    value={sounds[padIndex - 1].gain * 100} setValue={(e) => {\n                                        setGainInSoundsObject(e, 'gain')\n                                        // setGain(e.target.value / 100)\n                                    }}\n                                    max={'100'}\n                                    min={'0'}\n                                />\n                                <HorizontalRange\n                                    value={sounds[padIndex - 1].frequency} setValue={(e) => {\n                                        setGainInSoundsObject(e, 'frequency')\n                                    }}\n                                    max={'2000'}\n                                    min={'0'}\n                                />\n                                <HorizontalRange\n                                    value={sounds[padIndex - 1].detune} setValue={(e) => {\n                                        setGainInSoundsObject(e, 'detune')\n                                    }}\n                                    max={'4000'}\n                                    min={'-4000'}\n                                />\n                                <div >\n                                    <select\n\n                                        value={sounds[padIndex - 1].type}\n                                        onChange={(e) => {\n                                            setGainInSoundsObject(e, 'type')\n                                        }}>\n                                        <option value='allpass'>Allpass</option>\n                                        <option value='lowpass'>Lowpass</option>\n                                        <option value='highpass'>Highpass</option>\n                                        <option value='bandpass'>Bandpass</option>\n                                        <option value='lowshelf'>Lowshelf</option>\n                                        <option value='highshelf'>Highshelf</option>\n                                        <option value='peaking'>Peaking</option>\n                                        <option value='notch'>Notch</option>\n                                    </select>\n\n                                    <button\n                                        onClick={() => start()}>Start</button>\n                                    <button onClick={() => stop()}>Clear</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div >}\n            </>}\n        </>\n    )\n}\n\nexport default PlayModePage;","import PlayModePage from './PlayModePage'\nimport { useState, useEffect } from 'react'\n// import Sounds2 from '../../components/‏‏sounds/Sounds'\n\nimport axios from 'axios'\nimport Api from '../../api/Api'\nimport { Redirect } from 'react-router-dom'\n\n\nconst App = ({ consoleIsOpen, setConsoleIsOpen, currentCollection }) => {\n    const [isOn, setIsOn] = useState(consoleIsOpen)\n    const [ctx, setCtx] = useState(null)\n    const [gainNode, setGainNode] = useState(null)\n    const [biquadFilter, setBiquadFilter] = useState(null)\n    const [sounds, setSounds] = useState(null)\n\n\n\n\n    useEffect(() => {\n        if (currentCollection) {\n\n            if (isOn)\n                setCtx(new AudioContext())\n\n            const tempEffectsArr = new Array(24).fill({\n                frequency: 350,\n                detune: 0,\n                type: 'notch',\n                gain: 0.75\n            })\n            //fetch sounds \n            const fetchSounds = async () => {\n                const arrRes = await Api.get(`/sound-collection/${currentCollection}`)\n                const arrData = arrRes.data[0].sounds\n                const arrDataLinks = arrData.map(async (e) => {\n                    return await Api.get(`/sounds/${e.id}`)\n                })\n\n\n\n                let arrDataSounds = null;\n                await axios.all(arrDataLinks)\n                    .then(axios.spread((...responses) => {\n                        let tempArr = [];\n                        for (let i = 0; i < 24; i++) {\n                            tempArr.push({\n                                myAudio: responses[i].data[0].audio,\n                                color: arrData[i].color,\n                                ...tempEffectsArr[i]\n                            })\n                        }\n                        arrDataSounds = tempArr\n                    })).catch(errors => {\n                    })\n                //------------------------\n                // console.log(arrDataSounds)\n                console.log(arrRes)\n                // return arrDataSounds\n                setSounds(arrDataSounds)\n            }\n\n            fetchSounds()\n\n        } else {\n            setConsoleIsOpen(false)\n        }\n        // console.log(Sounds2())\n        // setSounds(fetchSounds())\n        // setSounds(Sounds2())\n    }, [isOn, currentCollection, setConsoleIsOpen])\n\n\n\n    useEffect(() => {\n\n        if (ctx && !gainNode) {\n            setGainNode(ctx.createGain())\n            setBiquadFilter(ctx.createBiquadFilter())\n        }\n    }, [ctx, gainNode])\n\n    useEffect(() => {\n        if (gainNode) {\n            gainNode.connect(ctx.destination)\n            // setRecord(new Recorder(gainNode))\n        }\n        if (biquadFilter) {\n            biquadFilter.connect(gainNode)\n        }\n    }, [gainNode, ctx, biquadFilter,])\n\n    return (\n        <>\n            {!currentCollection && <Redirect to='/'></Redirect >}\n            {/* {console.log(isLoading)} */}\n\n            {currentCollection &&\n                <>\n                    <button\n                        onClick={() => {\n                            if (!isOn) {\n                                setIsOn(true)\n                            } else {\n                                setCtx(null)\n                                setIsOn(false)\n                                setGainNode(null)\n                                setBiquadFilter(null)\n                                setSounds(null)\n                            }\n                        }\n                        }\n                    >get ctx</button>\n                    <PlayModePage\n                        ctx={ctx}\n                        sounds={sounds}\n                        setSounds={setSounds}\n                        gainNode={gainNode}\n                        biquadFilter={biquadFilter}\n                    />\n                </>}\n        </>\n    );\n}\n\nexport default App;\n\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from '../pages/home/Home'\nimport Navbar from '../components/navbar/Navbar'\nimport OpeningPage from '../pages/openingPage/OpeningPage'\nimport Create from '../pages/create/Create'\nimport StarterPlayModePage from '../pages/‏‏playModePage/StarterPlayModePage'\n\n\nconst App = () => {\n\n\n  const [consoleIsOpen, setConsoleIsOpen] = useState(false)\n\n  const [currentCollection, setCurrentCollection] = useState(null)\n\n  const [isLoged, setIsLoged] = useState(false)\n  const [userName, setUserName] = useState(null)\n  useEffect(() => {\n    if (localStorage.token) {\n      setIsLoged(true)\n      setUserName(localStorage.getItem('name'))\n    }\n  }, [isLoged])\n\n  return (\n    <>\n      <>\n        {!isLoged && <OpeningPage setIsLoged={setIsLoged} />}\n        <BrowserRouter>\n          {isLoged && <>\n            {!consoleIsOpen && <Navbar userName={userName} />}\n            <Route path=\"/\" exact\n              component={() =>\n                <Home\n                  setConsoleIsOpen={setConsoleIsOpen}\n                  consoleIsOpen={consoleIsOpen}\n                  setCurrentCollection={setCurrentCollection}\n                />\n              }\n            >\n            </Route>\n            < Route path=\"/home\" exact component={() =>\n              <Home\n                setConsoleIsOpen={setConsoleIsOpen}\n                consoleIsOpen={consoleIsOpen}\n                setCurrentCollection={setCurrentCollection}\n              />\n            }\n            />\n            < Route path=\"/create\" exact component={() =>\n              <Create />\n            }\n            />\n            < Route path=\"/console\" exact component={() =>\n              <StarterPlayModePage\n                consoleIsOpen={consoleIsOpen}\n                setConsoleIsOpen={setConsoleIsOpen}\n                currentCollection={currentCollection}\n              />\n            }\n            />\n          </>}\n        </BrowserRouter>\n      </>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}