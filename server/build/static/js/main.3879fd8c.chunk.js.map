{"version":3,"sources":["api/Api.js","img/openBackgound.jpg","components/spinner/Spinner.js","pages/home/choosePattern/ChoosePattern.js","pages/home/Home.js","components/navbar/Navbar.js","components/input/Input.js","components/login/Login.js","components/sign/sign.js","pages/openingPage/OpeningPage.js","components/addSound/AddSound.js","components/selector/Selector.js","components/searchSound/SearchSound.js","pages/create/Create.js","components/horizontalRange/HorizontalRange.js","components/beatBox/BeatBox.js","components/‏‏padBox/padBox.js","pages/‏‏playModePage/PlayModePage.js","pages/‏‏playModePage/StarterPlayModePage.js","components/App.js","reportWebVitals.js","index.js"],"names":["url","api","axios","create","baseURL","Spinner","messege","messege2","style","display","flexDirection","alignItems","justifyContent","height","marginBottom","className","marginTop","ChoosePattern","setChoosePatternMenuIsOpen","tempCurrentCollection","setCurrentCollection","setIsOn","useState","isLoading","setIsLoading","setIsPageActive","patternOps","setPatternOps","current","setCurrent","useEffect","a","Api","get","tempRes","data","patterns","console","log","patternRes","to","onClick","length","map","e","i","target","id","_id","name","marginLeft","userName","Home","setConsoleIsOpen","consoleIsOpen","collectionsNames","setCollectionsNames","choosePatternMenuIsOpen","setTempCurrentCollection","getCollectionsName","res","src","homePageSectionImage","alt","ownerName","Navbar","openCloseLogMenu","userlog","userDetails","isNavOpen","setIsNavOpen","fontSize","maxHeight","Input","type","onChange","value","Login","setIsloginCardOpen","setIsUserLogedIn","password","setPassword","email","setEmail","showMessage","setShowMessage","isCancelActive","setIsCancelActive","handleSubmission","post","toString","localStorage","setItem","user","token","setTimeout","split","Sign","setIsSingCardOpen","passwordConfirm","setPasswordConfirm","setUserName","message","setMessage","clear","OpeningPage","logOrSingCard","setLogOrSingCard","isSingCardOpen","isloginCardOpen","width","AddSound","setAddSoundIsOpen","setSelectedSound","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","fileName","setFileName","tagsValue","setTagsValue","userMessage","setUserMessage","buttonText","setButtonText","getItem","result","join","file","audio","tags","headers","htmlFor","size","accept","event","reader","FileReader","files","readAsDataURL","match","Audio","play","Selector","options","setValue","SearchSound","setSearchSoundIsOpen","setSelected","isLoadingOnPage","setIsLoadingOnPage","tagsOptions","setTagsOptions","selectorVal","setSelectorVal","soundsList","setSoundsList","inputVal","setInputVal","selectedSound","selectedSoundAudio","setSelectedSoundAudio","selectedSoundAudioDetails","setSelectedSoundAudioDetails","sort","tagsRes","handelSerchByTag","tempSounds","handelSerchByFreetext","handelSoundSelect","res2","playAudio","el","color","Create","addSoundIsOpen","searchSoundIsOpen","fileIsSelected","setFileIsSelected","fileSelectedName","setFileSelectedName","Array","fill","arr","setArr","collectionName","setCollectionName","padHandler","index","replace","tempArr","test","insertPads","formIndex","tempMap","filter","saveCollection","tempArr2","sounds","save","padding","HorizontalRange","max","min","background","BeatBox","boxTiming","thisClass","padIndex","currentColor","rythemArr","setMyRythemArr","boxIsPressed","setBoxIsPressed","onMouseDown","PadBox","setPadIndex","so","rythemObj","setCurrentColor","padsStatus","setMyPadsStatus","ctx","gain","offSet1","setOffSet1","getFile","filePath","arrayBuffer","decode","decodeAudioData","audioBuffer","clip","outPut","state","resume","clipAudioBuffer","createGain","myGain","connect","createBiquadFilter","biquadFilter","frequency","detune","clipSource","createBufferSource","buffer","start","currentTime","playClip","myAudio","find","PlayModePage","setSounds","gainNode","bpm","setBpm","realBpm","setRealBpm","enabled","setEnabled","beat","setBeat","sequencerBeat","setSequencerBeat","restart","setRestart","setRythemObj","setGain","setFrequency","setGainInSoundsObject","temp","setMyRythemObj","tempObj","pad","bool","insertDivs","rowLength","girdClass","singleClass","fromNum","timeout","callback","App","currentCollection","isOn","setCtx","setGainNode","setBiquadFilter","AudioContext","tempEffectsArr","arrRes","arrData","arrDataLinks","arrDataSounds","all","then","spread","responses","push","catch","errors","fetchSounds","destination","isUserLogedIn","path","exact","component","StarterPlayModePage","setcurrentCollection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3879fd8c.chunk.js","sourcesContent":["import axios from 'axios';\n\nlet url;\nif (process.env.NODE_ENV === 'development') {\n    url = 'http://localhost:5000/api'\n}\nif (process.env.NODE_ENV === 'production') {\n    url = 'api'\n}\nconst api = axios.create({\n    baseURL: url,\n})\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/openBackgound.68c73abe.jpg\";","import './spinner.css'\r\nconst Spinner = ({ messege = '', messege2 = '' }) => {\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: \"column\", alignItems: 'center', justifyContent: \"center\", height: '100vh' }}>\r\n            <div style={{ marginBottom: '2.5rem' }} className='glow-card-h2 font-red-shadow-red'>{messege}</div>\r\n            <div className=\"loader\">\r\n                <span className=\"loader-span\"></span>\r\n                <span className=\"loader-span\"></span>\r\n                <span className=\"loader-span\"></span>\r\n                <span className=\"loader-span\"></span>\r\n            </div>\r\n            <div style={{ marginTop: '2.5rem' }} className='glow-card-h2 font-red-shadow-red'>{messege2}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner;\r\n","import './choosePattern.css'\r\nimport { useEffect, useState } from 'react'\r\nimport Api from '../../../api/Api'\r\nimport { Link } from 'react-router-dom'\r\nimport Spinner from '../../../components/spinner/Spinner'\r\n\r\nconst ChoosePattern = ({ setChoosePatternMenuIsOpen, tempCurrentCollection, setCurrentCollection, setIsOn }) => {\r\n    // Is the component loading.\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    // Is the page events are currently active.\r\n    const [isPageActive, setIsPageActive] = useState(true);\r\n    //Sounds pattern Object\r\n    //@Object - id: String , userName: String, patternOwner: String, name(pattern name): String\r\n    const [patternOps, setPatternOps] = useState(null)\r\n\r\n    const [current, setCurrent] = useState(null)\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsPageActive(false);\r\n        const patternRes = async () => {\r\n            try {\r\n                const tempRes = await Api.get(`/patterns/all/${tempCurrentCollection}`)\r\n                // setTagsOptions(await tempRes.data.sort())\r\n                setPatternOps(tempRes.data[0].patterns ? tempRes.data[0].patterns : [])\r\n                // setSelectorVal(await tempRes.data[0])\r\n                setIsLoading(false);\r\n            } catch (e) {\r\n                //Print the error to the Inspect.\r\n                setPatternOps([])\r\n                console.log(e);\r\n            }\r\n\r\n        };\r\n        // Invoke @patternRes.\r\n        patternRes();\r\n        setIsPageActive(true)\r\n    }, [tempCurrentCollection])\r\n\r\n    // Mapping the patternOps object\r\n    // @ return pattern options elements\r\n    const setList = () => {\r\n        if (patternOps.length > 0) {\r\n            return patternOps.map((e, i) => {\r\n                return (\r\n                    <div\r\n                        onClick={(e) => {\r\n                            if (current === e.target.id) {\r\n                                setCurrent(null)\r\n                            } else {\r\n                                setCurrent(e.target.id)\r\n                            }\r\n                        }}\r\n                        id={e._id}\r\n                        key={`patternOps-${i}`}\r\n                        className='align-center flex'\r\n                    >\r\n                        <div\r\n                            id={e._id}\r\n                            className={`search-sound-file-sound ${current === e._id ? 'search-sound-file-sound-selected' : ''}`}\r\n                        >\r\n                            <div\r\n                                className='flex glow-card-h3'\r\n                                id={e._id}\r\n                            >{e.name}</div>\r\n                            <div\r\n                                className='flex glow-card-h3'\r\n                                id={e._id}>\r\n                                <span\r\n                                    id={e._id}\r\n                                >by:\r\n                                    <span\r\n                                        id={e._id}\r\n                                        style={{ marginLeft: '0.3rem' }}\r\n                                        key={`soundlist-tag-${i}`}>{e.userName}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                )\r\n            })\r\n        } else {\r\n            return <div className='font-white-shadow-green glow-card-h4 margin-left-05r'>No Pattern found</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* {!isPageActive && <div className='glow-card-background'></div>} */}\r\n            <div className='glow-card-background'>\r\n                <div className=\"glow-card-container choose-pattern-container-height\">\r\n                    {isLoading && <Spinner\r\n                        messege='Loading patterns please wait a bit.'\r\n                        messege2='Thenks...'\r\n                    />}\r\n                    {!isLoading && <>\r\n                        <Link to='/'>\r\n                            <div className='exit-button'\r\n                                onClick={() => setChoosePatternMenuIsOpen(false)}\r\n                            >\r\n                                X</div>\r\n                        </Link>\r\n                        <div className=\"glow-card-h2 font-red-shadow-red\">Choose Pattern :</div>\r\n                        <div className=\"glow-card-h3 font-orange-shadow-red\">- Highlight by click the pattern name you want and press submit to open the console.  </div>\r\n                        <div className=\"glow-card-h3 font-orange-shadow-red\">- Wanna start from with no pattern? just press submit and start play.</div>\r\n                        <div className='search-sound-results'>\r\n                            {patternOps && setList()}\r\n                        </div>\r\n                        <button\r\n                            className='glow-card-button'\r\n                            onClick={() => {\r\n                                setChoosePatternMenuIsOpen(false)\r\n                                setCurrentCollection(current ? current : 'empty')\r\n                                // setIsOn(true)\r\n                            }\r\n                            }\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </>}\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChoosePattern;","import React from \"react\";\nimport { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\nimport Api from '../../api/Api'\n\nimport './home.css';\nimport homePageSectionImage from '../../img/openBackgound.jpg';\nimport ChoosePattern from \"./choosePattern/ChoosePattern\";\n\nconst Home = ({ setConsoleIsOpen, setCurrentCollection, consoleIsOpen }) => {\n    // Loding spinner bool\n    // const [isLoading, setIsLoading] = useState(true);\n\n    // Sounds collection neme\n    const [collectionsNames, setCollectionsNames] = useState(null)\n\n    const [choosePatternMenuIsOpen, setChoosePatternMenuIsOpen] = useState(false);\n    // The collection that have choose to start befor the user choose collection pattern.\n    const [tempCurrentCollection, setTempCurrentCollection] = useState(null);\n\n    useEffect(() => {\n        // At the begining load get the collections name and save them in the state.\n        getCollectionsName();\n        // Check if the App.js consoleIsOpen state is true and if it dose set it to false.\n        if (consoleIsOpen) {\n            setConsoleIsOpen(false)\n        }\n    }, [consoleIsOpen, setConsoleIsOpen])\n\n    // Send get request and set the results in the collectionName state\n    const getCollectionsName = async () => {\n        const res = await Api.get('/sound-collection')\n        setCollectionsNames(res.data)\n    }\n\n    // Set the App.js state consoleIsOpen to true\n    const openConsole = () => {\n        setConsoleIsOpen(true)\n    }\n\n    // Map over all the collections from the state collectionName and return section for each collection.\n    // @return - section for each collection\n    const insetCollectionsNames = () => {\n        return collectionsNames.map((e, i) => {\n            return <section className='home-section' key={`collection${i}`}\n                onClick={() => {\n                    // Set the App.js currentCollection to the choosen collection id\n                    // setCurrentCollection(e._id);\n                    // openConsole()\n                    setTempCurrentCollection(e._id);\n                    setChoosePatternMenuIsOpen(true);\n                }}\n            >\n                {/* <Link\n                    to={'/console'}\n                > */}\n                <figure className='home-figure-img'>\n                    <img src={homePageSectionImage} alt='fasd' className='home-img' />\n                </figure>\n                <figure className='home-figure-text'>\n                    <article className='home-article'>\n                        <span className='home-span'>{e.ownerName}</span>\n                        <h3 className='home-h3'>{e.name}</h3>\n                    </article>\n                </figure>\n                {/* </Link> */}\n            </section >\n        })\n    }\n    return (\n        <div>\n            <div className='home-main'>\n                {/* Check if collectionName state is initilaized and if it dose invoke the insertCollectionsName func */}\n                {collectionsNames && insetCollectionsNames()}\n                {choosePatternMenuIsOpen && tempCurrentCollection && <ChoosePattern\n                    tempCurrentCollection={tempCurrentCollection}\n                    setChoosePatternMenuIsOpen={setChoosePatternMenuIsOpen}\n                    setCurrentCollection={setCurrentCollection}\n                />}\n            </div>\n        </div>\n    )\n}\nexport default Home;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './navbar.css';\n\n\nconst Navbar = ({ openCloseLogMenu, userlog, userDetails }) => {\n    const [isNavOpen, setIsNavOpen] = useState(false);\n\n    const menuOpen = () => {\n        if (isNavOpen) {\n            return '300px'\n        } else {\n            return '0'\n        }\n    }\n\n\n    return (\n\n        <div className=\"my-nav\" style={{ fontSize: '17px' }}>\n            <Link to='/' className=\"menu-logo\">\n                A Beat Mor\n            </Link>\n            <div className=\"hamburger\" onClick={() => { setIsNavOpen(!isNavOpen) }}>\n                {/* nav here */}\n                dads\n            </div>\n            <div className=\"nav-menu\" style={{ maxHeight: menuOpen() }}>\n                <Link to='/search' className=\"menu-link\">Search</Link>\n                <Link to='/create' className=\"menu-link\">Create</Link>\n                <Link to={`/`} className=\"menu-link\">Home</Link>\n            </div>\n        </div >\n    )\n}\n\nexport default Navbar;","const Input = ({ type, onChange, value, className }) => {\n    return (\n        <input\n            className={className} onChange={onChange} value={value}></input>\n    )\n}\n\nexport default Input;","import { useState } from 'react';\nimport Input from '../input/Input'\nimport Api from '../../api/Api'\n\nconst Login = ({ setIsloginCardOpen, setIsUserLogedIn }) => {\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [showMessage, setShowMessage] = useState(false);\n    const [isCancelActive, setIsCancelActive] = useState(true);\n\n\n    const handleSubmission = async () => {\n        try {\n            setIsCancelActive(false);\n            const res = await Api.post('/users/login', {\n                password: password.toString(),\n                email\n            });\n            localStorage.setItem('name', res.data.user.userName)\n            localStorage.setItem('token', res.data.token)\n            localStorage.setItem('id', res.data.user._id)\n            setIsloginCardOpen(false);\n            setIsUserLogedIn(true);\n        } catch (e) {\n            if (!showMessage) {\n                setShowMessage(true);\n                setTimeout(() => {\n                    setShowMessage(false)\n                    setIsCancelActive(true);\n                }, 2000)\n            }\n        }\n    }\n\n    return (\n        <div className='glow-card-background'>\n            <div className='glow-card-container'>\n                <h2\n                    className='glow-card-h1 font-red-shadow-red upprcase margin-top-1r'\n                >Welcome Back</h2>\n                <br></br>\n                <h3\n                    className='glow-card-h3 font-white-shadow-green margin-top-1r'\n                >Email</h3>\n                <Input\n                    className={'glow-card-input glow-card-h3'}\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <h3\n                    className='glow-card-h3 font-white-shadow-green  margin-top-1r'\n                >Password</h3>\n                <Input\n                    className={'glow-card-input glow-card-h3 '}\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value.split(' '))}\n                />\n                <div className='flex-space-between margin-top-2r'>\n                    <button\n                        className='glow-card-button '\n                        type='button' onClick={() => { handleSubmission() }}\n                    >Submit</button>\n                    <button\n                        className='glow-card-button'\n                        type='button' onClick={() => {\n                            isCancelActive && setIsloginCardOpen(false);\n\n                        }}\n                    >Cancel</button>\n                </div>\n                <br />\n                {!showMessage && < br />}\n                {showMessage && <h4 className='glow-card-h3'>Wrong input please try again</h4>}\n            </div>\n        </div >\n    )\n}\nexport default Login;\n// import { useState } from 'react';\n// import Input from '../input/Input'\n// import Api from '../../api/Api'\n// import './login.css'\n\n// const Login = ({ setLoginCard, setIsLoged }) => {\n//     const [password, setPassword] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [showMessage, setShowMessage] = useState(false);\n\n\n//     const handleSubmission = async () => {\n//         try {\n//             // console.log(password.toString())\n//             const res = await Api.post('/users/login', {\n//                 password: password.toString(),\n//                 email\n//             })\n//             localStorage.setItem('name', res.data.user.userName)\n//             localStorage.setItem('token', res.data.token)\n//             setIsLoged(true)\n//             setLoginCard(false)\n//             // console.log(localStorage.getItem('name'))\n//             // console.log(localStorage.getItem('token'))\n//         } catch (e) {\n//             setShowMessage(true)\n//             setTimeout(() => {\n//                 setShowMessage(false)\n//             }, 2000)\n//         }\n//     }\n\n\n//     return (\n//         <div className='log-in-top'>\n//             <div className='log-in-container'>\n//                 <h2\n//                     className='log-in-container-h2'\n//                 >Welcome Back</h2>\n//                 <br></br>\n//                 <h3\n//                     className='log-in-container-h3'\n//                 >Email</h3>\n//                 {/* <p>A space must be left between each tag</p> */}\n//                 <Input\n//                     className={'log-in-input'}\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                 />\n//                 <br></br>\n//                 <h3\n//                     className='log-in-container-h3'\n//                 >Password</h3>\n//                 <Input\n//                     className={'log-in-input'}\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value.split(' '))}\n//                 />\n//                 <br></br>\n//                 <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n//                     <button\n//                         className='log-in-container-button'\n//                         type='button' onClick={handleSubmission}\n//                     >Submit</button>\n//                     <br></br>\n//                     <button\n//                         className='log-in-container-button'\n//                         type='button' onClick={() => {\n//                             setPassword('')\n//                             setEmail('')\n//                             setLoginCard(false)\n//                         }}\n//                     >Cancel</button>\n//                 </div>\n//                 <br />\n//                 {!showMessage && < br />}\n//                 {showMessage && <h4>Wrong input please try again</h4>}\n//             </div>\n//         </div >\n//     )\n// }\n// export default Login;","import { useState } from 'react';\nimport Input from '../input/Input'\nimport Api from '../../api/Api'\n// import './sign.css'\n\nconst Sign = ({ setIsSingCardOpen, setIsUserLogedIn }) => {\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n    const [userName, setUserName] = useState('');\n    const [email, setEmail] = useState('');\n    const [showMessage, setShowMessage] = useState(false);\n    const [message, setMessage] = useState('')\n\n\n    const handleSubmission = async () => {\n        if (passwordConfirm !== password) {\n            setShowMessage(true)\n            setMessage('Your password conformation is in currect')\n            setTimeout(() => {\n                setShowMessage(false)\n            }, 2000)\n        } else if (password.length < 8) {\n            setShowMessage(true)\n            setMessage('Your password must be at least 8 digits')\n            setTimeout(() => {\n                setShowMessage(false)\n            }, 2000)\n        } else {\n            try {\n                const res = await Api.post('/users/', {\n                    password: password.toString(),\n                    email,\n                    userName\n                })\n                localStorage.clear()\n                localStorage.setItem('name', res.data.user.userName)\n                localStorage.setItem('token', res.data.token)\n                setIsSingCardOpen(false)\n                setIsUserLogedIn(true)\n            } catch (e) {\n                setMessage('Error in email Check the spelling and make sure you are not already registered')\n                setShowMessage(true)\n                setTimeout(() => {\n                    setShowMessage(false)\n                }, 2000)\n            }\n        }\n    }\n\n\n    return (\n        <div className='glow-card-background'>\n            <div className='glow-card-container'>\n                <h2\n                    className='glow-card-h1 font-red-shadow-red'\n                >Ready to get started</h2>\n                <h3\n                    className='glow-card-h4 font-white-shadow-green'\n                >Write your user name</h3>\n                {/* <p>A space must be left between each tag</p> */}\n                <Input\n                    className={'glow-card-input glow-card-h4'}\n                    value={userName}\n                    onChange={(e) => setUserName(e.target.value)}\n                />\n                <h3\n                    className='glow-card-h4 font-white-shadow-green'\n                // className='signin-container-h3'\n                >Enter your Email</h3>\n                {/* <p>A space must be left between each tag</p> */}\n                <Input\n                    className={'glow-card-input glow-card-h4'}\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <h3\n                    className='glow-card-h4 font-white-shadow-green'\n                >Choose password</h3>\n                <Input\n                    className={'glow-card-input glow-card-h4'}\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <h3\n                    className='glow-card-h4 font-white-shadow-green'\n                >Confirm your password</h3>\n                <Input\n                    className={'glow-card-input glow-card-h4'}\n                    value={passwordConfirm}\n                    onChange={(e) => setPasswordConfirm(e.target.value)}\n\n                />\n                <br></br>\n                {!showMessage && <div className='flex-space-between'>\n                    <button\n                        className='glow-card-button'\n                        type='button' onClick={() => handleSubmission()}\n                    >Submit</button>\n                    <button\n                        className='glow-card-button'\n                        type='button' onClick={() => {\n                            setPassword('')\n                            setEmail('')\n                            setIsSingCardOpen(false)\n                        }}\n                    >Cancel</button>\n                </div>}\n\n                {showMessage &&\n                    <h4 className='glow-card-h3 font-orange-shadow-red'>{message}</h4>\n                }\n            </div>\n        </div >\n    )\n}\nexport default Sign;\n// import { useState } from 'react';\n// import Input from '../input/Input'\n// import Api from '../../api/Api'\n// import './sign.css'\n\n// const Sign = ({ setLoginCard, setIsLoged }) => {\n//     const [password, setPassword] = useState('');\n//     const [passwordConfirm, setPasswordConfirm] = useState('');\n//     const [userName, setUserName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [showMessage, setShowMessage] = useState(false);\n//     const [message, setMessage] = useState('')\n\n\n//     const handleSubmission = async () => {\n//         if (passwordConfirm !== password) {\n//             setShowMessage(true)\n//             setTimeout(() => {\n//                 setShowMessage(false)\n//                 setMessage('Your password conformation is in currect')\n//             }, 2000)\n//         } else if (password.length < 8) {\n//             setShowMessage(true)\n//             setTimeout(() => {\n//                 setShowMessage(false)\n//                 setMessage('Your password must be at least 8 digits')\n//             }, 2000)\n//         } else {\n//             try {\n//                 const res = await Api.post('/users/', {\n//                     password: password.toString(),\n//                     email,\n//                     userName\n//                 })\n//                 localStorage.clear()\n//                 localStorage.setItem('name', res.data.user.userName)\n//                 localStorage.setItem('token', res.data.token)\n//                 setLoginCard(false)\n//                 setIsLoged(true)\n//                 console.log(localStorage.getItem('name'))\n//                 console.log(localStorage.getItem('token'))\n//             } catch (e) {\n//                 setShowMessage(true)\n//                 setTimeout(() => {\n//                     setShowMessage(false)\n//                     setMessage('Error in email Check the spelling and make sure you are not already registered')\n//                 }, 2000)\n//             }\n//         }\n//     }\n\n\n//     return (\n//         <div className='signin-top'>\n//             <div className='signin-container'>\n//                 <h2\n//                     className='signin-container-h2'\n//                 >Ready to get started</h2>\n//                 <h3\n//                     className='signin-container-h3'\n//                 >Write your user name</h3>\n//                 {/* <p>A space must be left between each tag</p> */}\n//                 <Input\n//                     className={'signin-input'}\n//                     value={userName}\n//                     onChange={(e) => setUserName(e.target.value)}\n//                 />\n//                 <h3\n//                     className='signin-container-h3'\n//                 // className='signin-container-h3'\n//                 >Enter your Email</h3>\n//                 {/* <p>A space must be left between each tag</p> */}\n//                 <Input\n//                     className={'signin-input'}\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                 />\n//                 <h3\n//                     className='signin-container-h3'\n//                 >Choose password</h3>\n//                 <Input\n//                     className={'signin-input'}\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                 />\n//                 <h3\n//                     className='signin-container-h3'\n//                 >Confirm your password</h3>\n//                 <Input\n//                     className={'signin-input'}\n//                     value={passwordConfirm}\n//                     onChange={(e) => setPasswordConfirm(e.target.value)}\n\n//                 />\n//                 <br></br>\n//                 <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n//                     <button\n//                         className='signin-container-button'\n//                         type='button' onClick={handleSubmission}\n//                     >Submit</button>\n//                     <button\n//                         className='signin-container-button'\n//                         type='button' onClick={() => {\n//                             setPassword('')\n//                             setEmail('')\n//                             setLoginCard(false)\n//                         }}\n//                     >Cancel</button>\n//                 </div>\n//                 <br />\n//                 {!showMessage && < br />}\n//                 {showMessage && <h4>{message}</h4>}\n//             </div>\n//         </div >\n//     )\n// }\n// export default Sign;","import { useState } from 'react';\nimport Login from '../../components/login/Login';\nimport Sign from '../../components/sign/sign';\n\nconst OpeningPage = ({ setIsUserLogedIn }) => {\n    //User press the Get Started button.\n    const [logOrSingCard, setLogOrSingCard] = useState(false)\n    //Sing button is pressed.\n    const [isSingCardOpen, setIsSingCardOpen] = useState(false)\n    //Log In button is pressed.\n    const [isloginCardOpen, setIsloginCardOpen] = useState(false)\n\n\n    return (\n        <>\n            <div className='glow-card-background'>\n                <div className='glow-card-container' style={{ height: '80vh', width: '80%' }}>\n                    <h1\n                        className='glow-card-h1 font-red-shadow-red upprcase'\n                    >A Beat Mor</h1>\n                    <h2\n                        className='glow-card-h2 font-white-shadow-green'\n                    >Tomorrow's sound starts today</h2>\n                    <h3\n                        className='glow-card-h3 font-white-shadow-green'\n                    >\n                        Is your head full of sounds? You have an idea for the beat of the next hit?</h3>\n                    <h2\n                        className='glow-card-h2 font-white-shadow-green'\n                    >Come and share...</h2>\n                    <h3\n                        className='glow-card-h3 font-white-shadow-green'\n                    >Upload your own unique sounds or use existing sounds Create the rhythm Add audio effects.\n                        Save and share and let the world experience your touch.</h3>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: !logOrSingCard ? 'center' : 'space-around ' }}>\n                        {!logOrSingCard && <button\n                            className='glow-card-button'\n                            onClick={() => {\n                                setLogOrSingCard(true);\n                            }\n                            }>Get started</button>}\n                        {logOrSingCard &&\n                            <>\n                                <button\n                                    className='glow-card-button'\n                                    onClick={() => setIsloginCardOpen(true)}>Login</button>\n                                <button\n                                    className='glow-card-button'\n                                    onClick={() => setIsSingCardOpen(true)}>Sing</button>\n                                {/* <button\n                                    className='glow-card-button'\n                                    onClick={() => setIsloginCardOpen(true)}>Guest</button> */}\n                            </>\n                        }\n                    </div>\n                </div>\n            </div>\n            {isloginCardOpen && <Login\n                setIsloginCardOpen={setIsloginCardOpen}\n                setIsUserLogedIn={setIsUserLogedIn}\n            />}\n            {isSingCardOpen && <Sign\n                setIsSingCardOpen={setIsSingCardOpen}\n                setIsUserLogedIn={setIsUserLogedIn}\n            />}\n        </>\n    )\n}\n\nexport default OpeningPage;\n// import { useState } from 'react';\n// import './openingPage.css';\n// import Login from '../../components/login/Login';\n// import Sign from '../../components/sign/sign';\n\n// const OpeningPage = ({ setIsLoged }) => {\n//     const [logOrSingCard, setLogOrSingCard] = useState(false)\n//     const [singCard, setSingCard] = useState(false)\n//     const [loginCard, setLoginCard] = useState(false)\n\n\n//     return (\n//         <>\n//             <div className='opening-page-container'>\n//                 <h1\n//                     className='opening-page-container-h1'\n//                 >A Beat Mor</h1>\n//                 <h2\n//                     className='opening-page-container-h2'\n//                 >Tomorrow's sound starts today</h2>\n//                 <h3\n//                     className='opening-page-container-h3'\n//                 >\n//                     Is your head full of sounds? You have an idea for the beat of the next hit?</h3>\n//                 <h2\n//                     className='opening-page-container-h2'\n//                 >Come and share...</h2>\n//                 <h3\n//                     className='opening-page-container-h3'\n//                 >Upload your own unique sounds or use existing sounds Create the rhythm Add audio effects.\n//                     Save and share and let the world experience your touch.</h3>\n//                 <br />\n//                 <div style={{ display: 'flex', justifyContent: !logOrSingCard ? 'center' : 'space-around ' }}>\n//                     {!logOrSingCard && <button\n//                         className='opening-page-container-button'\n//                         onClick={() => {\n\n//                             setLogOrSingCard(true)\n//                         }\n//                         }>Get started</button>}\n//                     {logOrSingCard &&\n//                         <>\n//                             <button\n//                                 className='opening-page-container-button'\n//                                 onClick={() => setLoginCard(true)}>Log in</button>\n//                             <button\n//                                 className='opening-page-container-button'\n//                                 onClick={() => setSingCard(true)}>Sing</button>\n//                         </>\n//                     }\n//                 </div>\n//             </div>\n//             {loginCard && <Login\n//                 setLoginCard={setLoginCard}\n//                 setIsLoged={setIsLoged}\n//             />}\n\n//             {singCard && <Sign\n//                 setLoginCard={setSingCard}\n//                 setIsLoged={setIsLoged}\n//             />}\n//         </>\n//     )\n// }\n\n// export default OpeningPage;","import { useState } from 'react'\nimport Api from '../../api/Api'\nimport Input from '../input/Input'\n// import Selector from '../selector/Selector'\nimport './addSound.css'\nconst AddSound = ({ setAddSoundIsOpen, setSelectedSound }) => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [isFilePicked, setIsFilePicked] = useState(false);\n    const [fileName, setFileName] = useState('');\n    const [tagsValue, setTagsValue] = useState(null);\n    // const selectorOptions = ['red', 'blue', 'green', 'yellow', 'ligth-blue', 'purpule']\n    // const [selectValue, setSelectVal] = useState(selectorOptions[0]);\n\n    const [userMessage, setUserMessage] = useState(null);\n    const [buttonText, setButtonText] = useState('Submit');\n\n\n    const getFileFromUser = (event) => {\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0])\n            setSelectedFile(reader);\n            setIsFilePicked(true);\n\n            if (event.target.files[0].name.match(/\\.wav$/)) {\n                setFileName(event.target.files[0].name.split('.wav')[0])\n            }\n            if (event.target.files[0].name.match(/\\.mp3$/)) {\n                setFileName(event.target.files[0].name.split('.mp3')[0])\n            }\n\n            setButtonText('Submit')\n        } else {\n            setIsFilePicked(false);\n        }\n    }\n    const handleSubmission = async () => {\n        if (!tagsValue) {\n            setUserMessage('File must have at least one tag')\n            setButtonText('Try Again')\n        } else {\n            if (isFilePicked) {\n                const token = localStorage.getItem('token')\n                // console.log(token)\n                const file = await selectedFile.result.split('data:audio/wav;base64,').join('')\n                try {\n                    const data = await Api.post('sounds', {\n                        name: fileName,\n                        audio: file,\n                        tags: tagsValue\n                    }, {\n                        headers: {\n                            \"Authorization\": `Bearer ${token}`\n                        }\n                    })\n\n                    setUserMessage('Succeeded')\n                    // setTimeout(() => {\n                    setUserMessage('')\n                    // }, 2000);\n                    setSelectedFile(null)\n                    setIsFilePicked(null)\n                    setFileName('')\n                    setTagsValue(null)\n                    console.log(data.data.name)\n                    setSelectedSound({\n                        name: data.data.name,\n                        id: data.data._id,\n                        audio: data.data.audio\n                    })\n                    setAddSoundIsOpen(false)\n                } catch (e) {\n                    setUserMessage('File name must be unique!')\n                    setButtonText('Try Again')\n                }\n            }\n        }\n    };\n\n    return (\n        <>\n            <div className='add-sound-top'>\n                <div className='add-sound-container'>\n                    <div className='add-sound-exit'\n                        onClick={() => setAddSoundIsOpen(false)}\n                    >\n                        X\n                    </div>\n                    <h2\n                        className='add-sound-container-h2'\n                    >Upload new sound</h2>\n                    <br className='add-sound-br'></br>\n                    <h3\n                        className='add-sound-container-h3'\n                    >Insert sound name</h3>\n                    <p\n                        className='add-sound-container-p'\n                    >Must be unique (auto fill when upload file)</p>\n                    <Input\n                        className={'add-sound-input'}\n                        value={fileName}\n                        onChange={(e) => setFileName(e.target.value)}\n                    />\n                    <br className='add-sound-br'></br>\n                    <h3\n                        className='add-sound-container-h3'\n                    >Insert sound tags</h3>\n                    <p\n                        className='add-sound-container-p'\n                    >A space must be left between each tag</p>\n                    <Input\n                        className={'add-sound-input'}\n                        value={tagsValue ? tagsValue.join(' ') : ''}\n                        onChange={(e) => setTagsValue(e.target.value.split(' '))}\n                    />\n                    <br className='add-sound-br'></br>\n                    {/* <div className='selector' >\n                    <div>\n                        <h3>Select color</h3>\n                        <p>That will be the button color</p>\n                    </div>\n                    <Selector\n                        className={'add-sound-input'}\n                        options={selectorOptions}\n                        value={selectValue}\n                        setValue={setSelectVal}\n                    />\n                </div>\n                <br></br> */}\n                    <label htmlFor=\"upload-sound\">Upload file</label>\n                    <div\n                        className='add-sound-button-div'>\n                        <input\n                            id='upload-sound'\n                            size=\"80\"\n                            type='file'\n                            accept='audio/mp3, audio/wav '\n                            onChange={getFileFromUser}\n                        />\n                        <div>\n                            {isFilePicked && <button\n                                className='add-sound-button'\n                                onClick={() => {\n                                    const newAudioTest = new Audio(`${selectedFile.result}`)\n                                    newAudioTest.play()\n                                }}\n                            >Test</button>}\n                            <button\n                                className='add-sound-button'\n                                type='button' onClick={handleSubmission}\n                            >{buttonText}</button>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div>\n                        {!userMessage && <br />}\n                        <p\n                            className='add-sound-container-p'\n                        >{userMessage}</p>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default AddSound;","const Selector = ({ value, options, setValue, className }) => {\n    const setOptions = () => {\n        return options.map(e => {\n            return <option key={e} id={e}>{e}</option>\n        })\n    }\n    return (\n        <select\n            className={className}\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n        >\n            {options && setOptions()}\n        </select>\n    )\n}\n\nexport default Selector;","import './searchSound.css'\nimport Selector from '../selector/Selector'\nimport { useEffect, useState } from 'react'\nimport Api from '../../api/Api'\nimport Input from '../input/Input'\n\n\nconst SearchSound = ({ setSearchSoundIsOpen, setSelected }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [isLoadingOnPage, setIsLoadingOnPage] = useState(false);\n\n    const [tagsOptions, setTagsOptions] = useState(null)\n    const [selectorVal, setSelectorVal] = useState(null)\n    // const [userMessage, setUserMessage] = useState('')\n\n    const [soundsList, setSoundsList] = useState([])\n    const [inputVal, setInputVal] = useState('')\n\n    const [selectedSound, setSelectedSound] = useState(null)\n    const [selectedSoundAudio, setSelectedSoundAudio] = useState(null)\n    const [selectedSoundAudioDetails, setSelectedSoundAudioDetails] = useState(null)\n\n\n\n    useEffect(() => {\n        const tagsRes = async () => {\n            try {\n                const tempRes = await Api.get('/sounds/tags')\n                setTagsOptions(await tempRes.data.sort())\n                // console.log(tempRes)\n                setSelectorVal(await tempRes.data[0])\n                setIsLoading(false)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        tagsRes()\n    }, [])\n\n\n    const handelSerchByTag = async () => {\n        setIsLoadingOnPage(true)\n        const tempSounds = await Api.get(`/sounds/tags/${selectorVal}`)\n        // console.log(tempSounds.data)\n        setSoundsList(tempSounds.data)\n        setIsLoadingOnPage(false)\n    }\n    const handelSerchByFreetext = async () => {\n        if (inputVal.length > 0) {\n            setIsLoadingOnPage(true)\n            const tempSounds = await Api.get(`/sounds/search/${inputVal}`)\n            // console.log(tempSounds)\n            // console.log(tempSounds.data)\n            setSoundsList(tempSounds.data)\n            setIsLoadingOnPage(false)\n        }\n    }\n    const handelSoundSelect = async (e) => {\n        if (selectedSound === e.target.id) {\n            setSelectedSound(null)\n        } else {\n            setIsLoadingOnPage(true)\n            setSelectedSound(e.target.id)\n            const res = await Api.get(`/sounds/${e.target.id}`)\n            const res2 = await res.data[0].audio\n            setSelectedSoundAudioDetails(await res.data[0])\n            setSelectedSoundAudio(new Audio(`data:audio/wav;base64,${res2}`))\n            setIsLoadingOnPage(false)\n        }\n    }\n    const playAudio = async () => {\n        setIsLoadingOnPage(true)\n        selectedSoundAudio.play()\n        // setSelectedSoundAudio(res2)\n        // const tempAudio = new Audio(res2)\n        // tempAudio.play()\n        setIsLoadingOnPage(false)\n    }\n\n    const setList = () => {\n        return soundsList.map((e, i) => {\n            return (\n                <div\n                    className='search-sound-result-container'\n                    key={`soundList-${i}`}\n                >\n                    <div\n                        onClick={(e) => handelSoundSelect(e)}\n                        id={e._id}\n\n                        className={`search-sound-file-sound ${selectedSound === e._id ? 'search-sound-file-sound-selected' : ''}`}\n                    >{e.name}\n                        <div style={{ display: 'flex' }}\n                            id={e._id}\n                        >\n                            <span>tags: </span>\n                            {e.tags.map((el, i) => {\n                                return <span\n                                    id={e._id}\n                                    style={{ marginLeft: '0.6rem' }}\n                                    key={`soundlist-tag-${i}`}>{el}</span>\n                            })\n                            }\n                        </div>\n                    </div>\n                    {selectedSound === e._id &&\n                        <button\n                            className='search-sound-button'\n                            style={{ color: 'var(--led-red)' }}\n                            onClick={() => playAudio()}\n                        >Test</button>}\n                </div>\n            )\n        })\n    }\n\n    return (\n        <>{isLoadingOnPage && <div className='search-sound-loading-on-page'></div>}\n            <div className='search-sound-top'>\n                <div className=\"search-sound-container\">\n                    {!isLoading && <>\n                        <div className='add-sound-exit'\n                            onClick={() => setSearchSoundIsOpen(false)}\n                        >X</div>\n                        <h2 className=\"search-sound-container-h2\">Search sound</h2>\n                        <div className='search-sound-button-div'>\n                            <h3 className=\"search-sound-container-h3\">Search by tag name:</h3>\n                            <Selector\n                                value={selectorVal}\n                                options={tagsOptions}\n                                setValue={setSelectorVal}\n                                className={'search-sound-selector'}\n                            />\n                            <button\n                                className='search-sound-button'\n                                onClick={() => handelSerchByTag()}\n                            >Search</button>\n                        </div>\n                        <div className='search-sound-button-div'>\n                            <h3 className=\"search-sound-container-h3\">Search by sound name:</h3>\n                            <Input\n                                className={'search-sound-input'}\n                                value={inputVal}\n                                onChange={(e) => setInputVal(e.target.value)}\n                            />\n                            <button\n                                className='search-sound-button'\n                                onClick={() => handelSerchByFreetext()}\n                            >Search</button>\n                        </div>\n                        <div className='search-sound-results'>\n                            {soundsList.length > 0 && setList()}\n                        </div>\n                        <button\n                            className='search-sound-button'\n                            onClick={() => {\n                                setSearchSoundIsOpen(false)\n                                setSelected(\n                                    {\n                                        name: selectedSoundAudioDetails.name,\n                                        id: selectedSoundAudioDetails._id,\n                                        audio: selectedSoundAudioDetails.audio\n\n                                    })\n                            }\n                            }\n                        >\n                            Submit\n                    </button>\n                    </>}\n                </div>\n            </div >\n        </>\n    )\n}\n\nexport default SearchSound;","import './create.css'\nimport AddSound from '../../components/addSound/AddSound'\nimport { useEffect, useState } from 'react'\nimport Selector from '../../components/selector/Selector'\nimport Api from '../../api/Api'\nimport SearchSound from '../../components/searchSound/SearchSound'\nimport Input from '../../components/input/Input'\n\nconst Create = () => {\n    const [addSoundIsOpen, setAddSoundIsOpen] = useState(false)\n    const [searchSoundIsOpen, setSearchSoundIsOpen] = useState(false)\n\n    const [fileIsSelected, setFileIsSelected] = useState(false)\n    const [selectedSound, setSelectedSound] = useState(null)\n    const [fileSelectedName, setFileSelectedName] = useState('')\n\n    const [arr, setArr] = useState(new Array(32).fill({ color: '' }))\n\n    const [selectorVal, setSelectorVal] = useState('purpule')\n    const selectorOps = ['ligth-blue', 'purpule', 'red', 'yellow', 'blue', 'green',];\n    const [collectionName, setCollectionName] = useState('')\n\n\n    useEffect(() => {\n        if (selectedSound) {\n            setFileSelectedName(selectedSound.name)\n        }\n    }, [selectedSound])\n\n\n    const padHandler = (e) => {\n        const index = e.target.id.replace('pad-num-', '')\n        if (fileIsSelected && selectedSound) {\n            const tempArr = arr;\n            tempArr[index] = {\n                ...tempArr[index],\n                id: selectedSound.id,\n                audio: selectedSound.audio,\n                name: selectedSound.name,\n                color: selectorVal\n            }\n            setFileIsSelected(false)\n            setArr(tempArr)\n        } else {\n            if (arr[index].id) {\n                const test = async () => {\n                    const audio = new Audio(`data:audio/mp3;base64,${arr[index].audio}`)\n                    await audio.play()\n                }\n                test()\n            }\n        }\n    }\n\n    const insertPads = (formIndex) => {\n        const tempMap = arr.filter((e, i) => {\n            return i >= formIndex && i < formIndex + 6\n        })\n        return <div className='pads-grid'>\n            {tempMap.map((e, i) => <div\n                className={`single-pad ${arr[formIndex + i].color}`}\n                key={`create-pad-${formIndex + i}`}\n                id={`pad-num-${formIndex + i}`}\n                onClick={padHandler}\n            ></div>)}\n        </div>\n    }\n\n    const saveCollection = async () => {\n        const tempArr = arr.filter(e => e.id)\n        if (tempArr.length === 24 && collectionName.length > 0) {\n            try {\n                const token = localStorage.getItem('token')\n                // console.log(token)\n                const tempArr2 = tempArr.map(e => {\n                    return { id: e.id, color: e.color }\n                })\n                console.log(tempArr2)\n                const save = await Api.post('/sound-collection', {\n                    name: collectionName,\n                    sounds: tempArr2\n                },\n                    {\n                        headers: {\n                            \"Authorization\": `Bearer ${token}`\n                        }\n                    }\n                )\n                console.log(save)\n            } catch (e) {\n                console.log('the name is in use choose a differnt collection name')\n            }\n        }\n    }\n    return (\n        <>\n            {searchSoundIsOpen && <SearchSound\n                setSearchSoundIsOpen={setSearchSoundIsOpen}\n                setSelected={setSelectedSound}\n            />}\n            {addSoundIsOpen && <AddSound\n                setAddSoundIsOpen={setAddSoundIsOpen}\n                setSelectedSound={setSelectedSound}\n            />}\n            <div className='create-container'>\n                <div className='create-nav'>\n                    <h2 className=' create-h2'>Fill the board with sound</h2>\n                    <div className='create-buttons-div'>\n                        <h3 className='create-h3'>Upload or choose other sound, than fill the pad board as your wish</h3>\n                    </div>\n                    <div className='create-buttons-div'>\n                        <button\n                            className='create-button'\n                            type='button'\n                            onClick={() => setAddSoundIsOpen(true)}\n                        >Upload sound</button>\n\n                        <button\n                            className='create-button'\n                            type='button'\n                            onClick={() => setSearchSoundIsOpen(true)}\n                        >Search sound</button>\n\n                    </div>\n\n                    <div\n                        className={`${fileIsSelected ? 'create-file-sound-selected' : ''} create-file-sound`}\n                        onClick={() => setFileIsSelected(!fileIsSelected)}\n                    ><span\n                        style={{ color: `var(--led-${selectorVal})` }}\n                    >SOUND: </span>{fileSelectedName}</div>\n\n                    <div className='create-buttons-div'>\n                        <h3\n                            className='create-h3'\n                        >Button color</h3>\n                        <Selector\n                            value={selectorVal}\n                            options={selectorOps}\n                            setValue={setSelectorVal}\n                            className={'create-selector'}\n                        />\n                    </div>\n                </div>\n\n\n\n                <div className='pads-container'>\n                    <div className='pads-container-san'>\n                        {insertPads(0)}\n                        {insertPads(7)}\n                        {insertPads(13)}\n                        {insertPads(19)}\n                    </div>\n                    <div\n                        style={{ display: 'flex', justifyContent: 'space-around', width: '100%', padding: '0 1rem' }}\n                    >\n                        <h3\n                            className='create-h3'\n                        >Collection Name:</h3>\n                        <Input\n                            className={\"create-selector-input\"}\n                            value={collectionName}\n                            onChange={(e) => setCollectionName(e.target.value)}\n                        />\n                        <button\n                            className='create-button'\n                            onClick={() => saveCollection()}\n\n                        >Save</button>\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}\nexport default Create;","import './horizontalRange.css'\nconst HorizontalRange = ({ value, setValue\n    , max, min }) => {\n    return (\n        <div style={{ padding: '0.3rem 1rem', background: 'none', width: '50%' }}>\n            <input\n                min={min}\n                max={max}\n                type='range'\n                value={value}\n                onChange={setValue}\n            ></input>\n        </div>\n\n    )\n}\n\nexport default HorizontalRange;","import { useEffect, useState } from 'react'\n\nconst BeatBox = ({ boxTiming, id, thisClass, padIndex, currentColor, rythemArr, setMyRythemArr }) => {\n    const [boxIsPressed, setBoxIsPressed] = useState(null)\n\n    useEffect(() => {\n        setBoxIsPressed(rythemArr[id - 1])\n    }, [rythemArr, id, padIndex])\n    return (\n        <div\n            className={`${thisClass} ${boxTiming === id && !boxIsPressed ? 'play-mode-boxIsOn' : ''}\n            ${boxIsPressed && boxTiming !== id && `${currentColor} empty-center-of-box`}\n            ${boxIsPressed && boxTiming === id && currentColor}\n            `}\n            onMouseDown={() => {\n                const tempArr = [...rythemArr]\n                if (!boxIsPressed) {\n                    tempArr[32] = tempArr[32] === false ? 1 : tempArr[32] + 1\n                } else {\n                    tempArr[32] = tempArr[32] === 1 ? false : tempArr[32] - 1\n                }\n                setBoxIsPressed(!boxIsPressed)\n                tempArr[id - 1] = !tempArr[id - 1]\n                setMyRythemArr(tempArr, padIndex)\n            }}\n        >\n\n        </div>\n    )\n}\n\nexport default BeatBox;","import { useEffect, useState } from \"react\"\nimport { decode } from 'base64-arraybuffer'\nconst PadBox = (\n    { id,\n        thisClass,\n        padIndex,\n        setPadIndex,\n        so,\n        boxTiming,\n        rythemObj,\n        setCurrentColor,\n        padsStatus,\n        setMyPadsStatus,\n        ctx,\n        gain\n    }) => {\n\n    const [offSet1, setOffSet1] = useState(0)\n\n    useEffect(() => {\n        if (padsStatus && rythemObj[boxTiming - 1] === true) {\n            const getFile = async (filePath) => {\n                const arrayBuffer = decode(filePath)\n                const audioBuffer = await ctx.decodeAudioData(arrayBuffer)\n                return audioBuffer;\n            }\n            const playClip = async (clip, outPut) => {\n                if (ctx.state === 'suspended') {\n                    ctx.resume()\n                }\n                const clipAudioBuffer = await getFile(clip)\n                const myGain = await ctx.createGain()\n                myGain.gain.value = so.gain\n                myGain.connect(outPut)\n\n                let biquadFilter = await ctx.createBiquadFilter();\n                biquadFilter.frequency.value = so.frequency\n                biquadFilter.detune.value = so.detune\n                // biquadFilter.detune.value = 0\n                biquadFilter.type = so.type\n                biquadFilter.connect(myGain)\n                // biquadFilter.type = 'lowpass'\n\n                const clipSource = ctx.createBufferSource()\n                clipSource.buffer = clipAudioBuffer;\n                clipSource.connect(biquadFilter);\n\n                // console.log(clipSource)\n                if (offSet1 === 0) {\n                    clipSource.start()\n                    // console.log(ctx.currentTime - offSet)\n                    // console.log(myGain)\n                    setOffSet1(0)\n                } else {\n                    clipSource.start(0, ctx.currentTime - offSet1)\n                }\n            }\n            playClip(so.myAudio, gain)\n\n        }\n\n    }, [boxTiming, rythemObj, id, so, padsStatus, padIndex, gain, offSet1, ctx])\n\n\n\n\n\n    const userClick = () => {\n        setPadIndex(id)\n        const somethingInOn = rythemObj.find(e => e === true)\n        if (somethingInOn && padIndex === id) {\n            setMyPadsStatus(padIndex, !padsStatus)\n        }\n        setCurrentColor(so.color)\n    }\n\n    const setIcon = () => {\n        if (rythemObj[32]) {\n            if (padsStatus) {\n                return <i className=\"fas fa-undo fa-1x\"></i>\n            }\n            return <i className=\"fas fa-pause fa-1x\"></i>\n        }\n        return ''\n    }\n\n\n\n    return (\n        <>\n            <div\n                className={`${thisClass} \n            ${so.color}\n            ${padIndex === id ? `buttonOn` : 'buttonOff'}\n            ${padsStatus && rythemObj[boxTiming - 1] === true ? `play-mode-boxIsOn` : 'buttonOff'}`\n                }\n                onMouseDown={userClick}\n            >\n                <div className='play-mode-pad-icon'>{setIcon()}</div>\n\n            </div >\n        </>\n    )\n}\n\nexport default PadBox;","import React, { useEffect, useState } from 'react';\nimport HorizontalRange from '../../components/horizontalRange/HorizontalRange'\nimport ReactInterval from 'react-interval';\nimport './playModePage.css'\nimport BeatBox from '../../components/beatBox/BeatBox'\nimport PadBox from '../../components/‏‏padBox/padBox'\n\n// import Sounds2 from '../../components/‏‏sounds/Sounds'\n\n\nconst PlayModePage = ({\n    ctx,\n    sounds,\n    setSounds,\n    gainNode,\n    biquadFilter\n}) => {\n    const [isLoading, setIsLoading] = useState(false)\n\n    const [bpm, setBpm] = useState(120)\n    const [realBpm, setRealBpm] = useState(120)\n    const [enabled, setEnabled] = useState(false)\n    const [beat, setBeat] = useState(0)\n    const [sequencerBeat, setSequencerBeat] = useState(0)\n    const [restart, setRestart] = useState(false)\n\n    const [rythemObj, setRythemObj] = useState({})\n    const [padIndex, setPadIndex] = useState(1)\n    const [currentColor, setCurrentColor] = useState('ligth-blue');\n\n    //---Is Loading------///\n    useEffect(() => {\n        if (sounds) {\n            setIsLoading(false)\n        } else {\n            setIsLoading(true)\n        }\n    }, [sounds])\n\n\n    //====AudioApi=====///\n    const [gain, setGain] = useState(0.75)\n    const [frequency, setFrequency] = useState(350)\n\n    useEffect(() => {\n        if (gainNode) {\n            gainNode.gain.value = gain\n        }\n        if (biquadFilter) {\n            biquadFilter.frequency.value = frequency\n            biquadFilter.type = 'notch'\n        }\n    }, [gainNode, gain, biquadFilter, frequency])\n\n    const setGainInSoundsObject = (e, type) => {\n        const tempSounds = [...sounds]\n        if (type === 'gain') {\n            tempSounds[padIndex - 1][type] = e.target.value / 100\n        } else if (type === 'type') {\n            tempSounds[padIndex - 1][type] = e.target.value\n        } else {\n            tempSounds[padIndex - 1][type] = e.target.value\n        }\n\n        setSounds(tempSounds)\n    }\n\n\n    //-----------\n    useEffect(() => {\n        let temp = {}\n        for (let i = 0; i < 24; i++) {\n            temp[i + 1] = new Array(33).fill(false)\n        }\n        temp.padsStatus = new Array(24).fill(true)\n        setRythemObj(temp)\n        // setSounds(Sounds2().map(e => {\n        //     return { ...e, gain: 0.75, frequency: 300 }\n        // }))\n    }, [restart, setSounds])\n\n    useEffect(() => {\n        setTimeout(() => {\n            setRealBpm(bpm)\n        }, 1000)\n    }, [bpm])\n\n    const setMyRythemObj = (arr, index) => {\n        const tempObj = { ...rythemObj, [index]: arr }\n        setRythemObj({ ...tempObj })\n    }\n    const setMyPadsStatus = (pad, bool) => {\n        const tempArr = [...rythemObj.padsStatus]\n        tempArr[pad - 1] = bool\n        const tempObj = { ...rythemObj, padsStatus: tempArr }\n        setRythemObj({ ...tempObj })\n    }\n\n\n    const insertDivs = (rowLength, girdClass, singleClass, fromNum) => {\n        const tempMap = new Array(rowLength).fill(1)\n        const temp = <div className={girdClass}>\n            {tempMap.map((e, i) => {\n                if (singleClass === 'play-mode-single-sequencer') {\n                    return (\n                        <BeatBox\n                            key={`${singleClass}${fromNum + i}`}\n                            thisClass={singleClass}\n                            boxTiming={sequencerBeat}\n                            id={fromNum + i}\n                            padIndex={padIndex}\n                            currentColor={currentColor}\n                            rythemArr={rythemObj[`${padIndex}`]}\n                            setMyRythemArr={setMyRythemObj}\n                        />\n                    )\n                } else {\n                    return (\n                        <PadBox\n                            key={`${singleClass}${fromNum + i}`}\n                            thisClass={singleClass}\n                            id={fromNum + i}\n                            padIndex={padIndex}\n                            setPadIndex={setPadIndex}\n                            boxTiming={sequencerBeat}\n                            rythemObj={rythemObj[`${fromNum + i}`]}\n                            setCurrentColor={setCurrentColor}\n                            padsStatus={rythemObj.padsStatus[fromNum + i - 1]}\n                            setMyPadsStatus={setMyPadsStatus}\n\n                            ctx={ctx}\n                            gain={biquadFilter}\n                            so={sounds[fromNum + i - 1]}\n                        />\n                    )\n                }\n            })}\n        </div>\n        return temp\n    }\n    const start = () => {\n        if (enabled) {\n            setBeat(0)\n            setSequencerBeat(0)\n        }\n        setEnabled(!enabled)\n    }\n    const stop = () => {\n        setRestart(!restart)\n        start()\n    }\n\n    return (\n        <>\n            {isLoading && <h1 style={{ color: 'white' }}>Loading Spinner</h1>}\n            {!isLoading && <>\n                <ReactInterval timeout={60000 / realBpm / 4} enabled={enabled}\n                    callback={() => {\n                        setBeat((beat + 1))\n                        setSequencerBeat(sequencerBeat < 32 ? sequencerBeat + 1 : 1)\n                    }}\n                />\n                {sounds && ctx &&\n                    <div className='play-mode-container'>\n                        <div className='play-mode-sequencer-container'>\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 1)}\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 9)}\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 17)}\n                            {insertDivs(8, 'play-mode-sequencer-grid', 'play-mode-single-sequencer', 25)}\n                    BPM {bpm}\n                            <HorizontalRange\n                                value={bpm}\n                                setValue={(e) => { setBpm(e.target.value) }}\n                                max={'220'}\n                                min={'60'} />\n                            <HorizontalRange\n                                value={gain * 100} setValue={(e) => {\n                                    setGain(e.target.value / 100)\n                                }}\n                                max={'100'}\n                                min={'0'}\n                            />\n                                Gain {gain}\n                            <HorizontalRange\n                                value={frequency} setValue={(e) => {\n                                    setFrequency(e.target.value)\n                                }}\n                                max={'4000'}\n                                min={'0'}\n                            />\n                            frequency {frequency}\n                            <br />\n                            {sequencerBeat}\n                        </div>\n                        <div className='play-mode-pads-container'>\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 1)}\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 7)}\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 13)}\n                            {insertDivs(6, 'play-mode-sequencer-grid', 'play-mode-single-pad', 19)}\n                            {beat}\n                            <div style={{ display: 'flex', background: 'none' }}>\n                                <HorizontalRange\n                                    value={sounds[padIndex - 1].gain * 100} setValue={(e) => {\n                                        setGainInSoundsObject(e, 'gain')\n                                        // setGain(e.target.value / 100)\n                                    }}\n                                    max={'100'}\n                                    min={'0'}\n                                />\n                                <HorizontalRange\n                                    value={sounds[padIndex - 1].frequency} setValue={(e) => {\n                                        setGainInSoundsObject(e, 'frequency')\n                                    }}\n                                    max={'2000'}\n                                    min={'0'}\n                                />\n                                <HorizontalRange\n                                    value={sounds[padIndex - 1].detune} setValue={(e) => {\n                                        setGainInSoundsObject(e, 'detune')\n                                    }}\n                                    max={'4000'}\n                                    min={'-4000'}\n                                />\n                                <div >\n                                    <select\n\n                                        value={sounds[padIndex - 1].type}\n                                        onChange={(e) => {\n                                            setGainInSoundsObject(e, 'type')\n                                        }}>\n                                        <option value='allpass'>Allpass</option>\n                                        <option value='lowpass'>Lowpass</option>\n                                        <option value='highpass'>Highpass</option>\n                                        <option value='bandpass'>Bandpass</option>\n                                        <option value='lowshelf'>Lowshelf</option>\n                                        <option value='highshelf'>Highshelf</option>\n                                        <option value='peaking'>Peaking</option>\n                                        <option value='notch'>Notch</option>\n                                    </select>\n\n                                    <button\n                                        onClick={() => start()}>Start</button>\n                                    <button onClick={() => stop()}>Clear</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div >}\n            </>}\n        </>\n    )\n}\n\nexport default PlayModePage;","import PlayModePage from './PlayModePage'\nimport { useState, useEffect } from 'react'\n// import Sounds2 from '../../components/‏‏sounds/Sounds'\n\nimport axios from 'axios'\nimport Api from '../../api/Api'\nimport { Redirect } from 'react-router-dom'\n\n\nconst App = ({ consoleIsOpen, setConsoleIsOpen, currentCollection }) => {\n    const [isOn, setIsOn] = useState(consoleIsOpen)\n    const [ctx, setCtx] = useState(null)\n    const [gainNode, setGainNode] = useState(null)\n    const [biquadFilter, setBiquadFilter] = useState(null)\n    const [sounds, setSounds] = useState(null)\n\n\n\n\n    useEffect(() => {\n        if (currentCollection) {\n\n            if (isOn)\n                setCtx(new AudioContext())\n\n            const tempEffectsArr = new Array(24).fill({\n                frequency: 350,\n                detune: 0,\n                type: 'notch',\n                gain: 0.75\n            })\n            //fetch sounds \n            const fetchSounds = async () => {\n                const arrRes = await Api.get(`/sound-collection/${currentCollection}`)\n                const arrData = arrRes.data[0].sounds\n                const arrDataLinks = arrData.map(async (e) => {\n                    return await Api.get(`/sounds/${e.id}`)\n                })\n\n\n\n                let arrDataSounds = null;\n                await axios.all(arrDataLinks)\n                    .then(axios.spread((...responses) => {\n                        let tempArr = [];\n                        for (let i = 0; i < 24; i++) {\n                            tempArr.push({\n                                myAudio: responses[i].data[0].audio,\n                                color: arrData[i].color,\n                                ...tempEffectsArr[i]\n                            })\n                        }\n                        arrDataSounds = tempArr\n                    })).catch(errors => {\n                    })\n                //------------------------\n                // console.log(arrDataSounds)\n                console.log(arrRes)\n                // return arrDataSounds\n                setSounds(arrDataSounds)\n            }\n\n            fetchSounds()\n\n        } else {\n            setConsoleIsOpen(false)\n        }\n        // console.log(Sounds2())\n        // setSounds(fetchSounds())\n        // setSounds(Sounds2())\n    }, [isOn, currentCollection, setConsoleIsOpen])\n\n\n\n    useEffect(() => {\n\n        if (ctx && !gainNode) {\n            setGainNode(ctx.createGain())\n            setBiquadFilter(ctx.createBiquadFilter())\n        }\n    }, [ctx, gainNode])\n\n    useEffect(() => {\n        if (gainNode) {\n            gainNode.connect(ctx.destination)\n            // setRecord(new Recorder(gainNode))\n        }\n        if (biquadFilter) {\n            biquadFilter.connect(gainNode)\n        }\n    }, [gainNode, ctx, biquadFilter,])\n\n    return (\n        <>\n            {!currentCollection && <Redirect to='/'></Redirect >}\n            {/* {console.log(isLoading)} */}\n\n            {currentCollection &&\n                <>\n                    <button\n                        onClick={() => {\n                            if (!isOn) {\n                                setIsOn(true)\n                            } else {\n                                setCtx(null)\n                                setIsOn(false)\n                                setGainNode(null)\n                                setBiquadFilter(null)\n                                setSounds(null)\n                            }\n                        }\n                        }\n                    >get ctx</button>\n                    <PlayModePage\n                        ctx={ctx}\n                        sounds={sounds}\n                        setSounds={setSounds}\n                        gainNode={gainNode}\n                        biquadFilter={biquadFilter}\n                    />\n                </>}\n        </>\n    );\n}\n\nexport default App;\n\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from '../pages/home/Home'\nimport Navbar from '../components/navbar/Navbar'\nimport OpeningPage from '../pages/openingPage/OpeningPage'\nimport Create from '../pages/create/Create'\nimport StarterPlayModePage from '../pages/‏‏playModePage/StarterPlayModePage'\nimport Spinner from './spinner/Spinner';\n\n\nconst App = () => {\n  //Cheack if the playing console is open.\n  const [consoleIsOpen, setConsoleIsOpen] = useState(false);\n  //Current collection selected.\n  const [currentCollection, setCurrentCollection] = useState(null);\n\n  //check if the user is loged.\n  const [isUserLogedIn, setIsUserLogedIn] = useState(false);\n\n  //Set the user name.\n  const [userName, setUserName] = useState(null)\n\n  // Loding spinner bool\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    //Set loading spinner to true\n    setIsLoading(true);\n    //if token is saved in the local storage:\n    // - set the state isLoged to true.\n    // - set the state userName to the name from local storage.\n    if (localStorage.token && !isUserLogedIn) {\n      setIsUserLogedIn(true)\n      setUserName(localStorage.getItem('name'))\n    }\n    //Set loading spinner to false\n    setIsLoading(false);\n  }, [isUserLogedIn])\n\n  return (\n    <>\n      <>\n        {isLoading && <Spinner />}\n        {/* { console.log(window.location.href)} */}\n        {!isLoading && !isUserLogedIn && <OpeningPage setIsUserLogedIn={setIsUserLogedIn} />}\n        <BrowserRouter>\n          {!isLoading && isUserLogedIn && <>\n            {!consoleIsOpen && <Navbar userName={userName} />}\n            <Route path=\"/\" exact\n              component={() =>\n                <Home\n                  setConsoleIsOpen={setConsoleIsOpen}\n                  consoleIsOpen={consoleIsOpen}\n                  setCurrentCollection={setCurrentCollection}\n                  setIsLoading={setIsLoading}\n                  isLoading={isLoading}\n                />\n              }\n            >\n            </Route>\n            < Route path=\"/home\" exact component={() =>\n              <Home\n                setConsoleIsOpen={setConsoleIsOpen}\n                consoleIsOpen={consoleIsOpen}\n                setCurrentCollection={setCurrentCollection}\n                setIsLoading={setIsLoading}\n                isLoading={isLoading}\n              />\n            }\n            />\n            < Route path=\"/create\" exact component={() =>\n              <Create />\n            }\n            />\n            < Route path=\"/console\" exact component={() =>\n              <StarterPlayModePage\n                consoleIsOpen={consoleIsOpen}\n                setConsoleIsOpen={setConsoleIsOpen}\n                currentCollection={currentCollection}\n                setcurrentCollection={setCurrentCollection}\n              />\n            }\n            />\n          </>}\n        </BrowserRouter>\n      </>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}